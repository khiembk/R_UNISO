; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-p6:32:32-p7:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@global_smem = external addrspace(3) global [0 x i8], align 16

define ptx_kernel void @triton_per_fused_add_3(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, i32 %4, i32 %5, i32 %6, ptr addrspace(1) readnone captures(none) %7) local_unnamed_addr #0 !dbg !5 {
  %9 = tail call i32 @llvm.nvvm.read.ptx.sreg.ctaid.y(), !dbg !8
  %10 = icmp samesign ult i32 %9, 8, !dbg !9
  %11 = tail call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !dbg !10
  %12 = icmp samesign ult i32 %11, 64, !dbg !11
  %13 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %14 = and i32 %13, 31, !dbg !12
  %15 = lshr i32 %13, 5, !dbg !12
  %16 = and i32 %13, 63, !dbg !12
  %17 = shl i32 %11, 6, !dbg !13
  %18 = or disjoint i32 %16, %17, !dbg !14
  %19 = shl nuw nsw i32 %9, 12, !dbg !15
  %20 = add i32 %18, %19, !dbg !16
  %21 = sext i32 %20 to i64, !dbg !17
  %22 = getelementptr float, ptr addrspace(1) %0, i64 %21, !dbg !17
  %23 = and i1 %12, %10, !dbg !18
  %24 = tail call i64 asm sideeffect "mov.u64 $0, 0x0;\0A\09createpolicy.fractional.L2::evict_last.b64 $0, 1.0;", "=l"() #5, !dbg !19
  %25 = tail call i32 asm sideeffect "mov.u32 $0, $1;\0A\09@$4 ld.global.L1::evict_last.L2::cache_hint.b32 { $0 }, [ $2 + 0 ], $3;", "=r,r,l,l,b"(i32 0, ptr addrspace(1) %22, i64 %24, i1 %23) #5, !dbg !19
  %26 = bitcast i32 %25 to float, !dbg !19
  %27 = shl nuw nsw i32 %16, 3, !dbg !20
  %28 = shl i32 %11, 9, !dbg !21
  %29 = add i32 %28, %9, !dbg !22
  %30 = add i32 %29, %27, !dbg !23
  %31 = sext i32 %30 to i64, !dbg !24
  %32 = getelementptr float, ptr addrspace(1) %1, i64 %31, !dbg !24
  %33 = tail call i64 asm sideeffect "mov.u64 $0, 0x0;\0A\09createpolicy.fractional.L2::evict_last.b64 $0, 1.0;", "=l"() #5, !dbg !25
  %34 = tail call i32 asm sideeffect "mov.u32 $0, $1;\0A\09@$4 ld.global.L1::evict_last.L2::cache_hint.b32 { $0 }, [ $2 + 0 ], $3;", "=r,r,l,l,b"(i32 0, ptr addrspace(1) %32, i64 %33, i1 %23) #5, !dbg !25
  %35 = bitcast i32 %34 to float, !dbg !25
  %36 = fadd float %26, %35, !dbg !26
  %37 = select i1 %23, float %36, float 0xFFF0000000000000, !dbg !27
  %38 = bitcast float %37 to i32, !dbg !28
  %39 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %38, i32 16, i32 31), !dbg !28
  %40 = bitcast i32 %39 to float, !dbg !28
  %41 = fcmp ogt float %37, %40, !dbg !32
  %42 = fcmp uno float %37, 0.000000e+00, !dbg !33
  %43 = or i1 %41, %42, !dbg !34
  %44 = select i1 %43, float %37, float %40, !dbg !35
  %45 = bitcast float %44 to i32, !dbg !28
  %46 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %45, i32 8, i32 31), !dbg !28
  %47 = bitcast i32 %46 to float, !dbg !28
  %48 = fcmp ogt float %44, %47, !dbg !32
  %49 = fcmp uno float %44, 0.000000e+00, !dbg !33
  %50 = or i1 %48, %49, !dbg !34
  %51 = select i1 %50, float %44, float %47, !dbg !35
  %52 = bitcast float %51 to i32, !dbg !28
  %53 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %52, i32 4, i32 31), !dbg !28
  %54 = bitcast i32 %53 to float, !dbg !28
  %55 = fcmp ogt float %51, %54, !dbg !32
  %56 = fcmp uno float %51, 0.000000e+00, !dbg !33
  %57 = or i1 %55, %56, !dbg !34
  %58 = select i1 %57, float %51, float %54, !dbg !35
  %59 = bitcast float %58 to i32, !dbg !28
  %60 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %59, i32 2, i32 31), !dbg !28
  %61 = bitcast i32 %60 to float, !dbg !28
  %62 = fcmp ogt float %58, %61, !dbg !32
  %63 = fcmp uno float %58, 0.000000e+00, !dbg !33
  %64 = or i1 %62, %63, !dbg !34
  %65 = select i1 %64, float %58, float %61, !dbg !35
  %66 = bitcast float %65 to i32, !dbg !28
  %67 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %66, i32 1, i32 31), !dbg !28
  %68 = bitcast i32 %67 to float, !dbg !28
  %69 = fcmp ogt float %65, %68, !dbg !32
  %70 = fcmp uno float %65, 0.000000e+00, !dbg !33
  %71 = or i1 %69, %70, !dbg !34
  %72 = and i32 %15, 1, !dbg !28
  %73 = icmp eq i32 %14, 0, !dbg !28
  %74 = getelementptr float, ptr addrspace(3) @global_smem, i32 %72, !dbg !28
  %75 = select i1 %71, i32 %66, i32 %67, !dbg !35
  %76 = insertelement <1 x i32> poison, i32 %75, i64 0, !dbg !28
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %74, <1 x i32> %76, i1 %73) #5, !dbg !28
  tail call void @llvm.nvvm.barrier.cta.sync.aligned.all(i32 0), !dbg !28
  %77 = icmp samesign ult i32 %13, 2, !dbg !28
  %78 = getelementptr float, ptr addrspace(3) @global_smem, i32 %13, !dbg !28
  %79 = tail call i32 asm sideeffect "@$2 ld.shared.b32 $0, [ $1 + 0 ];", "=r,r,b"(ptr addrspace(3) %78, i1 %77) #5, !dbg !28
  %80 = bitcast i32 %79 to float, !dbg !28
  %81 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %79, i32 1, i32 31), !dbg !28
  %82 = bitcast i32 %81 to float, !dbg !28
  %83 = fcmp ogt float %80, %82, !dbg !32
  %84 = fcmp uno float %80, 0.000000e+00, !dbg !33
  %85 = or i1 %84, %83, !dbg !34
  %86 = icmp eq i32 %13, 0, !dbg !28
  %87 = select i1 %85, i32 %79, i32 %81, !dbg !35
  %88 = insertelement <1 x i32> poison, i32 %87, i64 0, !dbg !28
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %78, <1 x i32> %88, i1 %86) #5, !dbg !28
  tail call void @llvm.nvvm.barrier.cta.sync.aligned.all(i32 0), !dbg !28
  %89 = load float, ptr addrspace(3) @global_smem, align 16, !dbg !28
  %90 = fsub float %36, %89, !dbg !36
  %91 = fmul float %90, 0x3FF7154760000000, !dbg !37
  %92 = tail call float @llvm.nvvm.ex2.approx.f(float %91), !dbg !37
  %93 = select i1 %23, float %92, float 0.000000e+00, !dbg !38
  tail call void @llvm.nvvm.barrier.cta.sync.aligned.all(i32 0), !dbg !39
  %94 = bitcast float %93 to i32, !dbg !39
  %95 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %94, i32 16, i32 31), !dbg !39
  %96 = bitcast i32 %95 to float, !dbg !39
  %97 = fadd float %93, %96, !dbg !43
  %98 = bitcast float %97 to i32, !dbg !39
  %99 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %98, i32 8, i32 31), !dbg !39
  %100 = bitcast i32 %99 to float, !dbg !39
  %101 = fadd float %97, %100, !dbg !43
  %102 = bitcast float %101 to i32, !dbg !39
  %103 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %102, i32 4, i32 31), !dbg !39
  %104 = bitcast i32 %103 to float, !dbg !39
  %105 = fadd float %101, %104, !dbg !43
  %106 = bitcast float %105 to i32, !dbg !39
  %107 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %106, i32 2, i32 31), !dbg !39
  %108 = bitcast i32 %107 to float, !dbg !39
  %109 = fadd float %105, %108, !dbg !43
  %110 = bitcast float %109 to i32, !dbg !39
  %111 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %110, i32 1, i32 31), !dbg !39
  %112 = bitcast i32 %111 to float, !dbg !39
  %113 = fadd float %109, %112, !dbg !43
  %114 = bitcast float %113 to <1 x i32>, !dbg !39
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %74, <1 x i32> %114, i1 %73) #5, !dbg !39
  tail call void @llvm.nvvm.barrier.cta.sync.aligned.all(i32 0), !dbg !39
  %115 = tail call i32 asm sideeffect "@$2 ld.shared.b32 $0, [ $1 + 0 ];", "=r,r,b"(ptr addrspace(3) %78, i1 %77) #5, !dbg !39
  %116 = bitcast i32 %115 to float, !dbg !39
  %117 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %115, i32 1, i32 31), !dbg !39
  %118 = bitcast i32 %117 to float, !dbg !39
  %119 = fadd float %116, %118, !dbg !43
  %120 = bitcast float %119 to <1 x i32>, !dbg !39
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %78, <1 x i32> %120, i1 %86) #5, !dbg !39
  tail call void @llvm.nvvm.barrier.cta.sync.aligned.all(i32 0), !dbg !39
  %121 = load i32, ptr addrspace(3) @global_smem, align 16, !dbg !39
  %122 = shl nuw nsw i32 %9, 6, !dbg !44
  %123 = add nuw i32 %122, %11, !dbg !45
  %124 = sext i32 %123 to i64, !dbg !46
  %125 = getelementptr float, ptr addrspace(1) %2, i64 %124, !dbg !46
  %126 = icmp eq i32 %16, 0, !dbg !47
  %127 = bitcast float %89 to i32, !dbg !47
  %128 = and i1 %126, %23, !dbg !47
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %127, ptr addrspace(1) %125, i1 %128) #5, !dbg !47
  %129 = getelementptr float, ptr addrspace(1) %3, i64 %124, !dbg !48
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %121, ptr addrspace(1) %129, i1 %128) #5, !dbg !49
  ret void, !dbg !50
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef range(i32 0, 65535) i32 @llvm.nvvm.read.ptx.sreg.ctaid.y() #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef range(i32 0, 2147483647) i32 @llvm.nvvm.read.ptx.sreg.ctaid.x() #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef range(i32 0, 1024) i32 @llvm.nvvm.read.ptx.sreg.tid.x() #1

; Function Attrs: convergent nocallback nounwind memory(inaccessiblemem: readwrite)
declare i32 @llvm.nvvm.shfl.sync.bfly.i32(i32, i32, i32, i32) #2

; Function Attrs: convergent nocallback nounwind
declare void @llvm.nvvm.barrier.cta.sync.aligned.all(i32) #3

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.ex2.approx.f(float) #4

attributes #0 = { "nvvm.reqntid"="64" }
attributes #1 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #2 = { convergent nocallback nounwind memory(inaccessiblemem: readwrite) }
attributes #3 = { convergent nocallback nounwind }
attributes #4 = { mustprogress nocallback nofree nosync nounwind willreturn memory(none) }
attributes #5 = { nounwind }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!2, !3}
!llvm.ident = !{!4}

!0 = distinct !DICompileUnit(language: DW_LANG_C, file: !1, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!1 = !DIFile(filename: "cbwaasw7yvayosz5t6jgzhxzzv66vphvv74ctzt7e3avy5rwzfmh.py", directory: "/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/bw")
!2 = !{i32 2, !"Debug Info Version", i32 3}
!3 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!4 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!5 = distinct !DISubprogram(name: "triton_per_fused_add_3", linkageName: "triton_per_fused_add_3", scope: !1, file: !1, line: 18, type: !6, scopeLine: 18, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0)
!6 = !DISubroutineType(cc: DW_CC_normal, types: !7)
!7 = !{}
!8 = !DILocation(line: 25, column: 28, scope: !5)
!9 = !DILocation(line: 27, column: 21, scope: !5)
!10 = !DILocation(line: 28, column: 28, scope: !5)
!11 = !DILocation(line: 30, column: 21, scope: !5)
!12 = !DILocation(line: 31, column: 38, scope: !5)
!13 = !DILocation(line: 39, column: 40, scope: !5)
!14 = !DILocation(line: 39, column: 37, scope: !5)
!15 = !DILocation(line: 39, column: 50, scope: !5)
!16 = !DILocation(line: 39, column: 45, scope: !5)
!17 = !DILocation(line: 39, column: 30, scope: !5)
!18 = !DILocation(line: 39, column: 63, scope: !5)
!19 = !DILocation(line: 39, column: 55, scope: !5)
!20 = !DILocation(line: 40, column: 37, scope: !5)
!21 = !DILocation(line: 40, column: 48, scope: !5)
!22 = !DILocation(line: 40, column: 35, scope: !5)
!23 = !DILocation(line: 40, column: 44, scope: !5)
!24 = !DILocation(line: 40, column: 30, scope: !5)
!25 = !DILocation(line: 40, column: 53, scope: !5)
!26 = !DILocation(line: 41, column: 18, scope: !5)
!27 = !DILocation(line: 44, column: 41, scope: !5)
!28 = !DILocation(line: 124, column: 29, scope: !29, inlinedAt: !31)
!29 = distinct !DILexicalBlockFile(scope: !5, file: !30, discriminator: 0)
!30 = !DIFile(filename: "triton_helpers.py", directory: "/mnt/disk1/anaconda3/envs/pqhung/lib/python3.9/site-packages/torch/_inductor/runtime")
!31 = !DILocation(line: 45, column: 37, scope: !5)
!32 = !DILocation(line: 111, column: 15, scope: !29, inlinedAt: !31)
!33 = !DILocation(line: 113, column: 21, scope: !29, inlinedAt: !31)
!34 = !DILocation(line: 113, column: 16, scope: !29, inlinedAt: !31)
!35 = !DILocation(line: 114, column: 29, scope: !29, inlinedAt: !31)
!36 = !DILocation(line: 46, column: 18, scope: !5)
!37 = !DILocation(line: 47, column: 24, scope: !5)
!38 = !DILocation(line: 49, column: 43, scope: !5)
!39 = !DILocation(line: 290, column: 36, scope: !40, inlinedAt: !42)
!40 = distinct !DILexicalBlockFile(scope: !5, file: !41, discriminator: 0)
!41 = !DIFile(filename: "standard.py", directory: "/mnt/disk1/anaconda3/envs/pqhung/lib/python3.9/site-packages/triton/language")
!42 = !DILocation(line: 50, column: 26, scope: !5)
!43 = !DILocation(line: 260, column: 15, scope: !40, inlinedAt: !42)
!44 = !DILocation(line: 51, column: 33, scope: !5)
!45 = !DILocation(line: 51, column: 30, scope: !5)
!46 = !DILocation(line: 51, column: 25, scope: !5)
!47 = !DILocation(line: 51, column: 44, scope: !5)
!48 = !DILocation(line: 52, column: 25, scope: !5)
!49 = !DILocation(line: 52, column: 45, scope: !5)
!50 = !DILocation(line: 52, column: 4, scope: !5)

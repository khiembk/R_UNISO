; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-p6:32:32-p7:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define ptx_kernel void @triton_per_fused__softmax_add_zeros_3(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, i32 %3, i32 %4, ptr addrspace(1) readnone captures(none) %5) local_unnamed_addr #0 !dbg !5 {
  %7 = tail call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !dbg !8
  %8 = shl i32 %7, 5, !dbg !9
  %9 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !10
  %10 = lshr i32 %9, 5, !dbg !10
  %11 = and i32 %10, 7, !dbg !10
  %12 = or disjoint i32 %11, %8, !dbg !11
  %13 = or disjoint i32 %12, 8, !dbg !11
  %14 = or disjoint i32 %12, 16, !dbg !11
  %15 = or disjoint i32 %10, %8, !dbg !11
  %16 = or i32 %15, 24, !dbg !11
  %17 = icmp slt i32 %12, 400, !dbg !12
  %18 = icmp slt i32 %13, 400, !dbg !12
  %19 = icmp slt i32 %14, 400, !dbg !12
  %20 = icmp slt i32 %16, 400, !dbg !12
  %21 = shl nuw nsw i32 %9, 1, !dbg !13
  %22 = and i32 %21, 62, !dbg !13
  %23 = icmp samesign ult i32 %22, 50, !dbg !14
  %24 = sdiv i32 %12, 50, !dbg !15
  %25 = mul i32 %24, 50, !dbg !16
  %.decomposed = sub i32 %12, %25, !dbg !16
  %26 = sdiv i32 %13, 50, !dbg !15
  %27 = mul i32 %26, 50, !dbg !16
  %.decomposed1 = sub i32 %13, %27, !dbg !16
  %28 = sdiv i32 %14, 50, !dbg !15
  %29 = mul i32 %28, 50, !dbg !16
  %.decomposed2 = sub i32 %14, %29, !dbg !16
  %30 = sdiv i32 %16, 50, !dbg !15
  %31 = mul i32 %30, 50, !dbg !16
  %.decomposed3 = sub i32 %16, %31, !dbg !16
  %32 = mul i32 %12, 50, !dbg !17
  %33 = mul i32 %13, 50, !dbg !17
  %34 = mul i32 %14, 50, !dbg !17
  %35 = mul i32 %16, 50, !dbg !17
  %36 = add i32 %32, %22, !dbg !18
  %37 = add i32 %33, %22, !dbg !18
  %38 = add i32 %34, %22, !dbg !18
  %39 = add i32 %35, %22, !dbg !18
  %40 = sext i32 %36 to i64, !dbg !19
  %41 = getelementptr float, ptr addrspace(1) %0, i64 %40, !dbg !19
  %42 = sext i32 %37 to i64, !dbg !19
  %43 = getelementptr float, ptr addrspace(1) %0, i64 %42, !dbg !19
  %44 = sext i32 %38 to i64, !dbg !19
  %45 = getelementptr float, ptr addrspace(1) %0, i64 %44, !dbg !19
  %46 = sext i32 %39 to i64, !dbg !19
  %47 = getelementptr float, ptr addrspace(1) %0, i64 %46, !dbg !19
  %48 = and i1 %23, %17, !dbg !20
  %49 = and i1 %23, %18, !dbg !20
  %50 = and i1 %23, %19, !dbg !20
  %51 = and i1 %23, %20, !dbg !20
  %52 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, $2;\0A\09mov.u32 $1, $3;\0A\09@$5 ld.global.v2.b32 { $0, $1 }, [ $4 + 0 ];", "=r,=r,r,r,l,b"(i32 0, i32 0, ptr addrspace(1) %41, i1 %48) #4, !dbg !21
  %53 = extractvalue { i32, i32 } %52, 0, !dbg !21
  %54 = extractvalue { i32, i32 } %52, 1, !dbg !21
  %55 = bitcast i32 %53 to float, !dbg !21
  %56 = bitcast i32 %54 to float, !dbg !21
  %57 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, $2;\0A\09mov.u32 $1, $3;\0A\09@$5 ld.global.v2.b32 { $0, $1 }, [ $4 + 0 ];", "=r,=r,r,r,l,b"(i32 0, i32 0, ptr addrspace(1) %43, i1 %49) #4, !dbg !21
  %58 = extractvalue { i32, i32 } %57, 0, !dbg !21
  %59 = extractvalue { i32, i32 } %57, 1, !dbg !21
  %60 = bitcast i32 %58 to float, !dbg !21
  %61 = bitcast i32 %59 to float, !dbg !21
  %62 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, $2;\0A\09mov.u32 $1, $3;\0A\09@$5 ld.global.v2.b32 { $0, $1 }, [ $4 + 0 ];", "=r,=r,r,r,l,b"(i32 0, i32 0, ptr addrspace(1) %45, i1 %50) #4, !dbg !21
  %63 = extractvalue { i32, i32 } %62, 0, !dbg !21
  %64 = extractvalue { i32, i32 } %62, 1, !dbg !21
  %65 = bitcast i32 %63 to float, !dbg !21
  %66 = bitcast i32 %64 to float, !dbg !21
  %67 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, $2;\0A\09mov.u32 $1, $3;\0A\09@$5 ld.global.v2.b32 { $0, $1 }, [ $4 + 0 ];", "=r,=r,r,r,l,b"(i32 0, i32 0, ptr addrspace(1) %47, i1 %51) #4, !dbg !21
  %68 = extractvalue { i32, i32 } %67, 0, !dbg !21
  %69 = extractvalue { i32, i32 } %67, 1, !dbg !21
  %70 = bitcast i32 %68 to float, !dbg !21
  %71 = bitcast i32 %69 to float, !dbg !21
  %72 = zext nneg i32 %22 to i64, !dbg !22
  %73 = getelementptr float, ptr addrspace(1) %1, i64 %72, !dbg !22
  %74 = tail call i64 asm sideeffect "mov.u64 $0, 0x0;\0A\09createpolicy.fractional.L2::evict_last.b64 $0, 1.0;", "=l"() #4, !dbg !23
  %75 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, $2;\0A\09mov.u32 $1, $3;\0A\09@$6 ld.global.L1::evict_last.L2::cache_hint.v2.b32 { $0, $1 }, [ $4 + 0 ], $5;", "=r,=r,r,r,l,l,b"(i32 0, i32 0, ptr addrspace(1) %73, i64 %74, i1 %23) #4, !dbg !23
  %76 = extractvalue { i32, i32 } %75, 0, !dbg !23
  %77 = extractvalue { i32, i32 } %75, 1, !dbg !23
  %78 = bitcast i32 %76 to float, !dbg !23
  %79 = bitcast i32 %77 to float, !dbg !23
  %80 = fadd float %78, 0.000000e+00, !dbg !24
  %81 = fadd float %79, 0.000000e+00, !dbg !24
  %82 = fadd float %80, %55, !dbg !25
  %83 = fadd float %81, %56, !dbg !25
  %84 = fadd float %80, %60, !dbg !25
  %85 = fadd float %81, %61, !dbg !25
  %86 = fadd float %80, %65, !dbg !25
  %87 = fadd float %81, %66, !dbg !25
  %88 = fadd float %80, %70, !dbg !25
  %89 = fadd float %81, %71, !dbg !25
  %90 = select i1 %48, float %82, float 0xFFF0000000000000, !dbg !26
  %91 = select i1 %48, float %83, float 0xFFF0000000000000, !dbg !26
  %92 = select i1 %49, float %84, float 0xFFF0000000000000, !dbg !26
  %93 = select i1 %49, float %85, float 0xFFF0000000000000, !dbg !26
  %94 = select i1 %50, float %86, float 0xFFF0000000000000, !dbg !26
  %95 = select i1 %50, float %87, float 0xFFF0000000000000, !dbg !26
  %96 = select i1 %51, float %88, float 0xFFF0000000000000, !dbg !26
  %97 = select i1 %51, float %89, float 0xFFF0000000000000, !dbg !26
  %98 = fcmp ogt float %90, %91, !dbg !27
  %99 = fcmp uno float %90, 0.000000e+00, !dbg !31
  %100 = or i1 %98, %99, !dbg !32
  %101 = select i1 %100, float %90, float %91, !dbg !33
  %102 = fcmp ogt float %92, %93, !dbg !27
  %103 = fcmp uno float %92, 0.000000e+00, !dbg !31
  %104 = or i1 %102, %103, !dbg !32
  %105 = select i1 %104, float %92, float %93, !dbg !33
  %106 = fcmp ogt float %94, %95, !dbg !27
  %107 = fcmp uno float %94, 0.000000e+00, !dbg !31
  %108 = or i1 %106, %107, !dbg !32
  %109 = select i1 %108, float %94, float %95, !dbg !33
  %110 = fcmp ogt float %96, %97, !dbg !27
  %111 = fcmp uno float %96, 0.000000e+00, !dbg !31
  %112 = or i1 %110, %111, !dbg !32
  %113 = select i1 %112, float %96, float %97, !dbg !33
  %114 = bitcast float %101 to i32, !dbg !34
  %115 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %114, i32 16, i32 31), !dbg !34
  %116 = bitcast i32 %115 to float, !dbg !34
  %117 = fcmp ogt float %101, %116, !dbg !27
  %118 = fcmp uno float %101, 0.000000e+00, !dbg !31
  %119 = or i1 %117, %118, !dbg !32
  %120 = select i1 %119, float %101, float %116, !dbg !33
  %121 = bitcast float %120 to i32, !dbg !34
  %122 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %121, i32 8, i32 31), !dbg !34
  %123 = bitcast i32 %122 to float, !dbg !34
  %124 = fcmp ogt float %120, %123, !dbg !27
  %125 = fcmp uno float %120, 0.000000e+00, !dbg !31
  %126 = or i1 %124, %125, !dbg !32
  %127 = select i1 %126, float %120, float %123, !dbg !33
  %128 = bitcast float %127 to i32, !dbg !34
  %129 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %128, i32 4, i32 31), !dbg !34
  %130 = bitcast i32 %129 to float, !dbg !34
  %131 = fcmp ogt float %127, %130, !dbg !27
  %132 = fcmp uno float %127, 0.000000e+00, !dbg !31
  %133 = or i1 %131, %132, !dbg !32
  %134 = select i1 %133, float %127, float %130, !dbg !33
  %135 = bitcast float %134 to i32, !dbg !34
  %136 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %135, i32 2, i32 31), !dbg !34
  %137 = bitcast i32 %136 to float, !dbg !34
  %138 = fcmp ogt float %134, %137, !dbg !27
  %139 = fcmp uno float %134, 0.000000e+00, !dbg !31
  %140 = or i1 %138, %139, !dbg !32
  %141 = select i1 %140, float %134, float %137, !dbg !33
  %142 = bitcast float %141 to i32, !dbg !34
  %143 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %142, i32 1, i32 31), !dbg !34
  %144 = bitcast i32 %143 to float, !dbg !34
  %145 = fcmp ogt float %141, %144, !dbg !27
  %146 = fcmp uno float %141, 0.000000e+00, !dbg !31
  %147 = or i1 %145, %146, !dbg !32
  %148 = select i1 %147, float %141, float %144, !dbg !33
  %149 = bitcast float %105 to i32, !dbg !34
  %150 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %149, i32 16, i32 31), !dbg !34
  %151 = bitcast i32 %150 to float, !dbg !34
  %152 = fcmp ogt float %105, %151, !dbg !27
  %153 = fcmp uno float %105, 0.000000e+00, !dbg !31
  %154 = or i1 %152, %153, !dbg !32
  %155 = select i1 %154, float %105, float %151, !dbg !33
  %156 = bitcast float %155 to i32, !dbg !34
  %157 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %156, i32 8, i32 31), !dbg !34
  %158 = bitcast i32 %157 to float, !dbg !34
  %159 = fcmp ogt float %155, %158, !dbg !27
  %160 = fcmp uno float %155, 0.000000e+00, !dbg !31
  %161 = or i1 %159, %160, !dbg !32
  %162 = select i1 %161, float %155, float %158, !dbg !33
  %163 = bitcast float %162 to i32, !dbg !34
  %164 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %163, i32 4, i32 31), !dbg !34
  %165 = bitcast i32 %164 to float, !dbg !34
  %166 = fcmp ogt float %162, %165, !dbg !27
  %167 = fcmp uno float %162, 0.000000e+00, !dbg !31
  %168 = or i1 %166, %167, !dbg !32
  %169 = select i1 %168, float %162, float %165, !dbg !33
  %170 = bitcast float %169 to i32, !dbg !34
  %171 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %170, i32 2, i32 31), !dbg !34
  %172 = bitcast i32 %171 to float, !dbg !34
  %173 = fcmp ogt float %169, %172, !dbg !27
  %174 = fcmp uno float %169, 0.000000e+00, !dbg !31
  %175 = or i1 %173, %174, !dbg !32
  %176 = select i1 %175, float %169, float %172, !dbg !33
  %177 = bitcast float %176 to i32, !dbg !34
  %178 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %177, i32 1, i32 31), !dbg !34
  %179 = bitcast i32 %178 to float, !dbg !34
  %180 = fcmp ogt float %176, %179, !dbg !27
  %181 = fcmp uno float %176, 0.000000e+00, !dbg !31
  %182 = or i1 %180, %181, !dbg !32
  %183 = select i1 %182, float %176, float %179, !dbg !33
  %184 = bitcast float %109 to i32, !dbg !34
  %185 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %184, i32 16, i32 31), !dbg !34
  %186 = bitcast i32 %185 to float, !dbg !34
  %187 = fcmp ogt float %109, %186, !dbg !27
  %188 = fcmp uno float %109, 0.000000e+00, !dbg !31
  %189 = or i1 %188, %187, !dbg !32
  %190 = select i1 %189, float %109, float %186, !dbg !33
  %191 = bitcast float %190 to i32, !dbg !34
  %192 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %191, i32 8, i32 31), !dbg !34
  %193 = bitcast i32 %192 to float, !dbg !34
  %194 = fcmp ogt float %190, %193, !dbg !27
  %195 = fcmp uno float %190, 0.000000e+00, !dbg !31
  %196 = or i1 %194, %195, !dbg !32
  %197 = select i1 %196, float %190, float %193, !dbg !33
  %198 = bitcast float %197 to i32, !dbg !34
  %199 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %198, i32 4, i32 31), !dbg !34
  %200 = bitcast i32 %199 to float, !dbg !34
  %201 = fcmp ogt float %197, %200, !dbg !27
  %202 = fcmp uno float %197, 0.000000e+00, !dbg !31
  %203 = or i1 %201, %202, !dbg !32
  %204 = select i1 %203, float %197, float %200, !dbg !33
  %205 = bitcast float %204 to i32, !dbg !34
  %206 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %205, i32 2, i32 31), !dbg !34
  %207 = bitcast i32 %206 to float, !dbg !34
  %208 = fcmp ogt float %204, %207, !dbg !27
  %209 = fcmp uno float %204, 0.000000e+00, !dbg !31
  %210 = or i1 %208, %209, !dbg !32
  %211 = select i1 %210, float %204, float %207, !dbg !33
  %212 = bitcast float %211 to i32, !dbg !34
  %213 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %212, i32 1, i32 31), !dbg !34
  %214 = bitcast i32 %213 to float, !dbg !34
  %215 = fcmp ogt float %211, %214, !dbg !27
  %216 = fcmp uno float %211, 0.000000e+00, !dbg !31
  %217 = or i1 %215, %216, !dbg !32
  %218 = select i1 %217, float %211, float %214, !dbg !33
  %219 = bitcast float %113 to i32, !dbg !34
  %220 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %219, i32 16, i32 31), !dbg !34
  %221 = bitcast i32 %220 to float, !dbg !34
  %222 = fcmp ogt float %113, %221, !dbg !27
  %223 = fcmp uno float %113, 0.000000e+00, !dbg !31
  %224 = or i1 %223, %222, !dbg !32
  %225 = select i1 %224, float %113, float %221, !dbg !33
  %226 = bitcast float %225 to i32, !dbg !34
  %227 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %226, i32 8, i32 31), !dbg !34
  %228 = bitcast i32 %227 to float, !dbg !34
  %229 = fcmp ogt float %225, %228, !dbg !27
  %230 = fcmp uno float %225, 0.000000e+00, !dbg !31
  %231 = or i1 %229, %230, !dbg !32
  %232 = select i1 %231, float %225, float %228, !dbg !33
  %233 = bitcast float %232 to i32, !dbg !34
  %234 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %233, i32 4, i32 31), !dbg !34
  %235 = bitcast i32 %234 to float, !dbg !34
  %236 = fcmp ogt float %232, %235, !dbg !27
  %237 = fcmp uno float %232, 0.000000e+00, !dbg !31
  %238 = or i1 %236, %237, !dbg !32
  %239 = select i1 %238, float %232, float %235, !dbg !33
  %240 = bitcast float %239 to i32, !dbg !34
  %241 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %240, i32 2, i32 31), !dbg !34
  %242 = bitcast i32 %241 to float, !dbg !34
  %243 = fcmp ogt float %239, %242, !dbg !27
  %244 = fcmp uno float %239, 0.000000e+00, !dbg !31
  %245 = or i1 %243, %244, !dbg !32
  %246 = select i1 %245, float %239, float %242, !dbg !33
  %247 = bitcast float %246 to i32, !dbg !34
  %248 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %247, i32 1, i32 31), !dbg !34
  %249 = bitcast i32 %248 to float, !dbg !34
  %250 = fcmp ogt float %246, %249, !dbg !27
  %251 = fcmp uno float %246, 0.000000e+00, !dbg !31
  %252 = or i1 %250, %251, !dbg !32
  %253 = select i1 %252, float %246, float %249, !dbg !33
  %254 = fsub float %82, %148, !dbg !35
  %255 = fsub float %83, %148, !dbg !35
  %256 = fsub float %84, %183, !dbg !35
  %257 = fsub float %85, %183, !dbg !35
  %258 = fsub float %86, %218, !dbg !35
  %259 = fsub float %87, %218, !dbg !35
  %260 = fsub float %88, %253, !dbg !35
  %261 = fsub float %89, %253, !dbg !35
  %262 = fmul float %254, 0x3FF7154760000000, !dbg !36
  %263 = tail call float @llvm.nvvm.ex2.approx.f(float %262), !dbg !36
  %264 = fmul float %255, 0x3FF7154760000000, !dbg !36
  %265 = tail call float @llvm.nvvm.ex2.approx.f(float %264), !dbg !36
  %266 = fmul float %256, 0x3FF7154760000000, !dbg !36
  %267 = tail call float @llvm.nvvm.ex2.approx.f(float %266), !dbg !36
  %268 = fmul float %257, 0x3FF7154760000000, !dbg !36
  %269 = tail call float @llvm.nvvm.ex2.approx.f(float %268), !dbg !36
  %270 = fmul float %258, 0x3FF7154760000000, !dbg !36
  %271 = tail call float @llvm.nvvm.ex2.approx.f(float %270), !dbg !36
  %272 = fmul float %259, 0x3FF7154760000000, !dbg !36
  %273 = tail call float @llvm.nvvm.ex2.approx.f(float %272), !dbg !36
  %274 = fmul float %260, 0x3FF7154760000000, !dbg !36
  %275 = tail call float @llvm.nvvm.ex2.approx.f(float %274), !dbg !36
  %276 = fmul float %261, 0x3FF7154760000000, !dbg !36
  %277 = tail call float @llvm.nvvm.ex2.approx.f(float %276), !dbg !36
  %278 = fadd float %263, %265, !dbg !37
  %279 = select i1 %48, float %278, float 0.000000e+00, !dbg !37
  %280 = fadd float %267, %269, !dbg !37
  %281 = select i1 %49, float %280, float 0.000000e+00, !dbg !37
  %282 = fadd float %271, %273, !dbg !37
  %283 = select i1 %50, float %282, float 0.000000e+00, !dbg !37
  %284 = fadd float %275, %277, !dbg !37
  %285 = select i1 %51, float %284, float 0.000000e+00, !dbg !37
  %286 = bitcast float %279 to i32, !dbg !41
  %287 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %286, i32 16, i32 31), !dbg !41
  %288 = bitcast i32 %287 to float, !dbg !41
  %289 = fadd float %279, %288, !dbg !37
  %290 = bitcast float %289 to i32, !dbg !41
  %291 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %290, i32 8, i32 31), !dbg !41
  %292 = bitcast i32 %291 to float, !dbg !41
  %293 = fadd float %289, %292, !dbg !37
  %294 = bitcast float %293 to i32, !dbg !41
  %295 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %294, i32 4, i32 31), !dbg !41
  %296 = bitcast i32 %295 to float, !dbg !41
  %297 = fadd float %293, %296, !dbg !37
  %298 = bitcast float %297 to i32, !dbg !41
  %299 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %298, i32 2, i32 31), !dbg !41
  %300 = bitcast i32 %299 to float, !dbg !41
  %301 = fadd float %297, %300, !dbg !37
  %302 = bitcast float %301 to i32, !dbg !41
  %303 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %302, i32 1, i32 31), !dbg !41
  %304 = bitcast i32 %303 to float, !dbg !41
  %305 = fadd float %301, %304, !dbg !37
  %306 = bitcast float %281 to i32, !dbg !41
  %307 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %306, i32 16, i32 31), !dbg !41
  %308 = bitcast i32 %307 to float, !dbg !41
  %309 = fadd float %281, %308, !dbg !37
  %310 = bitcast float %309 to i32, !dbg !41
  %311 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %310, i32 8, i32 31), !dbg !41
  %312 = bitcast i32 %311 to float, !dbg !41
  %313 = fadd float %309, %312, !dbg !37
  %314 = bitcast float %313 to i32, !dbg !41
  %315 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %314, i32 4, i32 31), !dbg !41
  %316 = bitcast i32 %315 to float, !dbg !41
  %317 = fadd float %313, %316, !dbg !37
  %318 = bitcast float %317 to i32, !dbg !41
  %319 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %318, i32 2, i32 31), !dbg !41
  %320 = bitcast i32 %319 to float, !dbg !41
  %321 = fadd float %317, %320, !dbg !37
  %322 = bitcast float %321 to i32, !dbg !41
  %323 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %322, i32 1, i32 31), !dbg !41
  %324 = bitcast i32 %323 to float, !dbg !41
  %325 = fadd float %321, %324, !dbg !37
  %326 = bitcast float %283 to i32, !dbg !41
  %327 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %326, i32 16, i32 31), !dbg !41
  %328 = bitcast i32 %327 to float, !dbg !41
  %329 = fadd float %283, %328, !dbg !37
  %330 = bitcast float %329 to i32, !dbg !41
  %331 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %330, i32 8, i32 31), !dbg !41
  %332 = bitcast i32 %331 to float, !dbg !41
  %333 = fadd float %329, %332, !dbg !37
  %334 = bitcast float %333 to i32, !dbg !41
  %335 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %334, i32 4, i32 31), !dbg !41
  %336 = bitcast i32 %335 to float, !dbg !41
  %337 = fadd float %333, %336, !dbg !37
  %338 = bitcast float %337 to i32, !dbg !41
  %339 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %338, i32 2, i32 31), !dbg !41
  %340 = bitcast i32 %339 to float, !dbg !41
  %341 = fadd float %337, %340, !dbg !37
  %342 = bitcast float %341 to i32, !dbg !41
  %343 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %342, i32 1, i32 31), !dbg !41
  %344 = bitcast i32 %343 to float, !dbg !41
  %345 = fadd float %341, %344, !dbg !37
  %346 = bitcast float %285 to i32, !dbg !41
  %347 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %346, i32 16, i32 31), !dbg !41
  %348 = bitcast i32 %347 to float, !dbg !41
  %349 = fadd float %285, %348, !dbg !37
  %350 = bitcast float %349 to i32, !dbg !41
  %351 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %350, i32 8, i32 31), !dbg !41
  %352 = bitcast i32 %351 to float, !dbg !41
  %353 = fadd float %349, %352, !dbg !37
  %354 = bitcast float %353 to i32, !dbg !41
  %355 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %354, i32 4, i32 31), !dbg !41
  %356 = bitcast i32 %355 to float, !dbg !41
  %357 = fadd float %353, %356, !dbg !37
  %358 = bitcast float %357 to i32, !dbg !41
  %359 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %358, i32 2, i32 31), !dbg !41
  %360 = bitcast i32 %359 to float, !dbg !41
  %361 = fadd float %357, %360, !dbg !37
  %362 = bitcast float %361 to i32, !dbg !41
  %363 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %362, i32 1, i32 31), !dbg !41
  %364 = bitcast i32 %363 to float, !dbg !41
  %365 = fadd float %361, %364, !dbg !37
  %366 = tail call float @llvm.nvvm.div.full(float %263, float %305), !dbg !42
  %367 = tail call float @llvm.nvvm.div.full(float %265, float %305), !dbg !42
  %368 = tail call float @llvm.nvvm.div.full(float %267, float %325), !dbg !42
  %369 = tail call float @llvm.nvvm.div.full(float %269, float %325), !dbg !42
  %370 = tail call float @llvm.nvvm.div.full(float %271, float %345), !dbg !42
  %371 = tail call float @llvm.nvvm.div.full(float %273, float %345), !dbg !42
  %372 = tail call float @llvm.nvvm.div.full(float %275, float %365), !dbg !42
  %373 = tail call float @llvm.nvvm.div.full(float %277, float %365), !dbg !42
  %374 = mul nsw i32 %.decomposed, 50, !dbg !43
  %375 = mul nsw i32 %.decomposed1, 50, !dbg !43
  %376 = mul nsw i32 %.decomposed2, 50, !dbg !43
  %377 = mul nsw i32 %.decomposed3, 50, !dbg !43
  %378 = add nsw i32 %374, %22, !dbg !44
  %379 = add nsw i32 %375, %22, !dbg !44
  %380 = add nsw i32 %376, %22, !dbg !44
  %381 = add nsw i32 %377, %22, !dbg !44
  %382 = mul i32 %24, 2528, !dbg !45
  %383 = mul i32 %26, 2528, !dbg !45
  %384 = mul i32 %28, 2528, !dbg !45
  %385 = mul i32 %30, 2528, !dbg !45
  %386 = add i32 %378, %382, !dbg !46
  %387 = add i32 %379, %383, !dbg !46
  %388 = add i32 %380, %384, !dbg !46
  %389 = add i32 %381, %385, !dbg !46
  %390 = sext i32 %386 to i64, !dbg !47
  %391 = getelementptr float, ptr addrspace(1) %2, i64 %390, !dbg !47
  %392 = sext i32 %387 to i64, !dbg !47
  %393 = getelementptr float, ptr addrspace(1) %2, i64 %392, !dbg !47
  %394 = sext i32 %388 to i64, !dbg !47
  %395 = getelementptr float, ptr addrspace(1) %2, i64 %394, !dbg !47
  %396 = sext i32 %389 to i64, !dbg !47
  %397 = getelementptr float, ptr addrspace(1) %2, i64 %396, !dbg !47
  %398 = bitcast float %366 to i32, !dbg !48
  %399 = bitcast float %367 to i32, !dbg !48
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %398, i32 %399, ptr addrspace(1) %391, i1 %48) #4, !dbg !48
  %400 = bitcast float %368 to i32, !dbg !48
  %401 = bitcast float %369 to i32, !dbg !48
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %400, i32 %401, ptr addrspace(1) %393, i1 %49) #4, !dbg !48
  %402 = bitcast float %370 to i32, !dbg !48
  %403 = bitcast float %371 to i32, !dbg !48
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %402, i32 %403, ptr addrspace(1) %395, i1 %50) #4, !dbg !48
  %404 = bitcast float %372 to i32, !dbg !48
  %405 = bitcast float %373 to i32, !dbg !48
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %404, i32 %405, ptr addrspace(1) %397, i1 %51) #4, !dbg !48
  ret void, !dbg !49
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef range(i32 0, 2147483647) i32 @llvm.nvvm.read.ptx.sreg.ctaid.x() #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef range(i32 0, 1024) i32 @llvm.nvvm.read.ptx.sreg.tid.x() #1

; Function Attrs: convergent nocallback nounwind memory(inaccessiblemem: readwrite)
declare i32 @llvm.nvvm.shfl.sync.bfly.i32(i32, i32, i32, i32) #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.ex2.approx.f(float) #3

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.div.full(float, float) #3

attributes #0 = { "nvvm.reqntid"="256" }
attributes #1 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #2 = { convergent nocallback nounwind memory(inaccessiblemem: readwrite) }
attributes #3 = { mustprogress nocallback nofree nosync nounwind willreturn memory(none) }
attributes #4 = { nounwind }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!2, !3}
!llvm.ident = !{!4}

!0 = distinct !DICompileUnit(language: DW_LANG_C, file: !1, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!1 = !DIFile(filename: "cs72dqgrz6wtxvrvlzsnrjvomcdgyurqcedygwq72a5yyfdt6ycv.py", directory: "/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/s7")
!2 = !{i32 2, !"Debug Info Version", i32 3}
!3 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!4 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!5 = distinct !DISubprogram(name: "triton_per_fused__softmax_add_zeros_3", linkageName: "triton_per_fused__softmax_add_zeros_3", scope: !1, file: !1, line: 18, type: !6, scopeLine: 18, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0)
!6 = !DISubroutineType(cc: DW_CC_normal, types: !7)
!7 = !{}
!8 = !DILocation(line: 24, column: 28, scope: !5)
!9 = !DILocation(line: 24, column: 33, scope: !5)
!10 = !DILocation(line: 25, column: 44, scope: !5)
!11 = !DILocation(line: 25, column: 23, scope: !5)
!12 = !DILocation(line: 26, column: 21, scope: !5)
!13 = !DILocation(line: 27, column: 38, scope: !5)
!14 = !DILocation(line: 29, column: 25, scope: !5)
!15 = !DILocation(line: 35, column: 19, scope: !5)
!16 = !DILocation(line: 34, column: 19, scope: !5)
!17 = !DILocation(line: 36, column: 40, scope: !5)
!18 = !DILocation(line: 36, column: 37, scope: !5)
!19 = !DILocation(line: 36, column: 30, scope: !5)
!20 = !DILocation(line: 36, column: 55, scope: !5)
!21 = !DILocation(line: 36, column: 45, scope: !5)
!22 = !DILocation(line: 37, column: 30, scope: !5)
!23 = !DILocation(line: 37, column: 37, scope: !5)
!24 = !DILocation(line: 39, column: 18, scope: !5)
!25 = !DILocation(line: 40, column: 18, scope: !5)
!26 = !DILocation(line: 43, column: 43, scope: !5)
!27 = !DILocation(line: 111, column: 15, scope: !28, inlinedAt: !30)
!28 = distinct !DILexicalBlockFile(scope: !5, file: !29, discriminator: 0)
!29 = !DIFile(filename: "triton_helpers.py", directory: "/mnt/disk1/anaconda3/envs/pqhung/lib/python3.9/site-packages/torch/_inductor/runtime")
!30 = !DILocation(line: 44, column: 38, scope: !5)
!31 = !DILocation(line: 113, column: 21, scope: !28, inlinedAt: !30)
!32 = !DILocation(line: 113, column: 16, scope: !28, inlinedAt: !30)
!33 = !DILocation(line: 114, column: 29, scope: !28, inlinedAt: !30)
!34 = !DILocation(line: 124, column: 29, scope: !28, inlinedAt: !30)
!35 = !DILocation(line: 45, column: 19, scope: !5)
!36 = !DILocation(line: 46, column: 24, scope: !5)
!37 = !DILocation(line: 260, column: 15, scope: !38, inlinedAt: !40)
!38 = distinct !DILexicalBlockFile(scope: !5, file: !39, discriminator: 0)
!39 = !DIFile(filename: "standard.py", directory: "/mnt/disk1/anaconda3/envs/pqhung/lib/python3.9/site-packages/triton/language")
!40 = !DILocation(line: 49, column: 26, scope: !5)
!41 = !DILocation(line: 290, column: 36, scope: !38, inlinedAt: !40)
!42 = !DILocation(line: 52, column: 21, scope: !5)
!43 = !DILocation(line: 53, column: 35, scope: !5)
!44 = !DILocation(line: 53, column: 32, scope: !5)
!45 = !DILocation(line: 53, column: 45, scope: !5)
!46 = !DILocation(line: 53, column: 40, scope: !5)
!47 = !DILocation(line: 53, column: 25, scope: !5)
!48 = !DILocation(line: 53, column: 57, scope: !5)
!49 = !DILocation(line: 53, column: 4, scope: !5)

//
// Generated by LLVM NVPTX Back-End
//

.version 8.7
.target sm_86
.address_size 64

	// .globl	triton_red_fused_add_embedding_mean_mul_pow_rsqrt_0 // -- Begin function triton_red_fused_add_embedding_mean_mul_pow_rsqrt_0
.extern .func __assertfail
(
	.param .b64 __assertfail_param_0,
	.param .b64 __assertfail_param_1,
	.param .b32 __assertfail_param_2,
	.param .b64 __assertfail_param_3,
	.param .b64 __assertfail_param_4
)
.noreturn;
.global .align 1 .b8 assertFunc_0[8] = {117, 110, 107, 110, 111, 119, 110};
.global .align 1 .b8 assertFile_0[121] = {47, 109, 110, 116, 47, 100, 105, 115, 107, 49, 47, 107, 104, 105, 101, 109, 116, 116, 47, 117, 110, 105, 118, 101, 114, 115, 97, 108, 45, 111, 102, 102, 108, 105, 110, 101, 45, 98, 98, 111, 47, 116, 111, 114, 99, 104, 105, 110, 100, 117, 99, 116, 111, 114, 95, 117, 98, 117, 110, 116, 117, 47, 107, 122, 47, 99, 107, 122, 113, 105, 55, 120, 50, 97, 116, 52, 109, 51, 106, 120, 115, 54, 122, 100, 99, 52, 54, 116, 52, 55, 116, 54, 108, 119, 54, 110, 109, 108, 104, 110, 110, 50, 114, 103, 54, 115, 122, 101, 118, 52, 119, 105, 112, 118, 115, 108, 98, 46, 112, 121};
.global .align 1 .b8 assertMessage_0[39] = {105, 110, 100, 101, 120, 32, 111, 117, 116, 32, 111, 102, 32, 98, 111, 117, 110, 100, 115, 58, 32, 48, 32, 60, 61, 32, 116, 109, 112, 52, 32, 60, 32, 51, 50, 49, 50, 56};
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
                                        // @triton_red_fused_add_embedding_mean_mul_pow_rsqrt_0
.visible .entry triton_red_fused_add_embedding_mean_mul_pow_rsqrt_0(
	.param .u64 .ptr .global .align 1 triton_red_fused_add_embedding_mean_mul_pow_rsqrt_0_param_0,
	.param .u64 .ptr .global .align 1 triton_red_fused_add_embedding_mean_mul_pow_rsqrt_0_param_1,
	.param .u64 .ptr .global .align 1 triton_red_fused_add_embedding_mean_mul_pow_rsqrt_0_param_2,
	.param .u64 .ptr .global .align 1 triton_red_fused_add_embedding_mean_mul_pow_rsqrt_0_param_3,
	.param .u32 triton_red_fused_add_embedding_mean_mul_pow_rsqrt_0_param_4,
	.param .u32 triton_red_fused_add_embedding_mean_mul_pow_rsqrt_0_param_5,
	.param .u64 .ptr .global .align 1 triton_red_fused_add_embedding_mean_mul_pow_rsqrt_0_param_6
)
.reqntid 256
{
	.reg .pred 	%p<11>;
	.reg .b32 	%r<33>;
	.reg .b64 	%rd<57>;
	.loc	1 18 0                          // ckzqi7x2at4m3jxs6zdc46t47t6lw6nmlhnn2rg6szev4wipvslb.py:18:0
$L__func_begin0:
	.loc	1 18 0                          // ckzqi7x2at4m3jxs6zdc46t47t6lw6nmlhnn2rg6szev4wipvslb.py:18:0

// %bb.0:
	ld.param.b64 	%rd25, [triton_red_fused_add_embedding_mean_mul_pow_rsqrt_0_param_0];
$L__tmp0:
	.loc	1 23 28                         // ckzqi7x2at4m3jxs6zdc46t47t6lw6nmlhnn2rg6szev4wipvslb.py:23:28
	mov.u32 	%r1, %ctaid.x;
	.loc	1 23 33                         // ckzqi7x2at4m3jxs6zdc46t47t6lw6nmlhnn2rg6szev4wipvslb.py:23:33
	shl.b32 	%r8, %r1, 6;
	.loc	1 24 44                         // ckzqi7x2at4m3jxs6zdc46t47t6lw6nmlhnn2rg6szev4wipvslb.py:24:44
	mov.u32 	%r9, %tid.x;
	bfe.u32 	%r2, %r9, 2, 6;
	.loc	1 24 23                         // ckzqi7x2at4m3jxs6zdc46t47t6lw6nmlhnn2rg6szev4wipvslb.py:24:23
	or.b32 	%r3, %r2, %r8;
	.loc	1 25 21                         // ckzqi7x2at4m3jxs6zdc46t47t6lw6nmlhnn2rg6szev4wipvslb.py:25:21
	setp.lt.s32 	%p1, %r3, 1296;
	.loc	1 29 30                         // ckzqi7x2at4m3jxs6zdc46t47t6lw6nmlhnn2rg6szev4wipvslb.py:29:30
	mul.wide.s32 	%rd26, %r3, 8;
	add.s64 	%rd23, %rd25, %rd26;
	.loc	1 29 35                         // ckzqi7x2at4m3jxs6zdc46t47t6lw6nmlhnn2rg6szev4wipvslb.py:29:35
	// begin inline asm
	mov.u64 %rd21, 0x0;
	createpolicy.fractional.L2::evict_last.b64 %rd21, 1.0;
	// end inline asm
	// begin inline asm
	mov.u64 %rd22, 0x0;
	@%p1 ld.global.L1::evict_last.L2::cache_hint.b64 { %rd22 }, [ %rd23 + 0 ], %rd21;
	// end inline asm
	.loc	1 38 22                         // ckzqi7x2at4m3jxs6zdc46t47t6lw6nmlhnn2rg6szev4wipvslb.py:38:22
	add.s64 	%rd27, %rd22, 32128;
	.loc	1 39 22                         // ckzqi7x2at4m3jxs6zdc46t47t6lw6nmlhnn2rg6szev4wipvslb.py:39:22
	setp.lt.s64 	%p2, %rd22, 0;
	.loc	1 40 36                         // ckzqi7x2at4m3jxs6zdc46t47t6lw6nmlhnn2rg6szev4wipvslb.py:40:36
	selp.b64 	%rd28, %rd27, %rd22, %p2;
	.loc	1 41 41                         // ckzqi7x2at4m3jxs6zdc46t47t6lw6nmlhnn2rg6szev4wipvslb.py:41:41
	setp.gt.u64 	%p3, %rd28, 32127;
	.loc	1 42 45                         // ckzqi7x2at4m3jxs6zdc46t47t6lw6nmlhnn2rg6szev4wipvslb.py:42:45
	and.pred 	%p4, %p1, %p3;
	.loc	1 41 68                         // ckzqi7x2at4m3jxs6zdc46t47t6lw6nmlhnn2rg6szev4wipvslb.py:41:68
	@%p4 bra 	$L__BB0_6;
// %bb.1:                               // %.split.preheader
	.loc	1 0 68                          // ckzqi7x2at4m3jxs6zdc46t47t6lw6nmlhnn2rg6szev4wipvslb.py:0:68
	ld.param.b64 	%rd20, [triton_red_fused_add_embedding_mean_mul_pow_rsqrt_0_param_3];
	ld.param.b64 	%rd19, [triton_red_fused_add_embedding_mean_mul_pow_rsqrt_0_param_2];
	ld.param.b64 	%rd18, [triton_red_fused_add_embedding_mean_mul_pow_rsqrt_0_param_1];
	and.b32 	%r4, %r9, 3;
	mul.lo.s64 	%rd1, %rd28, 1536;
	add.s64 	%rd2, %rd18, %rd1;
	.loc	1 31 40                         // ckzqi7x2at4m3jxs6zdc46t47t6lw6nmlhnn2rg6szev4wipvslb.py:31:40
	cvt.u64.u32 	%rd3, %r4;
	mul.wide.u32 	%rd30, %r4, 4;
	add.s64 	%rd52, %rd2, %rd30;
	mov.b32 	%r32, 0f00000000;
	mov.b64 	%rd53, -4;
$L__BB0_2:                              // %.split
                                        // =>This Inner Loop Header: Depth=1
	.loc	1 41 68                         // ckzqi7x2at4m3jxs6zdc46t47t6lw6nmlhnn2rg6szev4wipvslb.py:41:68
	bar.sync 	0;
	.loc	1 42 52                         // ckzqi7x2at4m3jxs6zdc46t47t6lw6nmlhnn2rg6szev4wipvslb.py:42:52
	// begin inline asm
	mov.u64 %rd31, 0x0;
	createpolicy.fractional.L2::evict_last.b64 %rd31, 1.0;
	// end inline asm
	mov.b32 	%r12, 0;
	// begin inline asm
	mov.u32 %r11, %r12;
	@%p1 ld.global.L1::evict_last.L2::cache_hint.b32 { %r11 }, [ %rd52 + 0 ], %rd31;
	// end inline asm
	.loc	1 45 24                         // ckzqi7x2at4m3jxs6zdc46t47t6lw6nmlhnn2rg6szev4wipvslb.py:45:24
	fma.rn.f32 	%r13, %r11, %r11, %r32;
	.loc	1 46 49                         // ckzqi7x2at4m3jxs6zdc46t47t6lw6nmlhnn2rg6szev4wipvslb.py:46:49
	selp.f32 	%r32, %r13, %r32, %p1;
	.loc	1 31 40                         // ckzqi7x2at4m3jxs6zdc46t47t6lw6nmlhnn2rg6szev4wipvslb.py:31:40
	add.s64 	%rd53, %rd53, 4;
	add.s64 	%rd52, %rd52, 16;
	setp.lt.u64 	%p6, %rd53, 380;
	@%p6 bra 	$L__BB0_2;
// %bb.3:                               // %__nv_rsqrtf.exit
$L__tmp1:
	.loc	2 290 36                        // standard.py:290:36 @[ ckzqi7x2at4m3jxs6zdc46t47t6lw6nmlhnn2rg6szev4wipvslb.py:47:25 ]
	shfl.sync.bfly.b32 	%r14, %r32, 2, 31, -1;
	.loc	2 260 15                        // standard.py:260:15 @[ ckzqi7x2at4m3jxs6zdc46t47t6lw6nmlhnn2rg6szev4wipvslb.py:47:25 ]
	add.f32 	%r15, %r32, %r14;
	.loc	2 290 36                        // standard.py:290:36 @[ ckzqi7x2at4m3jxs6zdc46t47t6lw6nmlhnn2rg6szev4wipvslb.py:47:25 ]
	shfl.sync.bfly.b32 	%r16, %r15, 1, 31, -1;
	.loc	2 260 15                        // standard.py:260:15 @[ ckzqi7x2at4m3jxs6zdc46t47t6lw6nmlhnn2rg6szev4wipvslb.py:47:25 ]
	add.f32 	%r17, %r15, %r16;
	mov.b32 	%r18, 0f43C00000;
$L__tmp2:
	.loc	1 62 24                         // ckzqi7x2at4m3jxs6zdc46t47t6lw6nmlhnn2rg6szev4wipvslb.py:62:24
	div.full.f32 	%r19, %r17, %r18;
	.loc	1 64 24                         // ckzqi7x2at4m3jxs6zdc46t47t6lw6nmlhnn2rg6szev4wipvslb.py:64:24
	add.f32 	%r20, %r19, 0f358637BD;
	.loc	1 65 32                         // ckzqi7x2at4m3jxs6zdc46t47t6lw6nmlhnn2rg6szev4wipvslb.py:65:32
	rsqrt.approx.ftz.f32 	%r7, %r20;
	.loc	1 48 40                         // ckzqi7x2at4m3jxs6zdc46t47t6lw6nmlhnn2rg6szev4wipvslb.py:48:40
	mul.lo.s32 	%r21, %r2, 384;
	mad.lo.s32 	%r22, %r1, 24576, %r21;
	or.b32 	%r23, %r22, %r4;
	cvt.u64.u32 	%rd9, %r23;
	shl.b64 	%rd35, %rd3, 2;
	add.s64 	%rd36, %rd1, %rd35;
	add.s64 	%rd55, %rd18, %rd36;
	add.s64 	%rd54, %rd19, %rd35;
	mov.b64 	%rd56, -4;
$L__BB0_4:                              // =>This Inner Loop Header: Depth=1
	.loc	1 54 42                         // ckzqi7x2at4m3jxs6zdc46t47t6lw6nmlhnn2rg6szev4wipvslb.py:54:42
	// begin inline asm
	mov.u64 %rd37, 0x0;
	createpolicy.fractional.L2::evict_last.b64 %rd37, 1.0;
	// end inline asm
	mov.b32 	%r25, 0;
	mov.pred 	%p7, -1;
	// begin inline asm
	mov.u32 %r24, %r25;
	@%p7 ld.global.L1::evict_last.L2::cache_hint.b32 { %r24 }, [ %rd54 + 0 ], %rd37;
	// end inline asm
	.loc	1 59 70                         // ckzqi7x2at4m3jxs6zdc46t47t6lw6nmlhnn2rg6szev4wipvslb.py:59:70
	bar.sync 	0;
	.loc	1 60 54                         // ckzqi7x2at4m3jxs6zdc46t47t6lw6nmlhnn2rg6szev4wipvslb.py:60:54
	// begin inline asm
	mov.u64 %rd40, 0x0;
	createpolicy.fractional.L2::evict_first.b64 %rd40, 1.0;
	// end inline asm
	// begin inline asm
	mov.u32 %r26, %r25;
	@%p1 ld.global.L1::evict_first.L2::cache_hint.b32 { %r26 }, [ %rd55 + 0 ], %rd40;
	// end inline asm
	.loc	1 66 24                         // ckzqi7x2at4m3jxs6zdc46t47t6lw6nmlhnn2rg6szev4wipvslb.py:66:24
	mul.f32 	%r29, %r7, %r26;
	.loc	1 67 24                         // ckzqi7x2at4m3jxs6zdc46t47t6lw6nmlhnn2rg6szev4wipvslb.py:67:24
	mul.f32 	%r28, %r29, %r24;
	.loc	1 68 29                         // ckzqi7x2at4m3jxs6zdc46t47t6lw6nmlhnn2rg6szev4wipvslb.py:68:29
	add.s64 	%rd44, %rd9, %rd56;
	cvt.u32.u64 	%r30, %rd44;
	add.s32 	%r31, %r30, 4;
	mul.wide.s32 	%rd45, %r31, 4;
	add.s64 	%rd43, %rd20, %rd45;
	.loc	1 68 52                         // ckzqi7x2at4m3jxs6zdc46t47t6lw6nmlhnn2rg6szev4wipvslb.py:68:52
	// begin inline asm
	@%p1 st.global.b32 [ %rd43 + 0 ], { %r28 };
	// end inline asm
	.loc	1 48 40                         // ckzqi7x2at4m3jxs6zdc46t47t6lw6nmlhnn2rg6szev4wipvslb.py:48:40
	add.s64 	%rd56, %rd56, 4;
	add.s64 	%rd55, %rd55, 16;
	add.s64 	%rd54, %rd54, 16;
	setp.lt.u64 	%p10, %rd56, 380;
	@%p10 bra 	$L__BB0_4;
// %bb.5:
	.loc	1 48 4                          // ckzqi7x2at4m3jxs6zdc46t47t6lw6nmlhnn2rg6szev4wipvslb.py:48:4
	ret;
$L__BB0_6:
	.loc	1 41 68                         // ckzqi7x2at4m3jxs6zdc46t47t6lw6nmlhnn2rg6szev4wipvslb.py:41:68
	mov.b64 	%rd46, assertMessage_0;
	cvta.global.u64 	%rd47, %rd46;
	mov.b64 	%rd48, assertFile_0;
	cvta.global.u64 	%rd49, %rd48;
	mov.b64 	%rd50, assertFunc_0;
	cvta.global.u64 	%rd51, %rd50;
	{ // callseq 0, 0
	.param .b64 param0;
	st.param.b64 	[param0], %rd47;
	.param .b64 param1;
	st.param.b64 	[param1], %rd49;
	.param .b32 param2;
	st.param.b32 	[param2], 41;
	.param .b64 param3;
	st.param.b64 	[param3], %rd51;
	.param .b64 param4;
	st.param.b64 	[param4], 1;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	} // callseq 0
	trap;
$L__tmp3:
$L__func_end0:
                                        // -- End function
}
	.file	1 "/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/kz/ckzqi7x2at4m3jxs6zdc46t47t6lw6nmlhnn2rg6szev4wipvslb.py"
	.file	2 "/mnt/disk1/anaconda3/envs/pqhung/lib/python3.9/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 243                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xec DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 107
.b8 122
.b8 113
.b8 105
.b8 55
.b8 120
.b8 50
.b8 97
.b8 116
.b8 52
.b8 109
.b8 51
.b8 106
.b8 120
.b8 115
.b8 54
.b8 122
.b8 100
.b8 99
.b8 52
.b8 54
.b8 116
.b8 52
.b8 55
.b8 116
.b8 54
.b8 108
.b8 119
.b8 54
.b8 110
.b8 109
.b8 108
.b8 104
.b8 110
.b8 110
.b8 50
.b8 114
.b8 103
.b8 54
.b8 115
.b8 122
.b8 101
.b8 118
.b8 52
.b8 119
.b8 105
.b8 112
.b8 118
.b8 115
.b8 108
.b8 98
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 47                                  // DW_AT_comp_dir
.b8 109
.b8 110
.b8 116
.b8 47
.b8 100
.b8 105
.b8 115
.b8 107
.b8 49
.b8 47
.b8 107
.b8 104
.b8 105
.b8 101
.b8 109
.b8 116
.b8 116
.b8 47
.b8 117
.b8 110
.b8 105
.b8 118
.b8 101
.b8 114
.b8 115
.b8 97
.b8 108
.b8 45
.b8 111
.b8 102
.b8 102
.b8 108
.b8 105
.b8 110
.b8 101
.b8 45
.b8 98
.b8 98
.b8 111
.b8 47
.b8 116
.b8 111
.b8 114
.b8 99
.b8 104
.b8 105
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 117
.b8 98
.b8 117
.b8 110
.b8 116
.b8 117
.b8 47
.b8 107
.b8 122
.b8 0
.b8 2                                   // Abbrev [2] 0x92:0x36 DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 114
.b8 101
.b8 100
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 97
.b8 100
.b8 100
.b8 95
.b8 101
.b8 109
.b8 98
.b8 101
.b8 100
.b8 100
.b8 105
.b8 110
.b8 103
.b8 95
.b8 109
.b8 101
.b8 97
.b8 110
.b8 95
.b8 109
.b8 117
.b8 108
.b8 95
.b8 112
.b8 111
.b8 119
.b8 95
.b8 114
.b8 115
.b8 113
.b8 114
.b8 116
.b8 95
.b8 48
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0xc8:0x2e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 146                                // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xdd:0x18 DW_TAG_inlined_subroutine
.b32 146                                // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 47                                  // DW_AT_call_line
.b8 25                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}

; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-p6:32:32-p7:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define ptx_kernel void @triton_poi_fused_relu_0(ptr addrspace(1) %0, i32 %1, ptr addrspace(1) readnone captures(none) %2) local_unnamed_addr #0 !dbg !5 {
  %4 = tail call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !dbg !8
  %5 = shl i32 %4, 10, !dbg !9
  %6 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !10
  %7 = shl nuw nsw i32 %6, 2, !dbg !10
  %8 = and i32 %7, 508, !dbg !10
  %9 = or disjoint i32 %8, %5, !dbg !11
  %10 = sext i32 %9 to i64, !dbg !12
  %11 = getelementptr float, ptr addrspace(1) %0, i64 %10, !dbg !12
  %12 = getelementptr i8, ptr addrspace(1) %11, i64 2048, !dbg !12
  %13 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09ld.global.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l"(ptr addrspace(1) %11) #2, !dbg !13
  %14 = extractvalue { i32, i32, i32, i32 } %13, 0, !dbg !13
  %15 = extractvalue { i32, i32, i32, i32 } %13, 1, !dbg !13
  %16 = extractvalue { i32, i32, i32, i32 } %13, 2, !dbg !13
  %17 = extractvalue { i32, i32, i32, i32 } %13, 3, !dbg !13
  %18 = bitcast i32 %14 to float, !dbg !13
  %19 = bitcast i32 %15 to float, !dbg !13
  %20 = bitcast i32 %16 to float, !dbg !13
  %21 = bitcast i32 %17 to float, !dbg !13
  %22 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09ld.global.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l"(ptr addrspace(1) %12) #2, !dbg !13
  %23 = extractvalue { i32, i32, i32, i32 } %22, 0, !dbg !13
  %24 = extractvalue { i32, i32, i32, i32 } %22, 1, !dbg !13
  %25 = extractvalue { i32, i32, i32, i32 } %22, 2, !dbg !13
  %26 = extractvalue { i32, i32, i32, i32 } %22, 3, !dbg !13
  %27 = bitcast i32 %23 to float, !dbg !13
  %28 = bitcast i32 %24 to float, !dbg !13
  %29 = bitcast i32 %25 to float, !dbg !13
  %30 = bitcast i32 %26 to float, !dbg !13
  %31 = fcmp olt float %18, 0.000000e+00, !dbg !14
  %32 = fcmp olt float %19, 0.000000e+00, !dbg !14
  %33 = fcmp olt float %20, 0.000000e+00, !dbg !14
  %34 = fcmp olt float %21, 0.000000e+00, !dbg !14
  %35 = fcmp olt float %27, 0.000000e+00, !dbg !14
  %36 = fcmp olt float %28, 0.000000e+00, !dbg !14
  %37 = fcmp olt float %29, 0.000000e+00, !dbg !14
  %38 = fcmp olt float %30, 0.000000e+00, !dbg !14
  %39 = select i1 %31, float 0.000000e+00, float %18, !dbg !18
  %40 = select i1 %32, float 0.000000e+00, float %19, !dbg !18
  %41 = select i1 %33, float 0.000000e+00, float %20, !dbg !18
  %42 = select i1 %34, float 0.000000e+00, float %21, !dbg !18
  %43 = select i1 %35, float 0.000000e+00, float %27, !dbg !18
  %44 = select i1 %36, float 0.000000e+00, float %28, !dbg !18
  %45 = select i1 %37, float 0.000000e+00, float %29, !dbg !18
  %46 = select i1 %38, float 0.000000e+00, float %30, !dbg !18
  %47 = bitcast float %39 to i32, !dbg !19
  %48 = bitcast float %40 to i32, !dbg !19
  %49 = bitcast float %41 to i32, !dbg !19
  %50 = bitcast float %42 to i32, !dbg !19
  tail call void asm sideeffect "st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l"(i32 %47, i32 %48, i32 %49, i32 %50, ptr addrspace(1) %11) #2, !dbg !19
  %51 = bitcast float %43 to i32, !dbg !19
  %52 = bitcast float %44 to i32, !dbg !19
  %53 = bitcast float %45 to i32, !dbg !19
  %54 = bitcast float %46 to i32, !dbg !19
  tail call void asm sideeffect "st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l"(i32 %51, i32 %52, i32 %53, i32 %54, ptr addrspace(1) %12) #2, !dbg !19
  ret void, !dbg !20
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef range(i32 0, 2147483647) i32 @llvm.nvvm.read.ptx.sreg.ctaid.x() #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef range(i32 0, 1024) i32 @llvm.nvvm.read.ptx.sreg.tid.x() #1

attributes #0 = { "nvvm.reqntid"="128" }
attributes #1 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #2 = { nounwind }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!2, !3}
!llvm.ident = !{!4}

!0 = distinct !DICompileUnit(language: DW_LANG_C, file: !1, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!1 = !DIFile(filename: "c2kn4c4sj3pc4mtsesn5z37mx5ki5a6bgda2gq4nz47csepevy4r.py", directory: "/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/2k")
!2 = !{i32 2, !"Debug Info Version", i32 3}
!3 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!4 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!5 = distinct !DISubprogram(name: "triton_poi_fused_relu_0", linkageName: "triton_poi_fused_relu_0", scope: !1, file: !1, line: 18, type: !6, scopeLine: 18, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0)
!6 = !DISubroutineType(cc: DW_CC_normal, types: !7)
!7 = !{}
!8 = !DILocation(line: 20, column: 28, scope: !5)
!9 = !DILocation(line: 20, column: 33, scope: !5)
!10 = !DILocation(line: 21, column: 36, scope: !5)
!11 = !DILocation(line: 21, column: 23, scope: !5)
!12 = !DILocation(line: 24, column: 34, scope: !5)
!13 = !DILocation(line: 24, column: 39, scope: !5)
!14 = !DILocation(line: 111, column: 15, scope: !15, inlinedAt: !17)
!15 = distinct !DILexicalBlockFile(scope: !5, file: !16, discriminator: 0)
!16 = !DIFile(filename: "triton_helpers.py", directory: "/mnt/disk1/anaconda3/envs/pqhung/lib/python3.9/site-packages/torch/_inductor/runtime")
!17 = !DILocation(line: 26, column: 40, scope: !5)
!18 = !DILocation(line: 114, column: 29, scope: !15, inlinedAt: !17)
!19 = !DILocation(line: 27, column: 39, scope: !5)
!20 = !DILocation(line: 27, column: 4, scope: !5)

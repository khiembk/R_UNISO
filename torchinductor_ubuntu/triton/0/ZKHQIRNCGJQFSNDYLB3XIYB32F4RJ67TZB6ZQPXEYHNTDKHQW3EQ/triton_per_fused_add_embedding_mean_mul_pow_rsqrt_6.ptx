//
// Generated by LLVM NVPTX Back-End
//

.version 8.7
.target sm_86
.address_size 64

	// .globl	triton_per_fused_add_embedding_mean_mul_pow_rsqrt_6 // -- Begin function triton_per_fused_add_embedding_mean_mul_pow_rsqrt_6
.extern .func __assertfail
(
	.param .b64 __assertfail_param_0,
	.param .b64 __assertfail_param_1,
	.param .b32 __assertfail_param_2,
	.param .b64 __assertfail_param_3,
	.param .b64 __assertfail_param_4
)
.noreturn;
.global .align 1 .b8 assertFunc_0[8] = {117, 110, 107, 110, 111, 119, 110};
.global .align 1 .b8 assertFile_0[121] = {47, 109, 110, 116, 47, 100, 105, 115, 107, 49, 47, 107, 104, 105, 101, 109, 116, 116, 47, 117, 110, 105, 118, 101, 114, 115, 97, 108, 45, 111, 102, 102, 108, 105, 110, 101, 45, 98, 98, 111, 47, 116, 111, 114, 99, 104, 105, 110, 100, 117, 99, 116, 111, 114, 95, 117, 98, 117, 110, 116, 117, 47, 97, 110, 47, 99, 97, 110, 55, 122, 103, 113, 113, 120, 114, 118, 115, 111, 112, 53, 51, 109, 118, 100, 104, 107, 98, 106, 51, 109, 120, 116, 110, 118, 53, 114, 103, 119, 50, 55, 116, 115, 101, 101, 122, 50, 54, 104, 54, 115, 117, 98, 110, 105, 111, 104, 100, 46, 112, 121};
.global .align 1 .b8 assertMessage_0[39] = {105, 110, 100, 101, 120, 32, 111, 117, 116, 32, 111, 102, 32, 98, 111, 117, 110, 100, 115, 58, 32, 48, 32, 60, 61, 32, 116, 109, 112, 52, 32, 60, 32, 51, 50, 49, 50, 56};
.extern .shared .align 16 .b8 global_smem[];
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
                                        // @triton_per_fused_add_embedding_mean_mul_pow_rsqrt_6
.visible .entry triton_per_fused_add_embedding_mean_mul_pow_rsqrt_6(
	.param .u64 .ptr .global .align 1 triton_per_fused_add_embedding_mean_mul_pow_rsqrt_6_param_0,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_embedding_mean_mul_pow_rsqrt_6_param_1,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_embedding_mean_mul_pow_rsqrt_6_param_2,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_embedding_mean_mul_pow_rsqrt_6_param_3,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_embedding_mean_mul_pow_rsqrt_6_param_4,
	.param .u32 triton_per_fused_add_embedding_mean_mul_pow_rsqrt_6_param_5,
	.param .u32 triton_per_fused_add_embedding_mean_mul_pow_rsqrt_6_param_6,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_embedding_mean_mul_pow_rsqrt_6_param_7
)
.reqntid 128
{
	.reg .pred 	%p<11>;
	.reg .b32 	%r<85>;
	.reg .b64 	%rd<51>;
	.loc	1 18 0                          // can7zgqqxrvsop53mvdhkbj3mxtnv5rgw27tseez26h6subniohd.py:18:0
$L__func_begin0:
	.loc	1 18 0                          // can7zgqqxrvsop53mvdhkbj3mxtnv5rgw27tseez26h6subniohd.py:18:0

// %bb.0:
	ld.param.b64 	%rd30, [triton_per_fused_add_embedding_mean_mul_pow_rsqrt_6_param_0];
$L__tmp0:
	.loc	1 25 28                         // can7zgqqxrvsop53mvdhkbj3mxtnv5rgw27tseez26h6subniohd.py:25:28
	mov.u32 	%r26, %ctaid.x;
	.loc	1 28 28                         // can7zgqqxrvsop53mvdhkbj3mxtnv5rgw27tseez26h6subniohd.py:28:28
	mov.u32 	%r1, %tid.x;
	ld.param.b64 	%rd31, [triton_per_fused_add_embedding_mean_mul_pow_rsqrt_6_param_2];
	shl.b32 	%r27, %r1, 2;
	ld.param.b64 	%rd32, [triton_per_fused_add_embedding_mean_mul_pow_rsqrt_6_param_3];
	and.b32 	%r28, %r27, 508;
	.loc	1 30 25                         // can7zgqqxrvsop53mvdhkbj3mxtnv5rgw27tseez26h6subniohd.py:30:25
	setp.lt.u32 	%p1, %r28, 384;
	.loc	1 35 30                         // can7zgqqxrvsop53mvdhkbj3mxtnv5rgw27tseez26h6subniohd.py:35:30
	mul.wide.u32 	%rd33, %r26, 8;
	add.s64 	%rd8, %rd30, %rd33;
	.loc	1 35 35                         // can7zgqqxrvsop53mvdhkbj3mxtnv5rgw27tseez26h6subniohd.py:35:35
	// begin inline asm
	mov.u64 %rd6, 0x0;
	createpolicy.fractional.L2::evict_last.b64 %rd6, 1.0;
	// end inline asm
	// begin inline asm
	mov.u64 %rd7, 0x0;
	ld.global.L1::evict_last.L2::cache_hint.b64 { %rd7 }, [ %rd8 + 0 ], %rd6;
	// end inline asm
	// begin inline asm
	mov.u64 %rd10, 0x0;
	createpolicy.fractional.L2::evict_last.b64 %rd10, 1.0;
	// end inline asm
	// begin inline asm
	mov.u64 %rd11, 0x0;
	ld.global.L1::evict_last.L2::cache_hint.b64 { %rd11 }, [ %rd8 + 0 ], %rd10;
	// end inline asm
	// begin inline asm
	mov.u64 %rd14, 0x0;
	createpolicy.fractional.L2::evict_last.b64 %rd14, 1.0;
	// end inline asm
	// begin inline asm
	mov.u64 %rd15, 0x0;
	ld.global.L1::evict_last.L2::cache_hint.b64 { %rd15 }, [ %rd8 + 0 ], %rd14;
	// end inline asm
	// begin inline asm
	mov.u64 %rd18, 0x0;
	createpolicy.fractional.L2::evict_last.b64 %rd18, 1.0;
	// end inline asm
	// begin inline asm
	mov.u64 %rd19, 0x0;
	ld.global.L1::evict_last.L2::cache_hint.b64 { %rd19 }, [ %rd8 + 0 ], %rd18;
	// end inline asm
	// begin inline asm
	mov.u64 %rd22, 0x0;
	createpolicy.fractional.L2::evict_last.b64 %rd22, 1.0;
	// end inline asm
	// begin inline asm
	mov.u64 %rd23, 0x0;
	ld.global.L1::evict_last.L2::cache_hint.b64 { %rd23 }, [ %rd8 + 0 ], %rd22;
	// end inline asm
	.loc	1 36 37                         // can7zgqqxrvsop53mvdhkbj3mxtnv5rgw27tseez26h6subniohd.py:36:37
	mad.lo.s32 	%r29, %r26, 384, %r28;
	.loc	1 36 30                         // can7zgqqxrvsop53mvdhkbj3mxtnv5rgw27tseez26h6subniohd.py:36:30
	mul.wide.s32 	%rd34, %r29, 4;
	add.s64 	%rd26, %rd31, %rd34;
	mov.b32 	%r25, 0;
	.loc	1 36 46                         // can7zgqqxrvsop53mvdhkbj3mxtnv5rgw27tseez26h6subniohd.py:36:46
	// begin inline asm
	mov.u32 %r10, %r25;
	mov.u32 %r11, %r25;
	mov.u32 %r12, %r25;
	mov.u32 %r13, %r25;
	@%p1 ld.global.v4.b32 { %r10, %r11, %r12, %r13 }, [ %rd26 + 0 ];
	// end inline asm
	.loc	1 37 31                         // can7zgqqxrvsop53mvdhkbj3mxtnv5rgw27tseez26h6subniohd.py:37:31
	mul.wide.u32 	%rd35, %r28, 4;
	add.s64 	%rd28, %rd32, %rd35;
	.loc	1 37 38                         // can7zgqqxrvsop53mvdhkbj3mxtnv5rgw27tseez26h6subniohd.py:37:38
	// begin inline asm
	mov.u64 %rd27, 0x0;
	createpolicy.fractional.L2::evict_last.b64 %rd27, 1.0;
	// end inline asm
	// begin inline asm
	mov.u32 %r18, %r25;
	mov.u32 %r19, %r25;
	mov.u32 %r20, %r25;
	mov.u32 %r21, %r25;
	@%p1 ld.global.L1::evict_last.L2::cache_hint.v4.b32 { %r18, %r19, %r20, %r21 }, [ %rd28 + 0 ], %rd27;
	// end inline asm
	.loc	1 39 18                         // can7zgqqxrvsop53mvdhkbj3mxtnv5rgw27tseez26h6subniohd.py:39:18
	add.s64 	%rd36, %rd23, 32128;
	.loc	1 40 18                         // can7zgqqxrvsop53mvdhkbj3mxtnv5rgw27tseez26h6subniohd.py:40:18
	setp.lt.s64 	%p3, %rd23, 0;
	.loc	1 41 32                         // can7zgqqxrvsop53mvdhkbj3mxtnv5rgw27tseez26h6subniohd.py:41:32
	selp.b64 	%rd37, %rd36, %rd23, %p3;
	.loc	1 42 36                         // can7zgqqxrvsop53mvdhkbj3mxtnv5rgw27tseez26h6subniohd.py:42:36
	setp.lt.u64 	%p4, %rd37, 32128;
	.loc	1 42 51                         // can7zgqqxrvsop53mvdhkbj3mxtnv5rgw27tseez26h6subniohd.py:42:51
	@%p4 bra 	$L__BB0_2;
	bra.uni 	$L__BB0_1;
$L__BB0_2:                              // %__nv_rsqrtf.exit
	.loc	1 0 51                          // can7zgqqxrvsop53mvdhkbj3mxtnv5rgw27tseez26h6subniohd.py:0:51
	ld.param.b64 	%rd5, [triton_per_fused_add_embedding_mean_mul_pow_rsqrt_6_param_4];
	ld.param.b64 	%rd4, [triton_per_fused_add_embedding_mean_mul_pow_rsqrt_6_param_1];
	cvt.s64.s32 	%rd2, %r29;
	cvt.u64.u32 	%rd3, %r28;
	cvt.u32.u64 	%r48, %rd3;
	.loc	1 30 25                         // can7zgqqxrvsop53mvdhkbj3mxtnv5rgw27tseez26h6subniohd.py:30:25
	setp.lt.u32 	%p5, %r48, 384;
	.loc	1 40 18                         // can7zgqqxrvsop53mvdhkbj3mxtnv5rgw27tseez26h6subniohd.py:40:18
	setp.lt.s64 	%p10, %rd19, 0;
	.loc	1 39 18                         // can7zgqqxrvsop53mvdhkbj3mxtnv5rgw27tseez26h6subniohd.py:39:18
	add.s64 	%rd40, %rd19, 32128;
	.loc	1 41 32                         // can7zgqqxrvsop53mvdhkbj3mxtnv5rgw27tseez26h6subniohd.py:41:32
	selp.b64 	%rd41, %rd40, %rd19, %p10;
	.loc	1 28 28                         // can7zgqqxrvsop53mvdhkbj3mxtnv5rgw27tseez26h6subniohd.py:28:28
	and.b32 	%r49, %r1, 31;
	.loc	1 42 51                         // can7zgqqxrvsop53mvdhkbj3mxtnv5rgw27tseez26h6subniohd.py:42:51
	bar.sync 	0;
	.loc	1 43 30                         // can7zgqqxrvsop53mvdhkbj3mxtnv5rgw27tseez26h6subniohd.py:43:30
	mad.lo.s64 	%rd42, %rd41, 1536, %rd4;
	shl.b64 	%rd43, %rd3, 2;
	add.s64 	%rd38, %rd42, %rd43;
	.loc	1 43 48                         // can7zgqqxrvsop53mvdhkbj3mxtnv5rgw27tseez26h6subniohd.py:43:48
	// begin inline asm
	mov.u32 %r30, %r25;
	mov.u32 %r31, %r25;
	mov.u32 %r32, %r25;
	mov.u32 %r33, %r25;
	@%p5 ld.global.v4.b32 { %r30, %r31, %r32, %r33 }, [ %rd38 + 0 ];
	// end inline asm
	.loc	1 44 18                         // can7zgqqxrvsop53mvdhkbj3mxtnv5rgw27tseez26h6subniohd.py:44:18
	add.f32 	%r50, %r10, %r30;
	add.f32 	%r51, %r11, %r31;
	add.f32 	%r52, %r12, %r32;
	add.f32 	%r53, %r13, %r33;
	.loc	1 45 18                         // can7zgqqxrvsop53mvdhkbj3mxtnv5rgw27tseez26h6subniohd.py:45:18
	mul.f32 	%r54, %r51, %r51;
$L__tmp1:
	.loc	2 260 15                        // standard.py:260:15 @[ can7zgqqxrvsop53mvdhkbj3mxtnv5rgw27tseez26h6subniohd.py:48:59 ]
	fma.rn.f32 	%r55, %r50, %r50, %r54;
	fma.rn.f32 	%r56, %r52, %r52, %r55;
	fma.rn.f32 	%r57, %r53, %r53, %r56;
	selp.f32 	%r58, %r57, 0f00000000, %p5;
	.loc	2 290 36                        // standard.py:290:36 @[ can7zgqqxrvsop53mvdhkbj3mxtnv5rgw27tseez26h6subniohd.py:48:59 ]
	shfl.sync.bfly.b32 	%r59, %r58, 16, 31, -1;
	.loc	2 260 15                        // standard.py:260:15 @[ can7zgqqxrvsop53mvdhkbj3mxtnv5rgw27tseez26h6subniohd.py:48:59 ]
	add.f32 	%r60, %r58, %r59;
	.loc	2 290 36                        // standard.py:290:36 @[ can7zgqqxrvsop53mvdhkbj3mxtnv5rgw27tseez26h6subniohd.py:48:59 ]
	shfl.sync.bfly.b32 	%r61, %r60, 8, 31, -1;
	.loc	2 260 15                        // standard.py:260:15 @[ can7zgqqxrvsop53mvdhkbj3mxtnv5rgw27tseez26h6subniohd.py:48:59 ]
	add.f32 	%r62, %r60, %r61;
	.loc	2 290 36                        // standard.py:290:36 @[ can7zgqqxrvsop53mvdhkbj3mxtnv5rgw27tseez26h6subniohd.py:48:59 ]
	shfl.sync.bfly.b32 	%r63, %r62, 4, 31, -1;
	.loc	2 260 15                        // standard.py:260:15 @[ can7zgqqxrvsop53mvdhkbj3mxtnv5rgw27tseez26h6subniohd.py:48:59 ]
	add.f32 	%r64, %r62, %r63;
	.loc	2 290 36                        // standard.py:290:36 @[ can7zgqqxrvsop53mvdhkbj3mxtnv5rgw27tseez26h6subniohd.py:48:59 ]
	shfl.sync.bfly.b32 	%r65, %r64, 2, 31, -1;
	.loc	2 260 15                        // standard.py:260:15 @[ can7zgqqxrvsop53mvdhkbj3mxtnv5rgw27tseez26h6subniohd.py:48:59 ]
	add.f32 	%r66, %r64, %r65;
	.loc	2 290 36                        // standard.py:290:36 @[ can7zgqqxrvsop53mvdhkbj3mxtnv5rgw27tseez26h6subniohd.py:48:59 ]
	shfl.sync.bfly.b32 	%r67, %r66, 1, 31, -1;
	.loc	2 260 15                        // standard.py:260:15 @[ can7zgqqxrvsop53mvdhkbj3mxtnv5rgw27tseez26h6subniohd.py:48:59 ]
	add.f32 	%r39, %r66, %r67;
	.loc	2 290 36                        // standard.py:290:36 @[ can7zgqqxrvsop53mvdhkbj3mxtnv5rgw27tseez26h6subniohd.py:48:59 ]
	setp.eq.s32 	%p6, %r49, 0;
	shr.u32 	%r68, %r1, 3;
	and.b32 	%r69, %r68, 12;
	mov.b32 	%r70, global_smem;
	add.s32 	%r38, %r70, %r69;
	// begin inline asm
	@%p6 st.shared.b32 [ %r38 + 0 ], %r39;
	// end inline asm
	bar.sync 	0;
	setp.lt.u32 	%p7, %r1, 4;
	add.s32 	%r41, %r70, %r27;
	// begin inline asm
	@%p7 ld.shared.b32 %r40, [ %r41 + 0 ];
	// end inline asm
	shfl.sync.bfly.b32 	%r72, %r40, 2, 31, -1;
	.loc	2 260 15                        // standard.py:260:15 @[ can7zgqqxrvsop53mvdhkbj3mxtnv5rgw27tseez26h6subniohd.py:48:59 ]
	add.f32 	%r73, %r40, %r72;
	.loc	2 290 36                        // standard.py:290:36 @[ can7zgqqxrvsop53mvdhkbj3mxtnv5rgw27tseez26h6subniohd.py:48:59 ]
	shfl.sync.bfly.b32 	%r74, %r73, 1, 31, -1;
	.loc	2 260 15                        // standard.py:260:15 @[ can7zgqqxrvsop53mvdhkbj3mxtnv5rgw27tseez26h6subniohd.py:48:59 ]
	add.f32 	%r43, %r73, %r74;
	.loc	2 290 36                        // standard.py:290:36 @[ can7zgqqxrvsop53mvdhkbj3mxtnv5rgw27tseez26h6subniohd.py:48:59 ]
	setp.eq.s32 	%p8, %r1, 0;
	// begin inline asm
	@%p8 st.shared.b32 [ %r41 + 0 ], %r43;
	// end inline asm
	bar.sync 	0;
	ld.shared.b32 	%r75, [global_smem];
$L__tmp2:
	.loc	3 66 15                         // triton_helpers.py:66:15 @[ can7zgqqxrvsop53mvdhkbj3mxtnv5rgw27tseez26h6subniohd.py:48:45 ]
	add.f32 	%r76, %r75, 0f00000000;
	mov.b32 	%r77, 0f43C00000;
$L__tmp3:
	.loc	1 50 21                         // can7zgqqxrvsop53mvdhkbj3mxtnv5rgw27tseez26h6subniohd.py:50:21
	div.full.f32 	%r78, %r76, %r77;
	.loc	1 52 20                         // can7zgqqxrvsop53mvdhkbj3mxtnv5rgw27tseez26h6subniohd.py:52:20
	add.f32 	%r79, %r78, 0f358637BD;
	.loc	1 53 28                         // can7zgqqxrvsop53mvdhkbj3mxtnv5rgw27tseez26h6subniohd.py:53:28
	rsqrt.approx.ftz.f32 	%r80, %r79;
	.loc	1 54 19                         // can7zgqqxrvsop53mvdhkbj3mxtnv5rgw27tseez26h6subniohd.py:54:19
	mul.f32 	%r81, %r50, %r80;
	mul.f32 	%r82, %r51, %r80;
	mul.f32 	%r83, %r52, %r80;
	mul.f32 	%r84, %r53, %r80;
	.loc	1 55 20                         // can7zgqqxrvsop53mvdhkbj3mxtnv5rgw27tseez26h6subniohd.py:55:20
	mul.f32 	%r44, %r81, %r18;
	mul.f32 	%r45, %r82, %r19;
	mul.f32 	%r46, %r83, %r20;
	mul.f32 	%r47, %r84, %r21;
	.loc	1 56 25                         // can7zgqqxrvsop53mvdhkbj3mxtnv5rgw27tseez26h6subniohd.py:56:25
	shl.b64 	%rd44, %rd2, 2;
	add.s64 	%rd39, %rd5, %rd44;
	.loc	1 56 48                         // can7zgqqxrvsop53mvdhkbj3mxtnv5rgw27tseez26h6subniohd.py:56:48
	// begin inline asm
	@%p5 st.global.v4.b32 [ %rd39 + 0 ], { %r44, %r45, %r46, %r47 };
	// end inline asm
	.loc	1 56 4                          // can7zgqqxrvsop53mvdhkbj3mxtnv5rgw27tseez26h6subniohd.py:56:4
	ret;
$L__BB0_1:
	.loc	1 42 51                         // can7zgqqxrvsop53mvdhkbj3mxtnv5rgw27tseez26h6subniohd.py:42:51
	mov.b64 	%rd45, assertMessage_0;
	cvta.global.u64 	%rd46, %rd45;
	mov.b64 	%rd47, assertFile_0;
	cvta.global.u64 	%rd48, %rd47;
	mov.b64 	%rd49, assertFunc_0;
	cvta.global.u64 	%rd50, %rd49;
	{ // callseq 0, 0
	.param .b64 param0;
	st.param.b64 	[param0], %rd46;
	.param .b64 param1;
	st.param.b64 	[param1], %rd48;
	.param .b32 param2;
	st.param.b32 	[param2], 42;
	.param .b64 param3;
	st.param.b64 	[param3], %rd50;
	.param .b64 param4;
	st.param.b64 	[param4], 1;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	} // callseq 0
	trap;
$L__tmp4:
$L__func_end0:
                                        // -- End function
}
	.file	1 "/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/an/can7zgqqxrvsop53mvdhkbj3mxtnv5rgw27tseez26h6subniohd.py"
	.file	2 "/mnt/disk1/anaconda3/envs/pqhung/lib/python3.9/site-packages/triton/language/standard.py"
	.file	3 "/mnt/disk1/anaconda3/envs/pqhung/lib/python3.9/site-packages/torch/_inductor/runtime/triton_helpers.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 267                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x104 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 97
.b8 110
.b8 55
.b8 122
.b8 103
.b8 113
.b8 113
.b8 120
.b8 114
.b8 118
.b8 115
.b8 111
.b8 112
.b8 53
.b8 51
.b8 109
.b8 118
.b8 100
.b8 104
.b8 107
.b8 98
.b8 106
.b8 51
.b8 109
.b8 120
.b8 116
.b8 110
.b8 118
.b8 53
.b8 114
.b8 103
.b8 119
.b8 50
.b8 55
.b8 116
.b8 115
.b8 101
.b8 101
.b8 122
.b8 50
.b8 54
.b8 104
.b8 54
.b8 115
.b8 117
.b8 98
.b8 110
.b8 105
.b8 111
.b8 104
.b8 100
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 47                                  // DW_AT_comp_dir
.b8 109
.b8 110
.b8 116
.b8 47
.b8 100
.b8 105
.b8 115
.b8 107
.b8 49
.b8 47
.b8 107
.b8 104
.b8 105
.b8 101
.b8 109
.b8 116
.b8 116
.b8 47
.b8 117
.b8 110
.b8 105
.b8 118
.b8 101
.b8 114
.b8 115
.b8 97
.b8 108
.b8 45
.b8 111
.b8 102
.b8 102
.b8 108
.b8 105
.b8 110
.b8 101
.b8 45
.b8 98
.b8 98
.b8 111
.b8 47
.b8 116
.b8 111
.b8 114
.b8 99
.b8 104
.b8 105
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 117
.b8 98
.b8 117
.b8 110
.b8 116
.b8 117
.b8 47
.b8 97
.b8 110
.b8 0
.b8 2                                   // Abbrev [2] 0x92:0x36 DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 101
.b8 114
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 97
.b8 100
.b8 100
.b8 95
.b8 101
.b8 109
.b8 98
.b8 101
.b8 100
.b8 100
.b8 105
.b8 110
.b8 103
.b8 95
.b8 109
.b8 101
.b8 97
.b8 110
.b8 95
.b8 109
.b8 117
.b8 108
.b8 95
.b8 112
.b8 111
.b8 119
.b8 95
.b8 114
.b8 115
.b8 113
.b8 114
.b8 116
.b8 95
.b8 54
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0xc8:0x46 DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 146                                // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xdd:0x18 DW_TAG_inlined_subroutine
.b32 146                                // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 48                                  // DW_AT_call_line
.b8 59                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xf5:0x18 DW_TAG_inlined_subroutine
.b32 146                                // DW_AT_abstract_origin
.b64 $L__tmp2                           // DW_AT_low_pc
.b64 $L__tmp3                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 48                                  // DW_AT_call_line
.b8 45                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}

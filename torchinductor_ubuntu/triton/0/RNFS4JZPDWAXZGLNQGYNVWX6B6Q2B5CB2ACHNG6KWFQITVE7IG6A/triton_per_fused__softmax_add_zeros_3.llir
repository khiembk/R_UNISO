; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-p6:32:32-p7:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@global_smem = external addrspace(3) global [0 x i8], align 16

define ptx_kernel void @triton_per_fused__softmax_add_zeros_3(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, i32 %3, i32 %4, ptr addrspace(1) readnone captures(none) %5) local_unnamed_addr #0 !dbg !5 {
  %7 = tail call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !dbg !8
  %8 = icmp samesign ult i32 %7, 400, !dbg !9
  %9 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !10
  %10 = and i32 %9, 31, !dbg !10
  %11 = lshr i32 %9, 5, !dbg !10
  %12 = and i32 %9, 63, !dbg !10
  %13 = icmp samesign ult i32 %12, 50, !dbg !11
  %14 = udiv i32 %7, 50, !dbg !12
  %15 = mul i32 %14, 50, !dbg !13
  %.decomposed = sub i32 %7, %15, !dbg !13
  %16 = mul i32 %7, 50, !dbg !14
  %17 = add i32 %12, %16, !dbg !15
  %18 = sext i32 %17 to i64, !dbg !16
  %19 = getelementptr float, ptr addrspace(1) %0, i64 %18, !dbg !16
  %20 = and i1 %8, %13, !dbg !17
  %21 = tail call i32 asm sideeffect "mov.u32 $0, $1;\0A\09@$3 ld.global.b32 { $0 }, [ $2 + 0 ];", "=r,r,l,b"(i32 0, ptr addrspace(1) %19, i1 %20) #5, !dbg !18
  %22 = bitcast i32 %21 to float, !dbg !18
  %23 = zext nneg i32 %12 to i64, !dbg !19
  %24 = getelementptr float, ptr addrspace(1) %1, i64 %23, !dbg !19
  %25 = tail call i64 asm sideeffect "mov.u64 $0, 0x0;\0A\09createpolicy.fractional.L2::evict_last.b64 $0, 1.0;", "=l"() #5, !dbg !20
  %26 = tail call i32 asm sideeffect "mov.u32 $0, $1;\0A\09@$4 ld.global.L1::evict_last.L2::cache_hint.b32 { $0 }, [ $2 + 0 ], $3;", "=r,r,l,l,b"(i32 0, ptr addrspace(1) %24, i64 %25, i1 %13) #5, !dbg !20
  %27 = bitcast i32 %26 to float, !dbg !20
  %28 = fadd float %27, 0.000000e+00, !dbg !21
  %29 = fadd float %28, %22, !dbg !22
  %30 = select i1 %20, float %29, float 0xFFF0000000000000, !dbg !23
  %31 = bitcast float %30 to i32, !dbg !24
  %32 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %31, i32 16, i32 31), !dbg !24
  %33 = bitcast i32 %32 to float, !dbg !24
  %34 = fcmp ogt float %30, %33, !dbg !28
  %35 = fcmp uno float %30, 0.000000e+00, !dbg !29
  %36 = or i1 %34, %35, !dbg !30
  %37 = select i1 %36, float %30, float %33, !dbg !31
  %38 = bitcast float %37 to i32, !dbg !24
  %39 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %38, i32 8, i32 31), !dbg !24
  %40 = bitcast i32 %39 to float, !dbg !24
  %41 = fcmp ogt float %37, %40, !dbg !28
  %42 = fcmp uno float %37, 0.000000e+00, !dbg !29
  %43 = or i1 %41, %42, !dbg !30
  %44 = select i1 %43, float %37, float %40, !dbg !31
  %45 = bitcast float %44 to i32, !dbg !24
  %46 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %45, i32 4, i32 31), !dbg !24
  %47 = bitcast i32 %46 to float, !dbg !24
  %48 = fcmp ogt float %44, %47, !dbg !28
  %49 = fcmp uno float %44, 0.000000e+00, !dbg !29
  %50 = or i1 %48, %49, !dbg !30
  %51 = select i1 %50, float %44, float %47, !dbg !31
  %52 = bitcast float %51 to i32, !dbg !24
  %53 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %52, i32 2, i32 31), !dbg !24
  %54 = bitcast i32 %53 to float, !dbg !24
  %55 = fcmp ogt float %51, %54, !dbg !28
  %56 = fcmp uno float %51, 0.000000e+00, !dbg !29
  %57 = or i1 %55, %56, !dbg !30
  %58 = select i1 %57, float %51, float %54, !dbg !31
  %59 = bitcast float %58 to i32, !dbg !24
  %60 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %59, i32 1, i32 31), !dbg !24
  %61 = bitcast i32 %60 to float, !dbg !24
  %62 = fcmp ogt float %58, %61, !dbg !28
  %63 = fcmp uno float %58, 0.000000e+00, !dbg !29
  %64 = or i1 %62, %63, !dbg !30
  %65 = and i32 %11, 1, !dbg !24
  %66 = icmp eq i32 %10, 0, !dbg !24
  %67 = getelementptr float, ptr addrspace(3) @global_smem, i32 %65, !dbg !24
  %68 = select i1 %64, i32 %59, i32 %60, !dbg !31
  %69 = insertelement <1 x i32> poison, i32 %68, i64 0, !dbg !24
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %67, <1 x i32> %69, i1 %66) #5, !dbg !24
  tail call void @llvm.nvvm.barrier.cta.sync.aligned.all(i32 0), !dbg !24
  %70 = icmp samesign ult i32 %9, 2, !dbg !24
  %71 = getelementptr float, ptr addrspace(3) @global_smem, i32 %9, !dbg !24
  %72 = tail call i32 asm sideeffect "@$2 ld.shared.b32 $0, [ $1 + 0 ];", "=r,r,b"(ptr addrspace(3) %71, i1 %70) #5, !dbg !24
  %73 = bitcast i32 %72 to float, !dbg !24
  %74 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %72, i32 1, i32 31), !dbg !24
  %75 = bitcast i32 %74 to float, !dbg !24
  %76 = fcmp ogt float %73, %75, !dbg !28
  %77 = fcmp uno float %73, 0.000000e+00, !dbg !29
  %78 = or i1 %77, %76, !dbg !30
  %79 = icmp eq i32 %9, 0, !dbg !24
  %80 = select i1 %78, i32 %72, i32 %74, !dbg !31
  %81 = insertelement <1 x i32> poison, i32 %80, i64 0, !dbg !24
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %71, <1 x i32> %81, i1 %79) #5, !dbg !24
  tail call void @llvm.nvvm.barrier.cta.sync.aligned.all(i32 0), !dbg !24
  %82 = load float, ptr addrspace(3) @global_smem, align 16, !dbg !24
  %83 = fsub float %29, %82, !dbg !32
  %84 = fmul float %83, 0x3FF7154760000000, !dbg !33
  %85 = tail call float @llvm.nvvm.ex2.approx.f(float %84), !dbg !33
  %86 = select i1 %20, float %85, float 0.000000e+00, !dbg !34
  tail call void @llvm.nvvm.barrier.cta.sync.aligned.all(i32 0), !dbg !35
  %87 = bitcast float %86 to i32, !dbg !35
  %88 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %87, i32 16, i32 31), !dbg !35
  %89 = bitcast i32 %88 to float, !dbg !35
  %90 = fadd float %86, %89, !dbg !39
  %91 = bitcast float %90 to i32, !dbg !35
  %92 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %91, i32 8, i32 31), !dbg !35
  %93 = bitcast i32 %92 to float, !dbg !35
  %94 = fadd float %90, %93, !dbg !39
  %95 = bitcast float %94 to i32, !dbg !35
  %96 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %95, i32 4, i32 31), !dbg !35
  %97 = bitcast i32 %96 to float, !dbg !35
  %98 = fadd float %94, %97, !dbg !39
  %99 = bitcast float %98 to i32, !dbg !35
  %100 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %99, i32 2, i32 31), !dbg !35
  %101 = bitcast i32 %100 to float, !dbg !35
  %102 = fadd float %98, %101, !dbg !39
  %103 = bitcast float %102 to i32, !dbg !35
  %104 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %103, i32 1, i32 31), !dbg !35
  %105 = bitcast i32 %104 to float, !dbg !35
  %106 = fadd float %102, %105, !dbg !39
  %107 = bitcast float %106 to <1 x i32>, !dbg !35
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %67, <1 x i32> %107, i1 %66) #5, !dbg !35
  tail call void @llvm.nvvm.barrier.cta.sync.aligned.all(i32 0), !dbg !35
  %108 = tail call i32 asm sideeffect "@$2 ld.shared.b32 $0, [ $1 + 0 ];", "=r,r,b"(ptr addrspace(3) %71, i1 %70) #5, !dbg !35
  %109 = bitcast i32 %108 to float, !dbg !35
  %110 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %108, i32 1, i32 31), !dbg !35
  %111 = bitcast i32 %110 to float, !dbg !35
  %112 = fadd float %109, %111, !dbg !39
  %113 = bitcast float %112 to <1 x i32>, !dbg !35
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %71, <1 x i32> %113, i1 %79) #5, !dbg !35
  tail call void @llvm.nvvm.barrier.cta.sync.aligned.all(i32 0), !dbg !35
  %114 = load float, ptr addrspace(3) @global_smem, align 16, !dbg !35
  %115 = tail call float @llvm.nvvm.div.full(float %85, float %114), !dbg !40
  %116 = mul nuw nsw i32 %.decomposed, 50, !dbg !41
  %117 = add nuw nsw i32 %116, %12, !dbg !42
  %118 = mul i32 %14, 2528, !dbg !43
  %119 = add i32 %117, %118, !dbg !44
  %120 = sext i32 %119 to i64, !dbg !45
  %121 = getelementptr float, ptr addrspace(1) %2, i64 %120, !dbg !45
  %122 = bitcast float %115 to i32, !dbg !46
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %122, ptr addrspace(1) %121, i1 %20) #5, !dbg !46
  ret void, !dbg !47
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef range(i32 0, 2147483647) i32 @llvm.nvvm.read.ptx.sreg.ctaid.x() #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef range(i32 0, 1024) i32 @llvm.nvvm.read.ptx.sreg.tid.x() #1

; Function Attrs: convergent nocallback nounwind memory(inaccessiblemem: readwrite)
declare i32 @llvm.nvvm.shfl.sync.bfly.i32(i32, i32, i32, i32) #2

; Function Attrs: convergent nocallback nounwind
declare void @llvm.nvvm.barrier.cta.sync.aligned.all(i32) #3

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.ex2.approx.f(float) #4

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.div.full(float, float) #4

attributes #0 = { "nvvm.reqntid"="64" }
attributes #1 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #2 = { convergent nocallback nounwind memory(inaccessiblemem: readwrite) }
attributes #3 = { convergent nocallback nounwind }
attributes #4 = { mustprogress nocallback nofree nosync nounwind willreturn memory(none) }
attributes #5 = { nounwind }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!2, !3}
!llvm.ident = !{!4}

!0 = distinct !DICompileUnit(language: DW_LANG_C, file: !1, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!1 = !DIFile(filename: "cs72dqgrz6wtxvrvlzsnrjvomcdgyurqcedygwq72a5yyfdt6ycv.py", directory: "/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/s7")
!2 = !{i32 2, !"Debug Info Version", i32 3}
!3 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!4 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!5 = distinct !DISubprogram(name: "triton_per_fused__softmax_add_zeros_3", linkageName: "triton_per_fused__softmax_add_zeros_3", scope: !1, file: !1, line: 18, type: !6, scopeLine: 18, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0)
!6 = !DISubroutineType(cc: DW_CC_normal, types: !7)
!7 = !{}
!8 = !DILocation(line: 24, column: 28, scope: !5)
!9 = !DILocation(line: 26, column: 21, scope: !5)
!10 = !DILocation(line: 27, column: 38, scope: !5)
!11 = !DILocation(line: 29, column: 25, scope: !5)
!12 = !DILocation(line: 35, column: 19, scope: !5)
!13 = !DILocation(line: 34, column: 19, scope: !5)
!14 = !DILocation(line: 36, column: 40, scope: !5)
!15 = !DILocation(line: 36, column: 37, scope: !5)
!16 = !DILocation(line: 36, column: 30, scope: !5)
!17 = !DILocation(line: 36, column: 55, scope: !5)
!18 = !DILocation(line: 36, column: 45, scope: !5)
!19 = !DILocation(line: 37, column: 30, scope: !5)
!20 = !DILocation(line: 37, column: 37, scope: !5)
!21 = !DILocation(line: 39, column: 18, scope: !5)
!22 = !DILocation(line: 40, column: 18, scope: !5)
!23 = !DILocation(line: 43, column: 43, scope: !5)
!24 = !DILocation(line: 124, column: 29, scope: !25, inlinedAt: !27)
!25 = distinct !DILexicalBlockFile(scope: !5, file: !26, discriminator: 0)
!26 = !DIFile(filename: "triton_helpers.py", directory: "/mnt/disk1/anaconda3/envs/pqhung/lib/python3.9/site-packages/torch/_inductor/runtime")
!27 = !DILocation(line: 44, column: 38, scope: !5)
!28 = !DILocation(line: 111, column: 15, scope: !25, inlinedAt: !27)
!29 = !DILocation(line: 113, column: 21, scope: !25, inlinedAt: !27)
!30 = !DILocation(line: 113, column: 16, scope: !25, inlinedAt: !27)
!31 = !DILocation(line: 114, column: 29, scope: !25, inlinedAt: !27)
!32 = !DILocation(line: 45, column: 19, scope: !5)
!33 = !DILocation(line: 46, column: 24, scope: !5)
!34 = !DILocation(line: 48, column: 45, scope: !5)
!35 = !DILocation(line: 290, column: 36, scope: !36, inlinedAt: !38)
!36 = distinct !DILexicalBlockFile(scope: !5, file: !37, discriminator: 0)
!37 = !DIFile(filename: "standard.py", directory: "/mnt/disk1/anaconda3/envs/pqhung/lib/python3.9/site-packages/triton/language")
!38 = !DILocation(line: 49, column: 26, scope: !5)
!39 = !DILocation(line: 260, column: 15, scope: !36, inlinedAt: !38)
!40 = !DILocation(line: 52, column: 21, scope: !5)
!41 = !DILocation(line: 53, column: 35, scope: !5)
!42 = !DILocation(line: 53, column: 32, scope: !5)
!43 = !DILocation(line: 53, column: 45, scope: !5)
!44 = !DILocation(line: 53, column: 40, scope: !5)
!45 = !DILocation(line: 53, column: 25, scope: !5)
!46 = !DILocation(line: 53, column: 57, scope: !5)
!47 = !DILocation(line: 53, column: 4, scope: !5)

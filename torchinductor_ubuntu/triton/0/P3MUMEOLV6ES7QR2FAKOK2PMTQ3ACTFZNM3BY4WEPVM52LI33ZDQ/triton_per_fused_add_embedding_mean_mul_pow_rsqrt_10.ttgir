#blocked = #ttg.blocked<{sizePerThread = [4], threadsPerWarp = [32], warpsPerCTA = [4], order = [0]}>
#blocked1 = #ttg.blocked<{sizePerThread = [1], threadsPerWarp = [32], warpsPerCTA = [4], order = [0]}>
#loc = loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/ms/cmskui5zdkdehzpvjklswh53pbihuhbhsdy24v5pozr2pr2nqxtz.py":18:0)
#loc1 = loc(unknown)
#loc34 = loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/ms/cmskui5zdkdehzpvjklswh53pbihuhbhsdy24v5pozr2pr2nqxtz.py":52:59)
#loc49 = loc(callsite(#loc1 at #loc34))
module attributes {"ttg.num-ctas" = 1 : i32, "ttg.num-warps" = 4 : i32, ttg.target = "cuda:86", "ttg.threads-per-warp" = 32 : i32} {
  tt.func public @triton_per_fused_add_embedding_mean_mul_pow_rsqrt_10(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/ms/cmskui5zdkdehzpvjklswh53pbihuhbhsdy24v5pozr2pr2nqxtz.py":18:0), %arg1: !tt.ptr<i64> {tt.divisibility = 16 : i32} loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/ms/cmskui5zdkdehzpvjklswh53pbihuhbhsdy24v5pozr2pr2nqxtz.py":18:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/ms/cmskui5zdkdehzpvjklswh53pbihuhbhsdy24v5pozr2pr2nqxtz.py":18:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/ms/cmskui5zdkdehzpvjklswh53pbihuhbhsdy24v5pozr2pr2nqxtz.py":18:0), %arg4: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/ms/cmskui5zdkdehzpvjklswh53pbihuhbhsdy24v5pozr2pr2nqxtz.py":18:0), %arg5: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/ms/cmskui5zdkdehzpvjklswh53pbihuhbhsdy24v5pozr2pr2nqxtz.py":18:0), %arg6: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/ms/cmskui5zdkdehzpvjklswh53pbihuhbhsdy24v5pozr2pr2nqxtz.py":18:0), %arg7: i32 {tt.divisibility = 16 : i32} loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/ms/cmskui5zdkdehzpvjklswh53pbihuhbhsdy24v5pozr2pr2nqxtz.py":18:0), %arg8: i32 {tt.divisibility = 16 : i32} loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/ms/cmskui5zdkdehzpvjklswh53pbihuhbhsdy24v5pozr2pr2nqxtz.py":18:0)) attributes {noinline = false} {
    %cst = arith.constant dense<0> : tensor<1xi64, #blocked> loc(#loc1)
    %cst_0 = arith.constant dense<32128> : tensor<1xi64, #blocked> loc(#loc1)
    %cst_1 = arith.constant dense<384> : tensor<1xi64, #blocked> loc(#loc1)
    %cst_2 = arith.constant dense<384> : tensor<512xi32, #blocked> loc(#loc1)
    %cst_3 = arith.constant 9.99999997E-7 : f32 loc(#loc1)
    %cst_4 = arith.constant 3.840000e+02 : f32 loc(#loc1)
    %cst_5 = arith.constant 0.000000e+00 : f32 loc(#loc1)
    %cst_6 = arith.constant dense<32128> : tensor<1xi64, #blocked1> loc(#loc1)
    %c384_i32 = arith.constant 384 : i32 loc(#loc1)
    %cst_7 = arith.constant dense<0> : tensor<1xi64, #blocked1> loc(#loc1)
    %cst_8 = arith.constant dense<0.000000e+00> : tensor<512xf32, #blocked> loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = tt.make_range {end = 512 : i32, start = 0 : i32} : tensor<512xi32, #blocked> loc(#loc3)
    %2 = arith.cmpi slt, %1, %cst_2 : tensor<512xi32, #blocked> loc(#loc4)
    %3 = tt.addptr %arg1, %0 : !tt.ptr<i64>, i32 loc(#loc5)
    %4 = tt.splat %3 : !tt.ptr<i64> -> tensor<1x!tt.ptr<i64>, #blocked> loc(#loc5)
    %5 = tt.splat %3 : !tt.ptr<i64> -> tensor<1x!tt.ptr<i64>, #blocked1> loc(#loc5)
    %6 = tt.load %4 evictionPolicy = evict_last : tensor<1x!tt.ptr<i64>, #blocked> loc(#loc6)
    %7 = tt.load %5 evictionPolicy = evict_last : tensor<1x!tt.ptr<i64>, #blocked1> loc(#loc6)
    %8 = arith.muli %0, %c384_i32 : i32 loc(#loc7)
    %9 = tt.splat %8 : i32 -> tensor<512xi32, #blocked> loc(#loc47)
    %10 = arith.addi %1, %9 : tensor<512xi32, #blocked> loc(#loc8)
    %11 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<512x!tt.ptr<f32>, #blocked> loc(#loc9)
    %12 = tt.addptr %11, %10 : tensor<512x!tt.ptr<f32>, #blocked>, tensor<512xi32, #blocked> loc(#loc9)
    %13 = tt.load %12, %2, %cst_8 : tensor<512x!tt.ptr<f32>, #blocked> loc(#loc10)
    %14 = tt.splat %arg3 : !tt.ptr<f32> -> tensor<512x!tt.ptr<f32>, #blocked> loc(#loc11)
    %15 = tt.addptr %14, %10 : tensor<512x!tt.ptr<f32>, #blocked>, tensor<512xi32, #blocked> loc(#loc11)
    %16 = tt.load %15, %2, %cst_8 : tensor<512x!tt.ptr<f32>, #blocked> loc(#loc12)
    %17 = tt.splat %arg4 : !tt.ptr<f32> -> tensor<512x!tt.ptr<f32>, #blocked> loc(#loc13)
    %18 = tt.addptr %17, %10 : tensor<512x!tt.ptr<f32>, #blocked>, tensor<512xi32, #blocked> loc(#loc13)
    %19 = tt.load %18, %2, %cst_8 : tensor<512x!tt.ptr<f32>, #blocked> loc(#loc14)
    %20 = tt.splat %arg5 : !tt.ptr<f32> -> tensor<512x!tt.ptr<f32>, #blocked> loc(#loc15)
    %21 = tt.addptr %20, %1 : tensor<512x!tt.ptr<f32>, #blocked>, tensor<512xi32, #blocked> loc(#loc15)
    %22 = tt.load %21, %2, %cst_8 evictionPolicy = evict_last : tensor<512x!tt.ptr<f32>, #blocked> loc(#loc16)
    %23 = arith.addi %6, %cst_0 : tensor<1xi64, #blocked> loc(#loc17)
    %24 = arith.addi %7, %cst_6 : tensor<1xi64, #blocked1> loc(#loc17)
    %25 = arith.cmpi slt, %6, %cst : tensor<1xi64, #blocked> loc(#loc18)
    %26 = arith.cmpi slt, %7, %cst_7 : tensor<1xi64, #blocked1> loc(#loc18)
    %27 = arith.select %25, %23, %6 : tensor<1xi1, #blocked>, tensor<1xi64, #blocked> loc(#loc19)
    %28 = arith.select %26, %24, %7 : tensor<1xi1, #blocked1>, tensor<1xi64, #blocked1> loc(#loc19)
    %29 = arith.cmpi sge, %28, %cst_7 : tensor<1xi64, #blocked1> loc(#loc20)
    %30 = arith.cmpi slt, %28, %cst_6 : tensor<1xi64, #blocked1> loc(#loc21)
    %31 = arith.andi %29, %30 : tensor<1xi1, #blocked1> loc(#loc22)
    %32 = tt.broadcast %31 : tensor<1xi1, #blocked1> -> tensor<512xi1, #blocked1> loc(#loc22)
    tt.assert %32, "index out of bounds: 0 <= tmp4 < 32128" : tensor<512xi1, #blocked1> loc(#loc23)
    %33 = arith.muli %27, %cst_1 : tensor<1xi64, #blocked> loc(#loc24)
    %34 = tt.broadcast %33 : tensor<1xi64, #blocked> -> tensor<512xi64, #blocked> loc(#loc24)
    %35 = arith.extsi %1 : tensor<512xi32, #blocked> to tensor<512xi64, #blocked> loc(#loc25)
    %36 = arith.addi %35, %34 : tensor<512xi64, #blocked> loc(#loc25)
    %37 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<512x!tt.ptr<f32>, #blocked> loc(#loc26)
    %38 = tt.addptr %37, %36 : tensor<512x!tt.ptr<f32>, #blocked>, tensor<512xi64, #blocked> loc(#loc26)
    %39 = tt.load %38, %2, %cst_8 : tensor<512x!tt.ptr<f32>, #blocked> loc(#loc27)
    %40 = arith.addf %39, %13 : tensor<512xf32, #blocked> loc(#loc28)
    %41 = arith.addf %40, %16 : tensor<512xf32, #blocked> loc(#loc29)
    %42 = arith.addf %41, %19 : tensor<512xf32, #blocked> loc(#loc30)
    %43 = arith.mulf %42, %42 : tensor<512xf32, #blocked> loc(#loc31)
    %44 = arith.select %2, %43, %cst_8 : tensor<512xi1, #blocked>, tensor<512xf32, #blocked> loc(#loc32)
    %45 = "tt.reduce"(%44) <{axis = 0 : i32}> ({
    ^bb0(%arg9: f32 loc(callsite(#loc1 at #loc34)), %arg10: f32 loc(callsite(#loc1 at #loc34))):
      %55 = arith.addf %arg9, %arg10 : f32 loc(#loc52)
      tt.reduce.return %55 : f32 loc(#loc48)
    }) : (tensor<512xf32, #blocked>) -> f32 loc(#loc48)
    %46 = arith.addf %45, %cst_5 : f32 loc(#loc50)
    %47 = arith.divf %46, %cst_4 : f32 loc(#loc38)
    %48 = arith.addf %47, %cst_3 : f32 loc(#loc39)
    %49 = tt.extern_elementwise %48 {libname = "", libpath = "", pure = true, symbol = "__nv_rsqrtf"} : (f32) -> f32 loc(#loc40)
    %50 = tt.splat %49 : f32 -> tensor<512xf32, #blocked> loc(#loc51)
    %51 = arith.mulf %42, %50 : tensor<512xf32, #blocked> loc(#loc41)
    %52 = arith.mulf %22, %51 : tensor<512xf32, #blocked> loc(#loc42)
    tt.store %12, %42, %2 : tensor<512x!tt.ptr<f32>, #blocked> loc(#loc43)
    %53 = tt.splat %arg6 : !tt.ptr<f32> -> tensor<512x!tt.ptr<f32>, #blocked> loc(#loc44)
    %54 = tt.addptr %53, %10 : tensor<512x!tt.ptr<f32>, #blocked>, tensor<512xi32, #blocked> loc(#loc44)
    tt.store %54, %52, %2 : tensor<512x!tt.ptr<f32>, #blocked> loc(#loc45)
    tt.return loc(#loc46)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/ms/cmskui5zdkdehzpvjklswh53pbihuhbhsdy24v5pozr2pr2nqxtz.py":25:28)
#loc3 = loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/ms/cmskui5zdkdehzpvjklswh53pbihuhbhsdy24v5pozr2pr2nqxtz.py":28:28)
#loc4 = loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/ms/cmskui5zdkdehzpvjklswh53pbihuhbhsdy24v5pozr2pr2nqxtz.py":30:25)
#loc5 = loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/ms/cmskui5zdkdehzpvjklswh53pbihuhbhsdy24v5pozr2pr2nqxtz.py":35:30)
#loc6 = loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/ms/cmskui5zdkdehzpvjklswh53pbihuhbhsdy24v5pozr2pr2nqxtz.py":35:35)
#loc7 = loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/ms/cmskui5zdkdehzpvjklswh53pbihuhbhsdy24v5pozr2pr2nqxtz.py":36:45)
#loc8 = loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/ms/cmskui5zdkdehzpvjklswh53pbihuhbhsdy24v5pozr2pr2nqxtz.py":36:41)
#loc9 = loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/ms/cmskui5zdkdehzpvjklswh53pbihuhbhsdy24v5pozr2pr2nqxtz.py":36:34)
#loc10 = loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/ms/cmskui5zdkdehzpvjklswh53pbihuhbhsdy24v5pozr2pr2nqxtz.py":36:50)
#loc11 = loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/ms/cmskui5zdkdehzpvjklswh53pbihuhbhsdy24v5pozr2pr2nqxtz.py":37:30)
#loc12 = loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/ms/cmskui5zdkdehzpvjklswh53pbihuhbhsdy24v5pozr2pr2nqxtz.py":37:46)
#loc13 = loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/ms/cmskui5zdkdehzpvjklswh53pbihuhbhsdy24v5pozr2pr2nqxtz.py":38:31)
#loc14 = loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/ms/cmskui5zdkdehzpvjklswh53pbihuhbhsdy24v5pozr2pr2nqxtz.py":38:47)
#loc15 = loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/ms/cmskui5zdkdehzpvjklswh53pbihuhbhsdy24v5pozr2pr2nqxtz.py":39:31)
#loc16 = loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/ms/cmskui5zdkdehzpvjklswh53pbihuhbhsdy24v5pozr2pr2nqxtz.py":39:38)
#loc17 = loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/ms/cmskui5zdkdehzpvjklswh53pbihuhbhsdy24v5pozr2pr2nqxtz.py":41:18)
#loc18 = loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/ms/cmskui5zdkdehzpvjklswh53pbihuhbhsdy24v5pozr2pr2nqxtz.py":42:18)
#loc19 = loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/ms/cmskui5zdkdehzpvjklswh53pbihuhbhsdy24v5pozr2pr2nqxtz.py":43:32)
#loc20 = loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/ms/cmskui5zdkdehzpvjklswh53pbihuhbhsdy24v5pozr2pr2nqxtz.py":44:27)
#loc21 = loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/ms/cmskui5zdkdehzpvjklswh53pbihuhbhsdy24v5pozr2pr2nqxtz.py":44:43)
#loc22 = loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/ms/cmskui5zdkdehzpvjklswh53pbihuhbhsdy24v5pozr2pr2nqxtz.py":44:36)
#loc23 = loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/ms/cmskui5zdkdehzpvjklswh53pbihuhbhsdy24v5pozr2pr2nqxtz.py":44:51)
#loc24 = loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/ms/cmskui5zdkdehzpvjklswh53pbihuhbhsdy24v5pozr2pr2nqxtz.py":45:41)
#loc25 = loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/ms/cmskui5zdkdehzpvjklswh53pbihuhbhsdy24v5pozr2pr2nqxtz.py":45:37)
#loc26 = loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/ms/cmskui5zdkdehzpvjklswh53pbihuhbhsdy24v5pozr2pr2nqxtz.py":45:30)
#loc27 = loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/ms/cmskui5zdkdehzpvjklswh53pbihuhbhsdy24v5pozr2pr2nqxtz.py":45:48)
#loc28 = loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/ms/cmskui5zdkdehzpvjklswh53pbihuhbhsdy24v5pozr2pr2nqxtz.py":46:18)
#loc29 = loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/ms/cmskui5zdkdehzpvjklswh53pbihuhbhsdy24v5pozr2pr2nqxtz.py":47:19)
#loc30 = loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/ms/cmskui5zdkdehzpvjklswh53pbihuhbhsdy24v5pozr2pr2nqxtz.py":48:20)
#loc31 = loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/ms/cmskui5zdkdehzpvjklswh53pbihuhbhsdy24v5pozr2pr2nqxtz.py":49:20)
#loc32 = loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/ms/cmskui5zdkdehzpvjklswh53pbihuhbhsdy24v5pozr2pr2nqxtz.py":51:37)
#loc33 = loc("/mnt/disk1/anaconda3/envs/pqhung/lib/python3.9/site-packages/triton/language/standard.py":290:36)
#loc35 = loc("/mnt/disk1/anaconda3/envs/pqhung/lib/python3.9/site-packages/triton/language/standard.py":260:15)
#loc36 = loc("/mnt/disk1/anaconda3/envs/pqhung/lib/python3.9/site-packages/torch/_inductor/runtime/triton_helpers.py":66:15)
#loc37 = loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/ms/cmskui5zdkdehzpvjklswh53pbihuhbhsdy24v5pozr2pr2nqxtz.py":52:45)
#loc38 = loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/ms/cmskui5zdkdehzpvjklswh53pbihuhbhsdy24v5pozr2pr2nqxtz.py":54:21)
#loc39 = loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/ms/cmskui5zdkdehzpvjklswh53pbihuhbhsdy24v5pozr2pr2nqxtz.py":56:20)
#loc40 = loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/ms/cmskui5zdkdehzpvjklswh53pbihuhbhsdy24v5pozr2pr2nqxtz.py":57:28)
#loc41 = loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/ms/cmskui5zdkdehzpvjklswh53pbihuhbhsdy24v5pozr2pr2nqxtz.py":58:20)
#loc42 = loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/ms/cmskui5zdkdehzpvjklswh53pbihuhbhsdy24v5pozr2pr2nqxtz.py":59:20)
#loc43 = loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/ms/cmskui5zdkdehzpvjklswh53pbihuhbhsdy24v5pozr2pr2nqxtz.py":60:51)
#loc44 = loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/ms/cmskui5zdkdehzpvjklswh53pbihuhbhsdy24v5pozr2pr2nqxtz.py":61:25)
#loc45 = loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/ms/cmskui5zdkdehzpvjklswh53pbihuhbhsdy24v5pozr2pr2nqxtz.py":61:48)
#loc46 = loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/ms/cmskui5zdkdehzpvjklswh53pbihuhbhsdy24v5pozr2pr2nqxtz.py":61:4)
#loc47 = loc(fused[#loc8, #loc7])
#loc48 = loc(callsite(#loc33 at #loc34))
#loc50 = loc(callsite(#loc36 at #loc37))
#loc51 = loc(fused[#loc41, #loc40])
#loc52 = loc(callsite(#loc35 at #loc48))

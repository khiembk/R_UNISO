; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-p6:32:32-p7:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@global_smem = external addrspace(3) global [0 x i8], align 16

define ptx_kernel void @triton_per_fused__softmax_add_6(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, i32 %3, i32 %4, ptr addrspace(1) readnone captures(none) %5) local_unnamed_addr #0 !dbg !5 {
  %7 = tail call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !dbg !8
  %8 = icmp samesign ult i32 %7, 400, !dbg !9
  %9 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !10
  %10 = and i32 %9, 31, !dbg !10
  %11 = lshr i32 %9, 5, !dbg !10
  %12 = and i32 %9, 63, !dbg !10
  %13 = icmp samesign ult i32 %12, 50, !dbg !11
  %14 = udiv i32 %7, 50, !dbg !12
  %15 = mul i32 %14, 50, !dbg !13
  %.decomposed = sub i32 %7, %15, !dbg !13
  %16 = mul i32 %7, 50, !dbg !14
  %17 = add i32 %12, %16, !dbg !15
  %18 = sext i32 %17 to i64, !dbg !16
  %19 = getelementptr float, ptr addrspace(1) %0, i64 %18, !dbg !16
  %20 = and i1 %8, %13, !dbg !17
  %21 = tail call i32 asm sideeffect "mov.u32 $0, $1;\0A\09@$3 ld.global.b32 { $0 }, [ $2 + 0 ];", "=r,r,l,b"(i32 0, ptr addrspace(1) %19, i1 %20) #5, !dbg !18
  %22 = bitcast i32 %21 to float, !dbg !18
  %23 = mul nuw nsw i32 %.decomposed, 50, !dbg !19
  %24 = add nuw nsw i32 %23, %12, !dbg !20
  %25 = mul i32 %14, 2528, !dbg !21
  %26 = add i32 %24, %25, !dbg !22
  %27 = sext i32 %26 to i64, !dbg !23
  %28 = getelementptr float, ptr addrspace(1) %1, i64 %27, !dbg !23
  %29 = tail call i32 asm sideeffect "mov.u32 $0, $1;\0A\09@$3 ld.global.b32 { $0 }, [ $2 + 0 ];", "=r,r,l,b"(i32 0, ptr addrspace(1) %28, i1 %20) #5, !dbg !24
  %30 = bitcast i32 %29 to float, !dbg !24
  %31 = fadd float %22, %30, !dbg !25
  %32 = select i1 %20, float %31, float 0xFFF0000000000000, !dbg !26
  %33 = bitcast float %32 to i32, !dbg !27
  %34 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %33, i32 16, i32 31), !dbg !27
  %35 = bitcast i32 %34 to float, !dbg !27
  %36 = fcmp ogt float %32, %35, !dbg !31
  %37 = fcmp uno float %32, 0.000000e+00, !dbg !32
  %38 = or i1 %36, %37, !dbg !33
  %39 = select i1 %38, float %32, float %35, !dbg !34
  %40 = bitcast float %39 to i32, !dbg !27
  %41 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %40, i32 8, i32 31), !dbg !27
  %42 = bitcast i32 %41 to float, !dbg !27
  %43 = fcmp ogt float %39, %42, !dbg !31
  %44 = fcmp uno float %39, 0.000000e+00, !dbg !32
  %45 = or i1 %43, %44, !dbg !33
  %46 = select i1 %45, float %39, float %42, !dbg !34
  %47 = bitcast float %46 to i32, !dbg !27
  %48 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %47, i32 4, i32 31), !dbg !27
  %49 = bitcast i32 %48 to float, !dbg !27
  %50 = fcmp ogt float %46, %49, !dbg !31
  %51 = fcmp uno float %46, 0.000000e+00, !dbg !32
  %52 = or i1 %50, %51, !dbg !33
  %53 = select i1 %52, float %46, float %49, !dbg !34
  %54 = bitcast float %53 to i32, !dbg !27
  %55 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %54, i32 2, i32 31), !dbg !27
  %56 = bitcast i32 %55 to float, !dbg !27
  %57 = fcmp ogt float %53, %56, !dbg !31
  %58 = fcmp uno float %53, 0.000000e+00, !dbg !32
  %59 = or i1 %57, %58, !dbg !33
  %60 = select i1 %59, float %53, float %56, !dbg !34
  %61 = bitcast float %60 to i32, !dbg !27
  %62 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %61, i32 1, i32 31), !dbg !27
  %63 = bitcast i32 %62 to float, !dbg !27
  %64 = fcmp ogt float %60, %63, !dbg !31
  %65 = fcmp uno float %60, 0.000000e+00, !dbg !32
  %66 = or i1 %64, %65, !dbg !33
  %67 = and i32 %11, 1, !dbg !27
  %68 = icmp eq i32 %10, 0, !dbg !27
  %69 = getelementptr float, ptr addrspace(3) @global_smem, i32 %67, !dbg !27
  %70 = select i1 %66, i32 %61, i32 %62, !dbg !34
  %71 = insertelement <1 x i32> poison, i32 %70, i64 0, !dbg !27
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %69, <1 x i32> %71, i1 %68) #5, !dbg !27
  tail call void @llvm.nvvm.barrier.cta.sync.aligned.all(i32 0), !dbg !27
  %72 = icmp samesign ult i32 %9, 2, !dbg !27
  %73 = getelementptr float, ptr addrspace(3) @global_smem, i32 %9, !dbg !27
  %74 = tail call i32 asm sideeffect "@$2 ld.shared.b32 $0, [ $1 + 0 ];", "=r,r,b"(ptr addrspace(3) %73, i1 %72) #5, !dbg !27
  %75 = bitcast i32 %74 to float, !dbg !27
  %76 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %74, i32 1, i32 31), !dbg !27
  %77 = bitcast i32 %76 to float, !dbg !27
  %78 = fcmp ogt float %75, %77, !dbg !31
  %79 = fcmp uno float %75, 0.000000e+00, !dbg !32
  %80 = or i1 %79, %78, !dbg !33
  %81 = icmp eq i32 %9, 0, !dbg !27
  %82 = select i1 %80, i32 %74, i32 %76, !dbg !34
  %83 = insertelement <1 x i32> poison, i32 %82, i64 0, !dbg !27
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %73, <1 x i32> %83, i1 %81) #5, !dbg !27
  tail call void @llvm.nvvm.barrier.cta.sync.aligned.all(i32 0), !dbg !27
  %84 = load float, ptr addrspace(3) @global_smem, align 16, !dbg !27
  %85 = fsub float %31, %84, !dbg !35
  %86 = fmul float %85, 0x3FF7154760000000, !dbg !36
  %87 = tail call float @llvm.nvvm.ex2.approx.f(float %86), !dbg !36
  %88 = select i1 %20, float %87, float 0.000000e+00, !dbg !37
  tail call void @llvm.nvvm.barrier.cta.sync.aligned.all(i32 0), !dbg !38
  %89 = bitcast float %88 to i32, !dbg !38
  %90 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %89, i32 16, i32 31), !dbg !38
  %91 = bitcast i32 %90 to float, !dbg !38
  %92 = fadd float %88, %91, !dbg !42
  %93 = bitcast float %92 to i32, !dbg !38
  %94 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %93, i32 8, i32 31), !dbg !38
  %95 = bitcast i32 %94 to float, !dbg !38
  %96 = fadd float %92, %95, !dbg !42
  %97 = bitcast float %96 to i32, !dbg !38
  %98 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %97, i32 4, i32 31), !dbg !38
  %99 = bitcast i32 %98 to float, !dbg !38
  %100 = fadd float %96, %99, !dbg !42
  %101 = bitcast float %100 to i32, !dbg !38
  %102 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %101, i32 2, i32 31), !dbg !38
  %103 = bitcast i32 %102 to float, !dbg !38
  %104 = fadd float %100, %103, !dbg !42
  %105 = bitcast float %104 to i32, !dbg !38
  %106 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %105, i32 1, i32 31), !dbg !38
  %107 = bitcast i32 %106 to float, !dbg !38
  %108 = fadd float %104, %107, !dbg !42
  %109 = bitcast float %108 to <1 x i32>, !dbg !38
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %69, <1 x i32> %109, i1 %68) #5, !dbg !38
  tail call void @llvm.nvvm.barrier.cta.sync.aligned.all(i32 0), !dbg !38
  %110 = tail call i32 asm sideeffect "@$2 ld.shared.b32 $0, [ $1 + 0 ];", "=r,r,b"(ptr addrspace(3) %73, i1 %72) #5, !dbg !38
  %111 = bitcast i32 %110 to float, !dbg !38
  %112 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %110, i32 1, i32 31), !dbg !38
  %113 = bitcast i32 %112 to float, !dbg !38
  %114 = fadd float %111, %113, !dbg !42
  %115 = bitcast float %114 to <1 x i32>, !dbg !38
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %73, <1 x i32> %115, i1 %81) #5, !dbg !38
  tail call void @llvm.nvvm.barrier.cta.sync.aligned.all(i32 0), !dbg !38
  %116 = load float, ptr addrspace(3) @global_smem, align 16, !dbg !38
  %117 = tail call float @llvm.nvvm.div.full(float %87, float %116), !dbg !43
  %118 = getelementptr float, ptr addrspace(1) %2, i64 %27, !dbg !44
  %119 = bitcast float %117 to i32, !dbg !45
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %119, ptr addrspace(1) %118, i1 %20) #5, !dbg !45
  ret void, !dbg !46
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef range(i32 0, 2147483647) i32 @llvm.nvvm.read.ptx.sreg.ctaid.x() #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef range(i32 0, 1024) i32 @llvm.nvvm.read.ptx.sreg.tid.x() #1

; Function Attrs: convergent nocallback nounwind memory(inaccessiblemem: readwrite)
declare i32 @llvm.nvvm.shfl.sync.bfly.i32(i32, i32, i32, i32) #2

; Function Attrs: convergent nocallback nounwind
declare void @llvm.nvvm.barrier.cta.sync.aligned.all(i32) #3

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.ex2.approx.f(float) #4

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.div.full(float, float) #4

attributes #0 = { "nvvm.reqntid"="64" }
attributes #1 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #2 = { convergent nocallback nounwind memory(inaccessiblemem: readwrite) }
attributes #3 = { convergent nocallback nounwind }
attributes #4 = { mustprogress nocallback nofree nosync nounwind willreturn memory(none) }
attributes #5 = { nounwind }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!2, !3}
!llvm.ident = !{!4}

!0 = distinct !DICompileUnit(language: DW_LANG_C, file: !1, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!1 = !DIFile(filename: "c7mz7vr6bkrwjj5imx4qpkjzm5b35yar4qnwwkujddm3d4utpios.py", directory: "/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/7m")
!2 = !{i32 2, !"Debug Info Version", i32 3}
!3 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!4 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!5 = distinct !DISubprogram(name: "triton_per_fused__softmax_add_6", linkageName: "triton_per_fused__softmax_add_6", scope: !1, file: !1, line: 18, type: !6, scopeLine: 18, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0)
!6 = !DISubroutineType(cc: DW_CC_normal, types: !7)
!7 = !{}
!8 = !DILocation(line: 24, column: 28, scope: !5)
!9 = !DILocation(line: 26, column: 21, scope: !5)
!10 = !DILocation(line: 27, column: 38, scope: !5)
!11 = !DILocation(line: 29, column: 25, scope: !5)
!12 = !DILocation(line: 35, column: 19, scope: !5)
!13 = !DILocation(line: 34, column: 19, scope: !5)
!14 = !DILocation(line: 36, column: 40, scope: !5)
!15 = !DILocation(line: 36, column: 37, scope: !5)
!16 = !DILocation(line: 36, column: 30, scope: !5)
!17 = !DILocation(line: 36, column: 55, scope: !5)
!18 = !DILocation(line: 36, column: 45, scope: !5)
!19 = !DILocation(line: 37, column: 40, scope: !5)
!20 = !DILocation(line: 37, column: 37, scope: !5)
!21 = !DILocation(line: 37, column: 50, scope: !5)
!22 = !DILocation(line: 37, column: 45, scope: !5)
!23 = !DILocation(line: 37, column: 30, scope: !5)
!24 = !DILocation(line: 37, column: 55, scope: !5)
!25 = !DILocation(line: 38, column: 18, scope: !5)
!26 = !DILocation(line: 41, column: 43, scope: !5)
!27 = !DILocation(line: 124, column: 29, scope: !28, inlinedAt: !30)
!28 = distinct !DILexicalBlockFile(scope: !5, file: !29, discriminator: 0)
!29 = !DIFile(filename: "triton_helpers.py", directory: "/mnt/disk1/anaconda3/envs/pqhung/lib/python3.9/site-packages/torch/_inductor/runtime")
!30 = !DILocation(line: 42, column: 37, scope: !5)
!31 = !DILocation(line: 111, column: 15, scope: !28, inlinedAt: !30)
!32 = !DILocation(line: 113, column: 21, scope: !28, inlinedAt: !30)
!33 = !DILocation(line: 113, column: 16, scope: !28, inlinedAt: !30)
!34 = !DILocation(line: 114, column: 29, scope: !28, inlinedAt: !30)
!35 = !DILocation(line: 43, column: 18, scope: !5)
!36 = !DILocation(line: 44, column: 24, scope: !5)
!37 = !DILocation(line: 46, column: 45, scope: !5)
!38 = !DILocation(line: 290, column: 36, scope: !39, inlinedAt: !41)
!39 = distinct !DILexicalBlockFile(scope: !5, file: !40, discriminator: 0)
!40 = !DIFile(filename: "standard.py", directory: "/mnt/disk1/anaconda3/envs/pqhung/lib/python3.9/site-packages/triton/language")
!41 = !DILocation(line: 47, column: 26, scope: !5)
!42 = !DILocation(line: 260, column: 15, scope: !39, inlinedAt: !41)
!43 = !DILocation(line: 50, column: 21, scope: !5)
!44 = !DILocation(line: 51, column: 25, scope: !5)
!45 = !DILocation(line: 51, column: 57, scope: !5)
!46 = !DILocation(line: 51, column: 4, scope: !5)

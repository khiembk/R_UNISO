; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-p6:32:32-p7:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@global_smem = external addrspace(3) global [0 x i8], align 16

define ptx_kernel void @triton_per_fused__softmax_add_10(ptr addrspace(1) %0, ptr addrspace(1) %1, i32 %2, i32 %3, ptr addrspace(1) readnone captures(none) %4) local_unnamed_addr #0 !dbg !5 {
  %6 = tail call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !dbg !8
  %7 = icmp samesign ult i32 %6, 400, !dbg !9
  %8 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !10
  %9 = and i32 %8, 31, !dbg !10
  %10 = lshr i32 %8, 5, !dbg !10
  %11 = and i32 %8, 63, !dbg !10
  %12 = icmp samesign ult i32 %11, 50, !dbg !11
  %13 = udiv i32 %6, 50, !dbg !12
  %14 = mul i32 %13, 50, !dbg !13
  %.decomposed = sub i32 %6, %14, !dbg !13
  %15 = mul i32 %6, 50, !dbg !14
  %16 = add i32 %11, %15, !dbg !15
  %17 = sext i32 %16 to i64, !dbg !16
  %18 = getelementptr float, ptr addrspace(1) %1, i64 %17, !dbg !16
  %19 = and i1 %7, %12, !dbg !17
  %20 = tail call i32 asm sideeffect "mov.u32 $0, $1;\0A\09@$3 ld.global.b32 { $0 }, [ $2 + 0 ];", "=r,r,l,b"(i32 0, ptr addrspace(1) %18, i1 %19) #5, !dbg !18
  %21 = bitcast i32 %20 to float, !dbg !18
  %22 = mul nuw nsw i32 %.decomposed, 50, !dbg !19
  %23 = add nuw nsw i32 %22, %11, !dbg !20
  %24 = mul i32 %13, 2528, !dbg !21
  %25 = add i32 %23, %24, !dbg !22
  %26 = sext i32 %25 to i64, !dbg !23
  %27 = getelementptr float, ptr addrspace(1) %0, i64 %26, !dbg !23
  %28 = tail call i32 asm sideeffect "mov.u32 $0, $1;\0A\09@$3 ld.global.b32 { $0 }, [ $2 + 0 ];", "=r,r,l,b"(i32 0, ptr addrspace(1) %27, i1 %19) #5, !dbg !24
  %29 = bitcast i32 %28 to float, !dbg !24
  %30 = fadd float %21, %29, !dbg !25
  %31 = select i1 %19, float %30, float 0xFFF0000000000000, !dbg !26
  %32 = bitcast float %31 to i32, !dbg !27
  %33 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %32, i32 16, i32 31), !dbg !27
  %34 = bitcast i32 %33 to float, !dbg !27
  %35 = fcmp ogt float %31, %34, !dbg !31
  %36 = fcmp uno float %31, 0.000000e+00, !dbg !32
  %37 = or i1 %35, %36, !dbg !33
  %38 = select i1 %37, float %31, float %34, !dbg !34
  %39 = bitcast float %38 to i32, !dbg !27
  %40 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %39, i32 8, i32 31), !dbg !27
  %41 = bitcast i32 %40 to float, !dbg !27
  %42 = fcmp ogt float %38, %41, !dbg !31
  %43 = fcmp uno float %38, 0.000000e+00, !dbg !32
  %44 = or i1 %42, %43, !dbg !33
  %45 = select i1 %44, float %38, float %41, !dbg !34
  %46 = bitcast float %45 to i32, !dbg !27
  %47 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %46, i32 4, i32 31), !dbg !27
  %48 = bitcast i32 %47 to float, !dbg !27
  %49 = fcmp ogt float %45, %48, !dbg !31
  %50 = fcmp uno float %45, 0.000000e+00, !dbg !32
  %51 = or i1 %49, %50, !dbg !33
  %52 = select i1 %51, float %45, float %48, !dbg !34
  %53 = bitcast float %52 to i32, !dbg !27
  %54 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %53, i32 2, i32 31), !dbg !27
  %55 = bitcast i32 %54 to float, !dbg !27
  %56 = fcmp ogt float %52, %55, !dbg !31
  %57 = fcmp uno float %52, 0.000000e+00, !dbg !32
  %58 = or i1 %56, %57, !dbg !33
  %59 = select i1 %58, float %52, float %55, !dbg !34
  %60 = bitcast float %59 to i32, !dbg !27
  %61 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %60, i32 1, i32 31), !dbg !27
  %62 = bitcast i32 %61 to float, !dbg !27
  %63 = fcmp ogt float %59, %62, !dbg !31
  %64 = fcmp uno float %59, 0.000000e+00, !dbg !32
  %65 = or i1 %63, %64, !dbg !33
  %66 = and i32 %10, 1, !dbg !27
  %67 = icmp eq i32 %9, 0, !dbg !27
  %68 = getelementptr float, ptr addrspace(3) @global_smem, i32 %66, !dbg !27
  %69 = select i1 %65, i32 %60, i32 %61, !dbg !34
  %70 = insertelement <1 x i32> poison, i32 %69, i64 0, !dbg !27
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %68, <1 x i32> %70, i1 %67) #5, !dbg !27
  tail call void @llvm.nvvm.barrier.cta.sync.aligned.all(i32 0), !dbg !27
  %71 = icmp samesign ult i32 %8, 2, !dbg !27
  %72 = getelementptr float, ptr addrspace(3) @global_smem, i32 %8, !dbg !27
  %73 = tail call i32 asm sideeffect "@$2 ld.shared.b32 $0, [ $1 + 0 ];", "=r,r,b"(ptr addrspace(3) %72, i1 %71) #5, !dbg !27
  %74 = bitcast i32 %73 to float, !dbg !27
  %75 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %73, i32 1, i32 31), !dbg !27
  %76 = bitcast i32 %75 to float, !dbg !27
  %77 = fcmp ogt float %74, %76, !dbg !31
  %78 = fcmp uno float %74, 0.000000e+00, !dbg !32
  %79 = or i1 %78, %77, !dbg !33
  %80 = icmp eq i32 %8, 0, !dbg !27
  %81 = select i1 %79, i32 %73, i32 %75, !dbg !34
  %82 = insertelement <1 x i32> poison, i32 %81, i64 0, !dbg !27
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %72, <1 x i32> %82, i1 %80) #5, !dbg !27
  tail call void @llvm.nvvm.barrier.cta.sync.aligned.all(i32 0), !dbg !27
  %83 = load float, ptr addrspace(3) @global_smem, align 16, !dbg !27
  %84 = fsub float %30, %83, !dbg !35
  %85 = fmul float %84, 0x3FF7154760000000, !dbg !36
  %86 = tail call float @llvm.nvvm.ex2.approx.f(float %85), !dbg !36
  %87 = select i1 %19, float %86, float 0.000000e+00, !dbg !37
  tail call void @llvm.nvvm.barrier.cta.sync.aligned.all(i32 0), !dbg !38
  %88 = bitcast float %87 to i32, !dbg !38
  %89 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %88, i32 16, i32 31), !dbg !38
  %90 = bitcast i32 %89 to float, !dbg !38
  %91 = fadd float %87, %90, !dbg !42
  %92 = bitcast float %91 to i32, !dbg !38
  %93 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %92, i32 8, i32 31), !dbg !38
  %94 = bitcast i32 %93 to float, !dbg !38
  %95 = fadd float %91, %94, !dbg !42
  %96 = bitcast float %95 to i32, !dbg !38
  %97 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %96, i32 4, i32 31), !dbg !38
  %98 = bitcast i32 %97 to float, !dbg !38
  %99 = fadd float %95, %98, !dbg !42
  %100 = bitcast float %99 to i32, !dbg !38
  %101 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %100, i32 2, i32 31), !dbg !38
  %102 = bitcast i32 %101 to float, !dbg !38
  %103 = fadd float %99, %102, !dbg !42
  %104 = bitcast float %103 to i32, !dbg !38
  %105 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %104, i32 1, i32 31), !dbg !38
  %106 = bitcast i32 %105 to float, !dbg !38
  %107 = fadd float %103, %106, !dbg !42
  %108 = bitcast float %107 to <1 x i32>, !dbg !38
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %68, <1 x i32> %108, i1 %67) #5, !dbg !38
  tail call void @llvm.nvvm.barrier.cta.sync.aligned.all(i32 0), !dbg !38
  %109 = tail call i32 asm sideeffect "@$2 ld.shared.b32 $0, [ $1 + 0 ];", "=r,r,b"(ptr addrspace(3) %72, i1 %71) #5, !dbg !38
  %110 = bitcast i32 %109 to float, !dbg !38
  %111 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %109, i32 1, i32 31), !dbg !38
  %112 = bitcast i32 %111 to float, !dbg !38
  %113 = fadd float %110, %112, !dbg !42
  %114 = bitcast float %113 to <1 x i32>, !dbg !38
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %72, <1 x i32> %114, i1 %80) #5, !dbg !38
  tail call void @llvm.nvvm.barrier.cta.sync.aligned.all(i32 0), !dbg !38
  %115 = load float, ptr addrspace(3) @global_smem, align 16, !dbg !38
  %116 = tail call float @llvm.nvvm.div.full(float %86, float %115), !dbg !43
  %117 = bitcast float %116 to i32, !dbg !44
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %117, ptr addrspace(1) %27, i1 %19) #5, !dbg !44
  ret void, !dbg !45
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef range(i32 0, 2147483647) i32 @llvm.nvvm.read.ptx.sreg.ctaid.x() #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef range(i32 0, 1024) i32 @llvm.nvvm.read.ptx.sreg.tid.x() #1

; Function Attrs: convergent nocallback nounwind memory(inaccessiblemem: readwrite)
declare i32 @llvm.nvvm.shfl.sync.bfly.i32(i32, i32, i32, i32) #2

; Function Attrs: convergent nocallback nounwind
declare void @llvm.nvvm.barrier.cta.sync.aligned.all(i32) #3

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.ex2.approx.f(float) #4

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.div.full(float, float) #4

attributes #0 = { "nvvm.reqntid"="64" }
attributes #1 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #2 = { convergent nocallback nounwind memory(inaccessiblemem: readwrite) }
attributes #3 = { convergent nocallback nounwind }
attributes #4 = { mustprogress nocallback nofree nosync nounwind willreturn memory(none) }
attributes #5 = { nounwind }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!2, !3}
!llvm.ident = !{!4}

!0 = distinct !DICompileUnit(language: DW_LANG_C, file: !1, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!1 = !DIFile(filename: "cjgujg2s3lvpsqkrlzuzbcldofxrz3zop22m6skn526gjzfe3ddl.py", directory: "/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/jg")
!2 = !{i32 2, !"Debug Info Version", i32 3}
!3 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!4 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!5 = distinct !DISubprogram(name: "triton_per_fused__softmax_add_10", linkageName: "triton_per_fused__softmax_add_10", scope: !1, file: !1, line: 18, type: !6, scopeLine: 18, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0)
!6 = !DISubroutineType(cc: DW_CC_normal, types: !7)
!7 = !{}
!8 = !DILocation(line: 24, column: 28, scope: !5)
!9 = !DILocation(line: 26, column: 21, scope: !5)
!10 = !DILocation(line: 27, column: 38, scope: !5)
!11 = !DILocation(line: 29, column: 25, scope: !5)
!12 = !DILocation(line: 35, column: 19, scope: !5)
!13 = !DILocation(line: 34, column: 19, scope: !5)
!14 = !DILocation(line: 36, column: 40, scope: !5)
!15 = !DILocation(line: 36, column: 37, scope: !5)
!16 = !DILocation(line: 36, column: 30, scope: !5)
!17 = !DILocation(line: 36, column: 55, scope: !5)
!18 = !DILocation(line: 36, column: 45, scope: !5)
!19 = !DILocation(line: 37, column: 44, scope: !5)
!20 = !DILocation(line: 37, column: 41, scope: !5)
!21 = !DILocation(line: 37, column: 54, scope: !5)
!22 = !DILocation(line: 37, column: 49, scope: !5)
!23 = !DILocation(line: 37, column: 34, scope: !5)
!24 = !DILocation(line: 37, column: 59, scope: !5)
!25 = !DILocation(line: 38, column: 18, scope: !5)
!26 = !DILocation(line: 41, column: 43, scope: !5)
!27 = !DILocation(line: 124, column: 29, scope: !28, inlinedAt: !30)
!28 = distinct !DILexicalBlockFile(scope: !5, file: !29, discriminator: 0)
!29 = !DIFile(filename: "triton_helpers.py", directory: "/mnt/disk1/anaconda3/envs/pqhung/lib/python3.9/site-packages/torch/_inductor/runtime")
!30 = !DILocation(line: 42, column: 37, scope: !5)
!31 = !DILocation(line: 111, column: 15, scope: !28, inlinedAt: !30)
!32 = !DILocation(line: 113, column: 21, scope: !28, inlinedAt: !30)
!33 = !DILocation(line: 113, column: 16, scope: !28, inlinedAt: !30)
!34 = !DILocation(line: 114, column: 29, scope: !28, inlinedAt: !30)
!35 = !DILocation(line: 43, column: 18, scope: !5)
!36 = !DILocation(line: 44, column: 24, scope: !5)
!37 = !DILocation(line: 46, column: 45, scope: !5)
!38 = !DILocation(line: 290, column: 36, scope: !39, inlinedAt: !41)
!39 = distinct !DILexicalBlockFile(scope: !5, file: !40, discriminator: 0)
!40 = !DIFile(filename: "standard.py", directory: "/mnt/disk1/anaconda3/envs/pqhung/lib/python3.9/site-packages/triton/language")
!41 = !DILocation(line: 47, column: 26, scope: !5)
!42 = !DILocation(line: 260, column: 15, scope: !39, inlinedAt: !41)
!43 = !DILocation(line: 50, column: 21, scope: !5)
!44 = !DILocation(line: 51, column: 60, scope: !5)
!45 = !DILocation(line: 51, column: 4, scope: !5)

#blocked = #ttg.blocked<{sizePerThread = [2, 1, 1], threadsPerWarp = [4, 1, 8], warpsPerCTA = [1, 1, 4], order = [0, 1, 2]}>
#blocked1 = #ttg.blocked<{sizePerThread = [1, 1, 2], threadsPerWarp = [2, 1, 16], warpsPerCTA = [4, 1, 1], order = [2, 0, 1]}>
#loc = loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/7f/c7fydtvgc2ryykzkj4wnk3cmbeju5cyfoey5m4w2sv6riksngfma.py":18:0)
module attributes {"ttg.num-ctas" = 1 : i32, "ttg.num-warps" = 4 : i32, ttg.target = "cuda:86", "ttg.threads-per-warp" = 32 : i32} {
  tt.func public @triton_poi_fused__softmax_add_4(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/7f/c7fydtvgc2ryykzkj4wnk3cmbeju5cyfoey5m4w2sv6riksngfma.py":18:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/7f/c7fydtvgc2ryykzkj4wnk3cmbeju5cyfoey5m4w2sv6riksngfma.py":18:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/7f/c7fydtvgc2ryykzkj4wnk3cmbeju5cyfoey5m4w2sv6riksngfma.py":18:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/7f/c7fydtvgc2ryykzkj4wnk3cmbeju5cyfoey5m4w2sv6riksngfma.py":18:0), %arg4: i32 loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/7f/c7fydtvgc2ryykzkj4wnk3cmbeju5cyfoey5m4w2sv6riksngfma.py":18:0), %arg5: i32 {tt.divisibility = 16 : i32} loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/7f/c7fydtvgc2ryykzkj4wnk3cmbeju5cyfoey5m4w2sv6riksngfma.py":18:0), %arg6: i32 {tt.divisibility = 16 : i32} loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/7f/c7fydtvgc2ryykzkj4wnk3cmbeju5cyfoey5m4w2sv6riksngfma.py":18:0)) attributes {noinline = false} {
    %cst = arith.constant dense<8> : tensor<8x1x1xi32, #blocked> loc(#loc1)
    %cst_0 = arith.constant dense<8> : tensor<8x1x1xi32, #blocked1> loc(#loc1)
    %cst_1 = arith.constant dense<64> : tensor<1x1x32xi32, #blocked> loc(#loc1)
    %cst_2 = arith.constant dense<64> : tensor<1x1x32xi32, #blocked1> loc(#loc1)
    %cst_3 = arith.constant dense<4096> : tensor<8x1x1xi32, #blocked1> loc(#loc1)
    %cst_4 = arith.constant dense<8> : tensor<1x1x32xi32, #blocked> loc(#loc1)
    %cst_5 = arith.constant dense<64> : tensor<8x1x1xi32, #blocked> loc(#loc1)
    %c64_i32 = arith.constant 64 : i32 loc(#loc1)
    %c512_i32 = arith.constant 512 : i32 loc(#loc1)
    %c32_i32 = arith.constant 32 : i32 loc(#loc1)
    %c8_i32 = arith.constant 8 : i32 loc(#loc1)
    %0 = tt.get_program_id z : i32 loc(#loc2)
    %1 = arith.muli %0, %c8_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 8 : i32, start = 0 : i32} : tensor<8xi32, #ttg.slice<{dim = 1, parent = #ttg.slice<{dim = 2, parent = #blocked1}>}>> loc(#loc4)
    %3 = tt.make_range {end = 8 : i32, start = 0 : i32} : tensor<8xi32, #ttg.slice<{dim = 1, parent = #ttg.slice<{dim = 2, parent = #blocked}>}>> loc(#loc4)
    %4 = tt.expand_dims %2 {axis = 1 : i32} : tensor<8xi32, #ttg.slice<{dim = 1, parent = #ttg.slice<{dim = 2, parent = #blocked1}>}>> -> tensor<8x1xi32, #ttg.slice<{dim = 2, parent = #blocked1}>> loc(#loc4)
    %5 = tt.expand_dims %3 {axis = 1 : i32} : tensor<8xi32, #ttg.slice<{dim = 1, parent = #ttg.slice<{dim = 2, parent = #blocked}>}>> -> tensor<8x1xi32, #ttg.slice<{dim = 2, parent = #blocked}>> loc(#loc4)
    %6 = tt.expand_dims %4 {axis = 2 : i32} : tensor<8x1xi32, #ttg.slice<{dim = 2, parent = #blocked1}>> -> tensor<8x1x1xi32, #blocked1> loc(#loc4)
    %7 = tt.expand_dims %5 {axis = 2 : i32} : tensor<8x1xi32, #ttg.slice<{dim = 2, parent = #blocked}>> -> tensor<8x1x1xi32, #blocked> loc(#loc4)
    %8 = tt.splat %1 : i32 -> tensor<8x1x1xi32, #blocked1> loc(#loc5)
    %9 = tt.splat %1 : i32 -> tensor<8x1x1xi32, #blocked> loc(#loc5)
    %10 = arith.addi %8, %6 : tensor<8x1x1xi32, #blocked1> loc(#loc5)
    %11 = arith.addi %9, %7 : tensor<8x1x1xi32, #blocked> loc(#loc5)
    %12 = arith.cmpi slt, %10, %cst_0 : tensor<8x1x1xi32, #blocked1> loc(#loc6)
    %13 = arith.cmpi slt, %11, %cst : tensor<8x1x1xi32, #blocked> loc(#loc6)
    %14 = tt.get_program_id y : i32 loc(#loc7)
    %15 = arith.cmpi slt, %14, %c64_i32 : i32 loc(#loc8)
    %16 = tt.get_program_id x : i32 loc(#loc9)
    %17 = arith.muli %16, %c32_i32 : i32 loc(#loc10)
    %18 = tt.make_range {end = 32 : i32, start = 0 : i32} : tensor<32xi32, #ttg.slice<{dim = 0, parent = #ttg.slice<{dim = 1, parent = #blocked1}>}>> loc(#loc11)
    %19 = tt.make_range {end = 32 : i32, start = 0 : i32} : tensor<32xi32, #ttg.slice<{dim = 0, parent = #ttg.slice<{dim = 1, parent = #blocked}>}>> loc(#loc11)
    %20 = tt.expand_dims %18 {axis = 0 : i32} : tensor<32xi32, #ttg.slice<{dim = 0, parent = #ttg.slice<{dim = 1, parent = #blocked1}>}>> -> tensor<1x32xi32, #ttg.slice<{dim = 1, parent = #blocked1}>> loc(#loc11)
    %21 = tt.expand_dims %19 {axis = 0 : i32} : tensor<32xi32, #ttg.slice<{dim = 0, parent = #ttg.slice<{dim = 1, parent = #blocked}>}>> -> tensor<1x32xi32, #ttg.slice<{dim = 1, parent = #blocked}>> loc(#loc11)
    %22 = tt.expand_dims %20 {axis = 1 : i32} : tensor<1x32xi32, #ttg.slice<{dim = 1, parent = #blocked1}>> -> tensor<1x1x32xi32, #blocked1> loc(#loc11)
    %23 = tt.expand_dims %21 {axis = 1 : i32} : tensor<1x32xi32, #ttg.slice<{dim = 1, parent = #blocked}>> -> tensor<1x1x32xi32, #blocked> loc(#loc11)
    %24 = tt.splat %17 : i32 -> tensor<1x1x32xi32, #blocked1> loc(#loc12)
    %25 = tt.splat %17 : i32 -> tensor<1x1x32xi32, #blocked> loc(#loc12)
    %26 = arith.addi %24, %22 : tensor<1x1x32xi32, #blocked1> loc(#loc12)
    %27 = arith.addi %25, %23 : tensor<1x1x32xi32, #blocked> loc(#loc12)
    %28 = arith.cmpi slt, %26, %cst_2 : tensor<1x1x32xi32, #blocked1> loc(#loc13)
    %29 = arith.cmpi slt, %27, %cst_1 : tensor<1x1x32xi32, #blocked> loc(#loc13)
    %30 = arith.muli %14, %c64_i32 : i32 loc(#loc14)
    %31 = tt.splat %30 : i32 -> tensor<1x1x32xi32, #blocked1> loc(#loc43)
    %32 = arith.addi %26, %31 : tensor<1x1x32xi32, #blocked1> loc(#loc15)
    %33 = arith.muli %10, %cst_3 : tensor<8x1x1xi32, #blocked1> loc(#loc16)
    %34 = tt.broadcast %32 : tensor<1x1x32xi32, #blocked1> -> tensor<8x1x32xi32, #blocked1> loc(#loc17)
    %35 = tt.broadcast %33 : tensor<8x1x1xi32, #blocked1> -> tensor<8x1x32xi32, #blocked1> loc(#loc17)
    %36 = arith.addi %34, %35 : tensor<8x1x32xi32, #blocked1> loc(#loc17)
    %37 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<8x1x32x!tt.ptr<f32>, #blocked1> loc(#loc18)
    %38 = tt.addptr %37, %36 : tensor<8x1x32x!tt.ptr<f32>, #blocked1>, tensor<8x1x32xi32, #blocked1> loc(#loc18)
    %39 = tt.splat %15 : i1 -> tensor<1x1x32xi1, #blocked1> loc(#loc44)
    %40 = tt.splat %15 : i1 -> tensor<1x1x32xi1, #blocked> loc(#loc44)
    %41 = arith.andi %28, %39 : tensor<1x1x32xi1, #blocked1> loc(#loc19)
    %42 = arith.andi %29, %40 : tensor<1x1x32xi1, #blocked> loc(#loc19)
    %43 = tt.broadcast %41 : tensor<1x1x32xi1, #blocked1> -> tensor<8x1x32xi1, #blocked1> loc(#loc20)
    %44 = tt.broadcast %42 : tensor<1x1x32xi1, #blocked> -> tensor<8x1x32xi1, #blocked> loc(#loc20)
    %45 = tt.broadcast %12 : tensor<8x1x1xi1, #blocked1> -> tensor<8x1x32xi1, #blocked1> loc(#loc20)
    %46 = tt.broadcast %13 : tensor<8x1x1xi1, #blocked> -> tensor<8x1x32xi1, #blocked> loc(#loc20)
    %47 = arith.andi %43, %45 : tensor<8x1x32xi1, #blocked1> loc(#loc20)
    %48 = arith.andi %44, %46 : tensor<8x1x32xi1, #blocked> loc(#loc20)
    %49 = tt.load %38, %47 evictionPolicy = evict_last : tensor<8x1x32x!tt.ptr<f32>, #blocked1> loc(#loc21)
    %50 = ttg.convert_layout %49 : tensor<8x1x32xf32, #blocked1> -> tensor<8x1x32xf32, #blocked> loc(#loc21)
    %51 = arith.muli %27, %cst_4 : tensor<1x1x32xi32, #blocked> loc(#loc22)
    %52 = tt.broadcast %11 : tensor<8x1x1xi32, #blocked> -> tensor<8x1x32xi32, #blocked> loc(#loc23)
    %53 = tt.broadcast %51 : tensor<1x1x32xi32, #blocked> -> tensor<8x1x32xi32, #blocked> loc(#loc23)
    %54 = arith.addi %52, %53 : tensor<8x1x32xi32, #blocked> loc(#loc23)
    %55 = arith.muli %14, %c512_i32 : i32 loc(#loc24)
    %56 = tt.splat %55 : i32 -> tensor<8x1x32xi32, #blocked> loc(#loc45)
    %57 = arith.addi %54, %56 : tensor<8x1x32xi32, #blocked> loc(#loc25)
    %58 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<8x1x32x!tt.ptr<f32>, #blocked> loc(#loc26)
    %59 = tt.addptr %58, %57 : tensor<8x1x32x!tt.ptr<f32>, #blocked>, tensor<8x1x32xi32, #blocked> loc(#loc26)
    %60 = tt.load %59, %48 evictionPolicy = evict_last : tensor<8x1x32x!tt.ptr<f32>, #blocked> loc(#loc27)
    %61 = arith.muli %11, %cst_5 : tensor<8x1x1xi32, #blocked> loc(#loc28)
    %62 = tt.splat %14 : i32 -> tensor<8x1x1xi32, #blocked> loc(#loc46)
    %63 = arith.addi %62, %61 : tensor<8x1x1xi32, #blocked> loc(#loc29)
    %64 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<8x1x1x!tt.ptr<f32>, #blocked> loc(#loc31)
    %65 = tt.addptr %64, %63 : tensor<8x1x1x!tt.ptr<f32>, #blocked>, tensor<8x1x1xi32, #blocked> loc(#loc31)
    %66 = tt.splat %15 : i1 -> tensor<8x1x1xi1, #blocked> loc(#loc47)
    %67 = arith.andi %66, %13 : tensor<8x1x1xi1, #blocked> loc(#loc32)
    %68 = tt.load %65, %67 evictionPolicy = evict_last : tensor<8x1x1x!tt.ptr<f32>, #blocked> loc(#loc33)
    %69 = tt.splat %arg3 : !tt.ptr<f32> -> tensor<8x1x1x!tt.ptr<f32>, #blocked> loc(#loc34)
    %70 = tt.addptr %69, %63 : tensor<8x1x1x!tt.ptr<f32>, #blocked>, tensor<8x1x1xi32, #blocked> loc(#loc34)
    %71 = tt.load %70, %67 evictionPolicy = evict_last : tensor<8x1x1x!tt.ptr<f32>, #blocked> loc(#loc35)
    %72 = arith.addf %50, %60 : tensor<8x1x32xf32, #blocked> loc(#loc36)
    %73 = tt.broadcast %68 : tensor<8x1x1xf32, #blocked> -> tensor<8x1x32xf32, #blocked> loc(#loc37)
    %74 = arith.subf %72, %73 : tensor<8x1x32xf32, #blocked> loc(#loc37)
    %75 = math.exp %74 : tensor<8x1x32xf32, #blocked> loc(#loc38)
    %76 = tt.broadcast %71 : tensor<8x1x1xf32, #blocked> -> tensor<8x1x32xf32, #blocked> loc(#loc39)
    %77 = arith.divf %75, %76 : tensor<8x1x32xf32, #blocked> loc(#loc39)
    gpu.barrier loc(#loc40)
    %78 = ttg.convert_layout %77 : tensor<8x1x32xf32, #blocked> -> tensor<8x1x32xf32, #blocked1> loc(#loc41)
    tt.store %38, %78, %47 : tensor<8x1x32x!tt.ptr<f32>, #blocked1> loc(#loc41)
    tt.return loc(#loc42)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/7f/c7fydtvgc2ryykzkj4wnk3cmbeju5cyfoey5m4w2sv6riksngfma.py":22:28)
#loc3 = loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/7f/c7fydtvgc2ryykzkj4wnk3cmbeju5cyfoey5m4w2sv6riksngfma.py":22:33)
#loc4 = loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/7f/c7fydtvgc2ryykzkj4wnk3cmbeju5cyfoey5m4w2sv6riksngfma.py":23:44)
#loc5 = loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/7f/c7fydtvgc2ryykzkj4wnk3cmbeju5cyfoey5m4w2sv6riksngfma.py":23:23)
#loc6 = loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/7f/c7fydtvgc2ryykzkj4wnk3cmbeju5cyfoey5m4w2sv6riksngfma.py":24:21)
#loc7 = loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/7f/c7fydtvgc2ryykzkj4wnk3cmbeju5cyfoey5m4w2sv6riksngfma.py":25:28)
#loc8 = loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/7f/c7fydtvgc2ryykzkj4wnk3cmbeju5cyfoey5m4w2sv6riksngfma.py":27:21)
#loc9 = loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/7f/c7fydtvgc2ryykzkj4wnk3cmbeju5cyfoey5m4w2sv6riksngfma.py":28:28)
#loc10 = loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/7f/c7fydtvgc2ryykzkj4wnk3cmbeju5cyfoey5m4w2sv6riksngfma.py":28:33)
#loc11 = loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/7f/c7fydtvgc2ryykzkj4wnk3cmbeju5cyfoey5m4w2sv6riksngfma.py":29:44)
#loc12 = loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/7f/c7fydtvgc2ryykzkj4wnk3cmbeju5cyfoey5m4w2sv6riksngfma.py":29:23)
#loc13 = loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/7f/c7fydtvgc2ryykzkj4wnk3cmbeju5cyfoey5m4w2sv6riksngfma.py":30:21)
#loc14 = loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/7f/c7fydtvgc2ryykzkj4wnk3cmbeju5cyfoey5m4w2sv6riksngfma.py":34:42)
#loc15 = loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/7f/c7fydtvgc2ryykzkj4wnk3cmbeju5cyfoey5m4w2sv6riksngfma.py":34:39)
#loc16 = loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/7f/c7fydtvgc2ryykzkj4wnk3cmbeju5cyfoey5m4w2sv6riksngfma.py":34:52)
#loc17 = loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/7f/c7fydtvgc2ryykzkj4wnk3cmbeju5cyfoey5m4w2sv6riksngfma.py":34:47)
#loc18 = loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/7f/c7fydtvgc2ryykzkj4wnk3cmbeju5cyfoey5m4w2sv6riksngfma.py":34:34)
#loc19 = loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/7f/c7fydtvgc2ryykzkj4wnk3cmbeju5cyfoey5m4w2sv6riksngfma.py":34:65)
#loc20 = loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/7f/c7fydtvgc2ryykzkj4wnk3cmbeju5cyfoey5m4w2sv6riksngfma.py":34:73)
#loc21 = loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/7f/c7fydtvgc2ryykzkj4wnk3cmbeju5cyfoey5m4w2sv6riksngfma.py":34:57)
#loc22 = loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/7f/c7fydtvgc2ryykzkj4wnk3cmbeju5cyfoey5m4w2sv6riksngfma.py":35:37)
#loc23 = loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/7f/c7fydtvgc2ryykzkj4wnk3cmbeju5cyfoey5m4w2sv6riksngfma.py":35:35)
#loc24 = loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/7f/c7fydtvgc2ryykzkj4wnk3cmbeju5cyfoey5m4w2sv6riksngfma.py":35:46)
#loc25 = loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/7f/c7fydtvgc2ryykzkj4wnk3cmbeju5cyfoey5m4w2sv6riksngfma.py":35:42)
#loc26 = loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/7f/c7fydtvgc2ryykzkj4wnk3cmbeju5cyfoey5m4w2sv6riksngfma.py":35:30)
#loc27 = loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/7f/c7fydtvgc2ryykzkj4wnk3cmbeju5cyfoey5m4w2sv6riksngfma.py":35:51)
#loc28 = loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/7f/c7fydtvgc2ryykzkj4wnk3cmbeju5cyfoey5m4w2sv6riksngfma.py":36:38)
#loc29 = loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/7f/c7fydtvgc2ryykzkj4wnk3cmbeju5cyfoey5m4w2sv6riksngfma.py":36:35)
#loc30 = loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/7f/c7fydtvgc2ryykzkj4wnk3cmbeju5cyfoey5m4w2sv6riksngfma.py":26:23)
#loc31 = loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/7f/c7fydtvgc2ryykzkj4wnk3cmbeju5cyfoey5m4w2sv6riksngfma.py":36:30)
#loc32 = loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/7f/c7fydtvgc2ryykzkj4wnk3cmbeju5cyfoey5m4w2sv6riksngfma.py":36:51)
#loc33 = loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/7f/c7fydtvgc2ryykzkj4wnk3cmbeju5cyfoey5m4w2sv6riksngfma.py":36:43)
#loc34 = loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/7f/c7fydtvgc2ryykzkj4wnk3cmbeju5cyfoey5m4w2sv6riksngfma.py":37:30)
#loc35 = loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/7f/c7fydtvgc2ryykzkj4wnk3cmbeju5cyfoey5m4w2sv6riksngfma.py":37:43)
#loc36 = loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/7f/c7fydtvgc2ryykzkj4wnk3cmbeju5cyfoey5m4w2sv6riksngfma.py":38:18)
#loc37 = loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/7f/c7fydtvgc2ryykzkj4wnk3cmbeju5cyfoey5m4w2sv6riksngfma.py":39:18)
#loc38 = loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/7f/c7fydtvgc2ryykzkj4wnk3cmbeju5cyfoey5m4w2sv6riksngfma.py":40:23)
#loc39 = loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/7f/c7fydtvgc2ryykzkj4wnk3cmbeju5cyfoey5m4w2sv6riksngfma.py":41:19)
#loc40 = loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/7f/c7fydtvgc2ryykzkj4wnk3cmbeju5cyfoey5m4w2sv6riksngfma.py":42:4)
#loc41 = loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/7f/c7fydtvgc2ryykzkj4wnk3cmbeju5cyfoey5m4w2sv6riksngfma.py":43:57)
#loc42 = loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/7f/c7fydtvgc2ryykzkj4wnk3cmbeju5cyfoey5m4w2sv6riksngfma.py":43:4)
#loc43 = loc(fused[#loc15, #loc14])
#loc44 = loc(fused[#loc19, #loc8])
#loc45 = loc(fused[#loc25, #loc24])
#loc46 = loc(fused[#loc29, #loc30])
#loc47 = loc(fused[#loc32, #loc8])

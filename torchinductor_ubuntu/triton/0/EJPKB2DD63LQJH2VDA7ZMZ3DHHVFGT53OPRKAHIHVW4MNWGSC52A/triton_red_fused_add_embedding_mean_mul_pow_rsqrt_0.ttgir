#blocked = #ttg.blocked<{sizePerThread = [1, 4], threadsPerWarp = [1, 32], warpsPerCTA = [4, 4], order = [1, 0]}>
#blocked1 = #ttg.blocked<{sizePerThread = [1, 1], threadsPerWarp = [1, 32], warpsPerCTA = [1, 16], order = [1, 0]}>
#loc = loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/ug/cuggpsc3ohxg4teqelsr3xqew2hbnyultfmksaqdqmuzrupdzg26.py":18:0)
#loc1 = loc(unknown)
#loc29 = loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/ug/cuggpsc3ohxg4teqelsr3xqew2hbnyultfmksaqdqmuzrupdzg26.py":47:25)
#loc47 = loc(callsite(#loc1 at #loc29))
module attributes {"ttg.num-ctas" = 1 : i32, "ttg.num-warps" = 16 : i32, ttg.target = "cuda:86", "ttg.threads-per-warp" = 32 : i32} {
  tt.func public @triton_red_fused_add_embedding_mean_mul_pow_rsqrt_0(%arg0: !tt.ptr<i64> {tt.divisibility = 16 : i32} loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/ug/cuggpsc3ohxg4teqelsr3xqew2hbnyultfmksaqdqmuzrupdzg26.py":18:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/ug/cuggpsc3ohxg4teqelsr3xqew2hbnyultfmksaqdqmuzrupdzg26.py":18:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/ug/cuggpsc3ohxg4teqelsr3xqew2hbnyultfmksaqdqmuzrupdzg26.py":18:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/ug/cuggpsc3ohxg4teqelsr3xqew2hbnyultfmksaqdqmuzrupdzg26.py":18:0), %arg4: i32 {tt.divisibility = 16 : i32} loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/ug/cuggpsc3ohxg4teqelsr3xqew2hbnyultfmksaqdqmuzrupdzg26.py":18:0), %arg5: i32 {tt.divisibility = 16 : i32} loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/ug/cuggpsc3ohxg4teqelsr3xqew2hbnyultfmksaqdqmuzrupdzg26.py":18:0)) attributes {noinline = false} {
    %cst = arith.constant dense<512> : tensor<8x1xi32, #blocked> loc(#loc1)
    %cst_0 = arith.constant dense<0> : tensor<8x1xi64, #blocked1> loc(#loc1)
    %cst_1 = arith.constant dense<0> : tensor<8x1xi64, #blocked> loc(#loc1)
    %cst_2 = arith.constant dense<32128> : tensor<8x1xi64, #blocked1> loc(#loc1)
    %cst_3 = arith.constant dense<32128> : tensor<8x1xi64, #blocked> loc(#loc1)
    %cst_4 = arith.constant dense<512> : tensor<8x1xi64, #blocked> loc(#loc1)
    %cst_5 = arith.constant dense<true> : tensor<8x1xi1, #blocked1> loc(#loc1)
    %cst_6 = arith.constant dense<512> : tensor<1x512xi32, #blocked> loc(#loc1)
    %cst_7 = arith.constant dense<64> : tensor<8x1xi32, #blocked1> loc(#loc1)
    %cst_8 = arith.constant dense<64> : tensor<8x1xi32, #blocked> loc(#loc1)
    %c8_i32 = arith.constant 8 : i32 loc(#loc1)
    %cst_9 = arith.constant dense<512> : tensor<1x512xi32, #blocked1> loc(#loc1)
    %cst_10 = arith.constant dense<0.000000e+00> : tensor<1x512xf32, #blocked1> loc(#loc1)
    %cst_11 = arith.constant dense<9.99999997E-7> : tensor<8x1xf32, #blocked> loc(#loc1)
    %cst_12 = arith.constant dense<5.120000e+02> : tensor<8x1xf32, #blocked> loc(#loc1)
    %cst_13 = arith.constant dense<0.000000e+00> : tensor<8x512xf32, #blocked> loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c8_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 8 : i32, start = 0 : i32} : tensor<8xi32, #ttg.slice<{dim = 1, parent = #blocked}>> loc(#loc4)
    %3 = tt.make_range {end = 8 : i32, start = 0 : i32} : tensor<8xi32, #ttg.slice<{dim = 1, parent = #blocked1}>> loc(#loc4)
    %4 = tt.expand_dims %2 {axis = 1 : i32} : tensor<8xi32, #ttg.slice<{dim = 1, parent = #blocked}>> -> tensor<8x1xi32, #blocked> loc(#loc4)
    %5 = tt.expand_dims %3 {axis = 1 : i32} : tensor<8xi32, #ttg.slice<{dim = 1, parent = #blocked1}>> -> tensor<8x1xi32, #blocked1> loc(#loc4)
    %6 = tt.splat %1 : i32 -> tensor<8x1xi32, #blocked> loc(#loc5)
    %7 = tt.splat %1 : i32 -> tensor<8x1xi32, #blocked1> loc(#loc5)
    %8 = arith.addi %6, %4 : tensor<8x1xi32, #blocked> loc(#loc5)
    %9 = arith.addi %7, %5 : tensor<8x1xi32, #blocked1> loc(#loc5)
    %10 = arith.cmpi slt, %8, %cst_8 : tensor<8x1xi32, #blocked> loc(#loc6)
    %11 = arith.cmpi slt, %9, %cst_7 : tensor<8x1xi32, #blocked1> loc(#loc6)
    %12 = tt.make_range {end = 512 : i32, start = 0 : i32} : tensor<512xi32, #ttg.slice<{dim = 0, parent = #blocked}>> loc(#loc7)
    %13 = tt.make_range {end = 512 : i32, start = 0 : i32} : tensor<512xi32, #ttg.slice<{dim = 0, parent = #blocked1}>> loc(#loc7)
    %14 = tt.expand_dims %12 {axis = 0 : i32} : tensor<512xi32, #ttg.slice<{dim = 0, parent = #blocked}>> -> tensor<1x512xi32, #blocked> loc(#loc7)
    %15 = tt.expand_dims %13 {axis = 0 : i32} : tensor<512xi32, #ttg.slice<{dim = 0, parent = #blocked1}>> -> tensor<1x512xi32, #blocked1> loc(#loc7)
    %16 = tt.splat %arg0 : !tt.ptr<i64> -> tensor<8x1x!tt.ptr<i64>, #blocked> loc(#loc8)
    %17 = tt.splat %arg0 : !tt.ptr<i64> -> tensor<8x1x!tt.ptr<i64>, #blocked1> loc(#loc8)
    %18 = tt.addptr %16, %8 : tensor<8x1x!tt.ptr<i64>, #blocked>, tensor<8x1xi32, #blocked> loc(#loc8)
    %19 = tt.addptr %17, %9 : tensor<8x1x!tt.ptr<i64>, #blocked1>, tensor<8x1xi32, #blocked1> loc(#loc8)
    %20 = tt.load %18, %10 evictionPolicy = evict_last : tensor<8x1x!tt.ptr<i64>, #blocked> loc(#loc9)
    %21 = tt.load %19, %11 evictionPolicy = evict_last : tensor<8x1x!tt.ptr<i64>, #blocked1> loc(#loc9)
    %22 = arith.cmpi slt, %14, %cst_6 : tensor<1x512xi32, #blocked> loc(#loc10)
    %23 = arith.cmpi slt, %15, %cst_9 : tensor<1x512xi32, #blocked1> loc(#loc10)
    %24 = arith.addi %20, %cst_3 : tensor<8x1xi64, #blocked> loc(#loc11)
    %25 = arith.addi %21, %cst_2 : tensor<8x1xi64, #blocked1> loc(#loc11)
    %26 = arith.cmpi slt, %20, %cst_1 : tensor<8x1xi64, #blocked> loc(#loc12)
    %27 = arith.cmpi slt, %21, %cst_0 : tensor<8x1xi64, #blocked1> loc(#loc12)
    %28 = arith.select %26, %24, %20 : tensor<8x1xi1, #blocked>, tensor<8x1xi64, #blocked> loc(#loc13)
    %29 = arith.select %27, %25, %21 : tensor<8x1xi1, #blocked1>, tensor<8x1xi64, #blocked1> loc(#loc13)
    %30 = arith.cmpi sge, %29, %cst_0 : tensor<8x1xi64, #blocked1> loc(#loc14)
    %31 = arith.cmpi slt, %29, %cst_2 : tensor<8x1xi64, #blocked1> loc(#loc15)
    %32 = arith.andi %30, %31 : tensor<8x1xi1, #blocked1> loc(#loc16)
    %33 = arith.xori %11, %cst_5 : tensor<8x1xi1, #blocked1> loc(#loc17)
    %34 = arith.ori %32, %33 : tensor<8x1xi1, #blocked1> loc(#loc18)
    %35 = tt.broadcast %34 : tensor<8x1xi1, #blocked1> -> tensor<8x512xi1, #blocked1> loc(#loc18)
    tt.assert %35, "index out of bounds: 0 <= tmp4 < 32128" : tensor<8x512xi1, #blocked1> loc(#loc19)
    %36 = arith.muli %28, %cst_4 : tensor<8x1xi64, #blocked> loc(#loc20)
    %37 = tt.broadcast %36 : tensor<8x1xi64, #blocked> -> tensor<8x512xi64, #blocked> loc(#loc20)
    %38 = arith.extsi %14 : tensor<1x512xi32, #blocked> to tensor<1x512xi64, #blocked> loc(#loc21)
    %39 = tt.broadcast %38 : tensor<1x512xi64, #blocked> -> tensor<8x512xi64, #blocked> loc(#loc21)
    %40 = arith.addi %39, %37 : tensor<8x512xi64, #blocked> loc(#loc21)
    %41 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<8x512x!tt.ptr<f32>, #blocked> loc(#loc22)
    %42 = tt.addptr %41, %40 : tensor<8x512x!tt.ptr<f32>, #blocked>, tensor<8x512xi64, #blocked> loc(#loc22)
    %43 = tt.broadcast %22 : tensor<1x512xi1, #blocked> -> tensor<8x512xi1, #blocked> loc(#loc23)
    %44 = tt.broadcast %10 : tensor<8x1xi1, #blocked> -> tensor<8x512xi1, #blocked> loc(#loc23)
    %45 = arith.andi %43, %44 : tensor<8x512xi1, #blocked> loc(#loc23)
    %46 = tt.load %42, %45, %cst_13 evictionPolicy = evict_last : tensor<8x512x!tt.ptr<f32>, #blocked> loc(#loc24)
    %47 = arith.mulf %46, %46 : tensor<8x512xf32, #blocked> loc(#loc25)
    %48 = arith.addf %47, %cst_13 : tensor<8x512xf32, #blocked> loc(#loc26)
    %49 = arith.select %45, %48, %cst_13 : tensor<8x512xi1, #blocked>, tensor<8x512xf32, #blocked> loc(#loc27)
    %50 = "tt.reduce"(%49) <{axis = 1 : i32}> ({
    ^bb0(%arg6: f32 loc(callsite(#loc1 at #loc29)), %arg7: f32 loc(callsite(#loc1 at #loc29))):
      %70 = arith.addf %arg6, %arg7 : f32 loc(#loc48)
      tt.reduce.return %70 : f32 loc(#loc46)
    }) : (tensor<8x512xf32, #blocked>) -> tensor<8xf32, #ttg.slice<{dim = 1, parent = #blocked}>> loc(#loc46)
    %51 = tt.expand_dims %50 {axis = 1 : i32} : tensor<8xf32, #ttg.slice<{dim = 1, parent = #blocked}>> -> tensor<8x1xf32, #blocked> loc(#loc31)
    %52 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<1x512x!tt.ptr<f32>, #blocked1> loc(#loc32)
    %53 = tt.addptr %52, %15 : tensor<1x512x!tt.ptr<f32>, #blocked1>, tensor<1x512xi32, #blocked1> loc(#loc32)
    %54 = tt.load %53, %23, %cst_10 evictionPolicy = evict_last : tensor<1x512x!tt.ptr<f32>, #blocked1> loc(#loc33)
    tt.assert %35, "index out of bounds: 0 <= tmp15 < 32128" : tensor<8x512xi1, #blocked1> loc(#loc34)
    %55 = tt.load %42, %45, %cst_13 evictionPolicy = evict_first : tensor<8x512x!tt.ptr<f32>, #blocked> loc(#loc35)
    %56 = arith.divf %51, %cst_12 : tensor<8x1xf32, #blocked> loc(#loc36)
    %57 = arith.addf %56, %cst_11 : tensor<8x1xf32, #blocked> loc(#loc37)
    %58 = tt.extern_elementwise %57 {libname = "", libpath = "", pure = true, symbol = "__nv_rsqrtf"} : (tensor<8x1xf32, #blocked>) -> tensor<8x1xf32, #blocked> loc(#loc38)
    %59 = tt.broadcast %58 : tensor<8x1xf32, #blocked> -> tensor<8x512xf32, #blocked> loc(#loc39)
    %60 = arith.mulf %55, %59 : tensor<8x512xf32, #blocked> loc(#loc39)
    %61 = ttg.convert_layout %54 : tensor<1x512xf32, #blocked1> -> tensor<1x512xf32, #blocked> loc(#loc40)
    %62 = tt.broadcast %61 : tensor<1x512xf32, #blocked> -> tensor<8x512xf32, #blocked> loc(#loc40)
    %63 = arith.mulf %62, %60 : tensor<8x512xf32, #blocked> loc(#loc40)
    %64 = arith.muli %8, %cst : tensor<8x1xi32, #blocked> loc(#loc41)
    %65 = tt.broadcast %14 : tensor<1x512xi32, #blocked> -> tensor<8x512xi32, #blocked> loc(#loc42)
    %66 = tt.broadcast %64 : tensor<8x1xi32, #blocked> -> tensor<8x512xi32, #blocked> loc(#loc42)
    %67 = arith.addi %65, %66 : tensor<8x512xi32, #blocked> loc(#loc42)
    %68 = tt.splat %arg3 : !tt.ptr<f32> -> tensor<8x512x!tt.ptr<f32>, #blocked> loc(#loc43)
    %69 = tt.addptr %68, %67 : tensor<8x512x!tt.ptr<f32>, #blocked>, tensor<8x512xi32, #blocked> loc(#loc43)
    tt.store %69, %63, %45 : tensor<8x512x!tt.ptr<f32>, #blocked> loc(#loc44)
    tt.return loc(#loc45)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/ug/cuggpsc3ohxg4teqelsr3xqew2hbnyultfmksaqdqmuzrupdzg26.py":23:28)
#loc3 = loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/ug/cuggpsc3ohxg4teqelsr3xqew2hbnyultfmksaqdqmuzrupdzg26.py":23:33)
#loc4 = loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/ug/cuggpsc3ohxg4teqelsr3xqew2hbnyultfmksaqdqmuzrupdzg26.py":24:44)
#loc5 = loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/ug/cuggpsc3ohxg4teqelsr3xqew2hbnyultfmksaqdqmuzrupdzg26.py":24:23)
#loc6 = loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/ug/cuggpsc3ohxg4teqelsr3xqew2hbnyultfmksaqdqmuzrupdzg26.py":25:21)
#loc7 = loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/ug/cuggpsc3ohxg4teqelsr3xqew2hbnyultfmksaqdqmuzrupdzg26.py":26:37)
#loc8 = loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/ug/cuggpsc3ohxg4teqelsr3xqew2hbnyultfmksaqdqmuzrupdzg26.py":29:30)
#loc9 = loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/ug/cuggpsc3ohxg4teqelsr3xqew2hbnyultfmksaqdqmuzrupdzg26.py":29:35)
#loc10 = loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/ug/cuggpsc3ohxg4teqelsr3xqew2hbnyultfmksaqdqmuzrupdzg26.py":33:29)
#loc11 = loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/ug/cuggpsc3ohxg4teqelsr3xqew2hbnyultfmksaqdqmuzrupdzg26.py":38:22)
#loc12 = loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/ug/cuggpsc3ohxg4teqelsr3xqew2hbnyultfmksaqdqmuzrupdzg26.py":39:22)
#loc13 = loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/ug/cuggpsc3ohxg4teqelsr3xqew2hbnyultfmksaqdqmuzrupdzg26.py":40:36)
#loc14 = loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/ug/cuggpsc3ohxg4teqelsr3xqew2hbnyultfmksaqdqmuzrupdzg26.py":41:32)
#loc15 = loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/ug/cuggpsc3ohxg4teqelsr3xqew2hbnyultfmksaqdqmuzrupdzg26.py":41:48)
#loc16 = loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/ug/cuggpsc3ohxg4teqelsr3xqew2hbnyultfmksaqdqmuzrupdzg26.py":41:41)
#loc17 = loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/ug/cuggpsc3ohxg4teqelsr3xqew2hbnyultfmksaqdqmuzrupdzg26.py":41:60)
#loc18 = loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/ug/cuggpsc3ohxg4teqelsr3xqew2hbnyultfmksaqdqmuzrupdzg26.py":41:58)
#loc19 = loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/ug/cuggpsc3ohxg4teqelsr3xqew2hbnyultfmksaqdqmuzrupdzg26.py":41:68)
#loc20 = loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/ug/cuggpsc3ohxg4teqelsr3xqew2hbnyultfmksaqdqmuzrupdzg26.py":42:45)
#loc21 = loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/ug/cuggpsc3ohxg4teqelsr3xqew2hbnyultfmksaqdqmuzrupdzg26.py":42:41)
#loc22 = loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/ug/cuggpsc3ohxg4teqelsr3xqew2hbnyultfmksaqdqmuzrupdzg26.py":42:34)
#loc23 = loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/ug/cuggpsc3ohxg4teqelsr3xqew2hbnyultfmksaqdqmuzrupdzg26.py":42:62)
#loc24 = loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/ug/cuggpsc3ohxg4teqelsr3xqew2hbnyultfmksaqdqmuzrupdzg26.py":42:52)
#loc25 = loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/ug/cuggpsc3ohxg4teqelsr3xqew2hbnyultfmksaqdqmuzrupdzg26.py":43:22)
#loc26 = loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/ug/cuggpsc3ohxg4teqelsr3xqew2hbnyultfmksaqdqmuzrupdzg26.py":45:24)
#loc27 = loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/ug/cuggpsc3ohxg4teqelsr3xqew2hbnyultfmksaqdqmuzrupdzg26.py":46:49)
#loc28 = loc("/mnt/disk1/anaconda3/envs/pqhung/lib/python3.9/site-packages/triton/language/standard.py":290:36)
#loc30 = loc("/mnt/disk1/anaconda3/envs/pqhung/lib/python3.9/site-packages/triton/language/standard.py":260:15)
#loc31 = loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/ug/cuggpsc3ohxg4teqelsr3xqew2hbnyultfmksaqdqmuzrupdzg26.py":47:28)
#loc32 = loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/ug/cuggpsc3ohxg4teqelsr3xqew2hbnyultfmksaqdqmuzrupdzg26.py":54:35)
#loc33 = loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/ug/cuggpsc3ohxg4teqelsr3xqew2hbnyultfmksaqdqmuzrupdzg26.py":54:42)
#loc34 = loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/ug/cuggpsc3ohxg4teqelsr3xqew2hbnyultfmksaqdqmuzrupdzg26.py":59:70)
#loc35 = loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/ug/cuggpsc3ohxg4teqelsr3xqew2hbnyultfmksaqdqmuzrupdzg26.py":60:54)
#loc36 = loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/ug/cuggpsc3ohxg4teqelsr3xqew2hbnyultfmksaqdqmuzrupdzg26.py":62:24)
#loc37 = loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/ug/cuggpsc3ohxg4teqelsr3xqew2hbnyultfmksaqdqmuzrupdzg26.py":64:24)
#loc38 = loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/ug/cuggpsc3ohxg4teqelsr3xqew2hbnyultfmksaqdqmuzrupdzg26.py":65:32)
#loc39 = loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/ug/cuggpsc3ohxg4teqelsr3xqew2hbnyultfmksaqdqmuzrupdzg26.py":66:24)
#loc40 = loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/ug/cuggpsc3ohxg4teqelsr3xqew2hbnyultfmksaqdqmuzrupdzg26.py":67:24)
#loc41 = loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/ug/cuggpsc3ohxg4teqelsr3xqew2hbnyultfmksaqdqmuzrupdzg26.py":68:40)
#loc42 = loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/ug/cuggpsc3ohxg4teqelsr3xqew2hbnyultfmksaqdqmuzrupdzg26.py":68:36)
#loc43 = loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/ug/cuggpsc3ohxg4teqelsr3xqew2hbnyultfmksaqdqmuzrupdzg26.py":68:29)
#loc44 = loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/ug/cuggpsc3ohxg4teqelsr3xqew2hbnyultfmksaqdqmuzrupdzg26.py":68:52)
#loc45 = loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/ug/cuggpsc3ohxg4teqelsr3xqew2hbnyultfmksaqdqmuzrupdzg26.py":48:4)
#loc46 = loc(callsite(#loc28 at #loc29))
#loc48 = loc(callsite(#loc30 at #loc46))

; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-p6:32:32-p7:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define ptx_kernel void @triton_per_fused__softmax_add_zeros_3(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, i32 %3, i32 %4, ptr addrspace(1) readnone captures(none) %5) local_unnamed_addr #0 !dbg !5 {
  %7 = tail call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !dbg !8
  %8 = shl i32 %7, 3, !dbg !9
  %9 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !10
  %10 = lshr i32 %9, 5, !dbg !10
  %11 = and i32 %10, 3, !dbg !10
  %12 = or disjoint i32 %11, %8, !dbg !11
  %13 = or disjoint i32 %12, 4, !dbg !11
  %14 = icmp slt i32 %12, 400, !dbg !12
  %15 = icmp slt i32 %13, 400, !dbg !12
  %16 = shl nuw nsw i32 %9, 1, !dbg !13
  %17 = and i32 %16, 62, !dbg !13
  %18 = icmp samesign ult i32 %17, 50, !dbg !14
  %19 = sdiv i32 %12, 50, !dbg !15
  %20 = mul i32 %19, 50, !dbg !16
  %.decomposed = sub i32 %12, %20, !dbg !16
  %21 = sdiv i32 %13, 50, !dbg !15
  %22 = mul i32 %21, 50, !dbg !16
  %.decomposed1 = sub i32 %13, %22, !dbg !16
  %23 = mul i32 %12, 50, !dbg !17
  %24 = mul i32 %13, 50, !dbg !17
  %25 = add i32 %23, %17, !dbg !18
  %26 = add i32 %24, %17, !dbg !18
  %27 = sext i32 %25 to i64, !dbg !19
  %28 = getelementptr float, ptr addrspace(1) %0, i64 %27, !dbg !19
  %29 = sext i32 %26 to i64, !dbg !19
  %30 = getelementptr float, ptr addrspace(1) %0, i64 %29, !dbg !19
  %31 = and i1 %18, %14, !dbg !20
  %32 = and i1 %18, %15, !dbg !20
  %33 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, $2;\0A\09mov.u32 $1, $3;\0A\09@$5 ld.global.v2.b32 { $0, $1 }, [ $4 + 0 ];", "=r,=r,r,r,l,b"(i32 0, i32 0, ptr addrspace(1) %28, i1 %31) #4, !dbg !21
  %34 = extractvalue { i32, i32 } %33, 0, !dbg !21
  %35 = extractvalue { i32, i32 } %33, 1, !dbg !21
  %36 = bitcast i32 %34 to float, !dbg !21
  %37 = bitcast i32 %35 to float, !dbg !21
  %38 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, $2;\0A\09mov.u32 $1, $3;\0A\09@$5 ld.global.v2.b32 { $0, $1 }, [ $4 + 0 ];", "=r,=r,r,r,l,b"(i32 0, i32 0, ptr addrspace(1) %30, i1 %32) #4, !dbg !21
  %39 = extractvalue { i32, i32 } %38, 0, !dbg !21
  %40 = extractvalue { i32, i32 } %38, 1, !dbg !21
  %41 = bitcast i32 %39 to float, !dbg !21
  %42 = bitcast i32 %40 to float, !dbg !21
  %43 = zext nneg i32 %17 to i64, !dbg !22
  %44 = getelementptr float, ptr addrspace(1) %1, i64 %43, !dbg !22
  %45 = tail call i64 asm sideeffect "mov.u64 $0, 0x0;\0A\09createpolicy.fractional.L2::evict_last.b64 $0, 1.0;", "=l"() #4, !dbg !23
  %46 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, $2;\0A\09mov.u32 $1, $3;\0A\09@$6 ld.global.L1::evict_last.L2::cache_hint.v2.b32 { $0, $1 }, [ $4 + 0 ], $5;", "=r,=r,r,r,l,l,b"(i32 0, i32 0, ptr addrspace(1) %44, i64 %45, i1 %18) #4, !dbg !23
  %47 = extractvalue { i32, i32 } %46, 0, !dbg !23
  %48 = extractvalue { i32, i32 } %46, 1, !dbg !23
  %49 = bitcast i32 %47 to float, !dbg !23
  %50 = bitcast i32 %48 to float, !dbg !23
  %51 = fadd float %49, 0.000000e+00, !dbg !24
  %52 = fadd float %50, 0.000000e+00, !dbg !24
  %53 = fadd float %51, %36, !dbg !25
  %54 = fadd float %52, %37, !dbg !25
  %55 = fadd float %51, %41, !dbg !25
  %56 = fadd float %52, %42, !dbg !25
  %57 = select i1 %31, float %53, float 0xFFF0000000000000, !dbg !26
  %58 = select i1 %31, float %54, float 0xFFF0000000000000, !dbg !26
  %59 = select i1 %32, float %55, float 0xFFF0000000000000, !dbg !26
  %60 = select i1 %32, float %56, float 0xFFF0000000000000, !dbg !26
  %61 = fcmp ogt float %57, %58, !dbg !27
  %62 = fcmp uno float %57, 0.000000e+00, !dbg !31
  %63 = or i1 %61, %62, !dbg !32
  %64 = select i1 %63, float %57, float %58, !dbg !33
  %65 = fcmp ogt float %59, %60, !dbg !27
  %66 = fcmp uno float %59, 0.000000e+00, !dbg !31
  %67 = or i1 %65, %66, !dbg !32
  %68 = select i1 %67, float %59, float %60, !dbg !33
  %69 = bitcast float %64 to i32, !dbg !34
  %70 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %69, i32 16, i32 31), !dbg !34
  %71 = bitcast i32 %70 to float, !dbg !34
  %72 = fcmp ogt float %64, %71, !dbg !27
  %73 = fcmp uno float %64, 0.000000e+00, !dbg !31
  %74 = or i1 %72, %73, !dbg !32
  %75 = select i1 %74, float %64, float %71, !dbg !33
  %76 = bitcast float %75 to i32, !dbg !34
  %77 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %76, i32 8, i32 31), !dbg !34
  %78 = bitcast i32 %77 to float, !dbg !34
  %79 = fcmp ogt float %75, %78, !dbg !27
  %80 = fcmp uno float %75, 0.000000e+00, !dbg !31
  %81 = or i1 %79, %80, !dbg !32
  %82 = select i1 %81, float %75, float %78, !dbg !33
  %83 = bitcast float %82 to i32, !dbg !34
  %84 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %83, i32 4, i32 31), !dbg !34
  %85 = bitcast i32 %84 to float, !dbg !34
  %86 = fcmp ogt float %82, %85, !dbg !27
  %87 = fcmp uno float %82, 0.000000e+00, !dbg !31
  %88 = or i1 %86, %87, !dbg !32
  %89 = select i1 %88, float %82, float %85, !dbg !33
  %90 = bitcast float %89 to i32, !dbg !34
  %91 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %90, i32 2, i32 31), !dbg !34
  %92 = bitcast i32 %91 to float, !dbg !34
  %93 = fcmp ogt float %89, %92, !dbg !27
  %94 = fcmp uno float %89, 0.000000e+00, !dbg !31
  %95 = or i1 %93, %94, !dbg !32
  %96 = select i1 %95, float %89, float %92, !dbg !33
  %97 = bitcast float %96 to i32, !dbg !34
  %98 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %97, i32 1, i32 31), !dbg !34
  %99 = bitcast i32 %98 to float, !dbg !34
  %100 = fcmp ogt float %96, %99, !dbg !27
  %101 = fcmp uno float %96, 0.000000e+00, !dbg !31
  %102 = or i1 %100, %101, !dbg !32
  %103 = select i1 %102, float %96, float %99, !dbg !33
  %104 = bitcast float %68 to i32, !dbg !34
  %105 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %104, i32 16, i32 31), !dbg !34
  %106 = bitcast i32 %105 to float, !dbg !34
  %107 = fcmp ogt float %68, %106, !dbg !27
  %108 = fcmp uno float %68, 0.000000e+00, !dbg !31
  %109 = or i1 %107, %108, !dbg !32
  %110 = select i1 %109, float %68, float %106, !dbg !33
  %111 = bitcast float %110 to i32, !dbg !34
  %112 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %111, i32 8, i32 31), !dbg !34
  %113 = bitcast i32 %112 to float, !dbg !34
  %114 = fcmp ogt float %110, %113, !dbg !27
  %115 = fcmp uno float %110, 0.000000e+00, !dbg !31
  %116 = or i1 %114, %115, !dbg !32
  %117 = select i1 %116, float %110, float %113, !dbg !33
  %118 = bitcast float %117 to i32, !dbg !34
  %119 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %118, i32 4, i32 31), !dbg !34
  %120 = bitcast i32 %119 to float, !dbg !34
  %121 = fcmp ogt float %117, %120, !dbg !27
  %122 = fcmp uno float %117, 0.000000e+00, !dbg !31
  %123 = or i1 %121, %122, !dbg !32
  %124 = select i1 %123, float %117, float %120, !dbg !33
  %125 = bitcast float %124 to i32, !dbg !34
  %126 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %125, i32 2, i32 31), !dbg !34
  %127 = bitcast i32 %126 to float, !dbg !34
  %128 = fcmp ogt float %124, %127, !dbg !27
  %129 = fcmp uno float %124, 0.000000e+00, !dbg !31
  %130 = or i1 %128, %129, !dbg !32
  %131 = select i1 %130, float %124, float %127, !dbg !33
  %132 = bitcast float %131 to i32, !dbg !34
  %133 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %132, i32 1, i32 31), !dbg !34
  %134 = bitcast i32 %133 to float, !dbg !34
  %135 = fcmp ogt float %131, %134, !dbg !27
  %136 = fcmp uno float %131, 0.000000e+00, !dbg !31
  %137 = or i1 %135, %136, !dbg !32
  %138 = select i1 %137, float %131, float %134, !dbg !33
  %139 = fsub float %53, %103, !dbg !35
  %140 = fsub float %54, %103, !dbg !35
  %141 = fsub float %55, %138, !dbg !35
  %142 = fsub float %56, %138, !dbg !35
  %143 = fmul float %139, 0x3FF7154760000000, !dbg !36
  %144 = tail call float @llvm.nvvm.ex2.approx.f(float %143), !dbg !36
  %145 = fmul float %140, 0x3FF7154760000000, !dbg !36
  %146 = tail call float @llvm.nvvm.ex2.approx.f(float %145), !dbg !36
  %147 = fmul float %141, 0x3FF7154760000000, !dbg !36
  %148 = tail call float @llvm.nvvm.ex2.approx.f(float %147), !dbg !36
  %149 = fmul float %142, 0x3FF7154760000000, !dbg !36
  %150 = tail call float @llvm.nvvm.ex2.approx.f(float %149), !dbg !36
  %151 = fadd float %144, %146, !dbg !37
  %152 = select i1 %31, float %151, float 0.000000e+00, !dbg !37
  %153 = fadd float %148, %150, !dbg !37
  %154 = select i1 %32, float %153, float 0.000000e+00, !dbg !37
  %155 = bitcast float %152 to i32, !dbg !41
  %156 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %155, i32 16, i32 31), !dbg !41
  %157 = bitcast i32 %156 to float, !dbg !41
  %158 = fadd float %152, %157, !dbg !37
  %159 = bitcast float %158 to i32, !dbg !41
  %160 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %159, i32 8, i32 31), !dbg !41
  %161 = bitcast i32 %160 to float, !dbg !41
  %162 = fadd float %158, %161, !dbg !37
  %163 = bitcast float %162 to i32, !dbg !41
  %164 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %163, i32 4, i32 31), !dbg !41
  %165 = bitcast i32 %164 to float, !dbg !41
  %166 = fadd float %162, %165, !dbg !37
  %167 = bitcast float %166 to i32, !dbg !41
  %168 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %167, i32 2, i32 31), !dbg !41
  %169 = bitcast i32 %168 to float, !dbg !41
  %170 = fadd float %166, %169, !dbg !37
  %171 = bitcast float %170 to i32, !dbg !41
  %172 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %171, i32 1, i32 31), !dbg !41
  %173 = bitcast i32 %172 to float, !dbg !41
  %174 = fadd float %170, %173, !dbg !37
  %175 = bitcast float %154 to i32, !dbg !41
  %176 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %175, i32 16, i32 31), !dbg !41
  %177 = bitcast i32 %176 to float, !dbg !41
  %178 = fadd float %154, %177, !dbg !37
  %179 = bitcast float %178 to i32, !dbg !41
  %180 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %179, i32 8, i32 31), !dbg !41
  %181 = bitcast i32 %180 to float, !dbg !41
  %182 = fadd float %178, %181, !dbg !37
  %183 = bitcast float %182 to i32, !dbg !41
  %184 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %183, i32 4, i32 31), !dbg !41
  %185 = bitcast i32 %184 to float, !dbg !41
  %186 = fadd float %182, %185, !dbg !37
  %187 = bitcast float %186 to i32, !dbg !41
  %188 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %187, i32 2, i32 31), !dbg !41
  %189 = bitcast i32 %188 to float, !dbg !41
  %190 = fadd float %186, %189, !dbg !37
  %191 = bitcast float %190 to i32, !dbg !41
  %192 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %191, i32 1, i32 31), !dbg !41
  %193 = bitcast i32 %192 to float, !dbg !41
  %194 = fadd float %190, %193, !dbg !37
  %195 = tail call float @llvm.nvvm.div.full(float %144, float %174), !dbg !42
  %196 = tail call float @llvm.nvvm.div.full(float %146, float %174), !dbg !42
  %197 = tail call float @llvm.nvvm.div.full(float %148, float %194), !dbg !42
  %198 = tail call float @llvm.nvvm.div.full(float %150, float %194), !dbg !42
  %199 = mul nsw i32 %.decomposed, 50, !dbg !43
  %200 = mul nsw i32 %.decomposed1, 50, !dbg !43
  %201 = add nsw i32 %199, %17, !dbg !44
  %202 = add nsw i32 %200, %17, !dbg !44
  %203 = mul i32 %19, 2528, !dbg !45
  %204 = mul i32 %21, 2528, !dbg !45
  %205 = add i32 %201, %203, !dbg !46
  %206 = add i32 %202, %204, !dbg !46
  %207 = sext i32 %205 to i64, !dbg !47
  %208 = getelementptr float, ptr addrspace(1) %2, i64 %207, !dbg !47
  %209 = sext i32 %206 to i64, !dbg !47
  %210 = getelementptr float, ptr addrspace(1) %2, i64 %209, !dbg !47
  %211 = bitcast float %195 to i32, !dbg !48
  %212 = bitcast float %196 to i32, !dbg !48
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %211, i32 %212, ptr addrspace(1) %208, i1 %31) #4, !dbg !48
  %213 = bitcast float %197 to i32, !dbg !48
  %214 = bitcast float %198 to i32, !dbg !48
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %213, i32 %214, ptr addrspace(1) %210, i1 %32) #4, !dbg !48
  ret void, !dbg !49
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef range(i32 0, 2147483647) i32 @llvm.nvvm.read.ptx.sreg.ctaid.x() #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef range(i32 0, 1024) i32 @llvm.nvvm.read.ptx.sreg.tid.x() #1

; Function Attrs: convergent nocallback nounwind memory(inaccessiblemem: readwrite)
declare i32 @llvm.nvvm.shfl.sync.bfly.i32(i32, i32, i32, i32) #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.ex2.approx.f(float) #3

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.div.full(float, float) #3

attributes #0 = { "nvvm.reqntid"="128" }
attributes #1 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #2 = { convergent nocallback nounwind memory(inaccessiblemem: readwrite) }
attributes #3 = { mustprogress nocallback nofree nosync nounwind willreturn memory(none) }
attributes #4 = { nounwind }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!2, !3}
!llvm.ident = !{!4}

!0 = distinct !DICompileUnit(language: DW_LANG_C, file: !1, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!1 = !DIFile(filename: "cs72dqgrz6wtxvrvlzsnrjvomcdgyurqcedygwq72a5yyfdt6ycv.py", directory: "/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/s7")
!2 = !{i32 2, !"Debug Info Version", i32 3}
!3 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!4 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!5 = distinct !DISubprogram(name: "triton_per_fused__softmax_add_zeros_3", linkageName: "triton_per_fused__softmax_add_zeros_3", scope: !1, file: !1, line: 18, type: !6, scopeLine: 18, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0)
!6 = !DISubroutineType(cc: DW_CC_normal, types: !7)
!7 = !{}
!8 = !DILocation(line: 24, column: 28, scope: !5)
!9 = !DILocation(line: 24, column: 33, scope: !5)
!10 = !DILocation(line: 25, column: 44, scope: !5)
!11 = !DILocation(line: 25, column: 23, scope: !5)
!12 = !DILocation(line: 26, column: 21, scope: !5)
!13 = !DILocation(line: 27, column: 38, scope: !5)
!14 = !DILocation(line: 29, column: 25, scope: !5)
!15 = !DILocation(line: 35, column: 19, scope: !5)
!16 = !DILocation(line: 34, column: 19, scope: !5)
!17 = !DILocation(line: 36, column: 40, scope: !5)
!18 = !DILocation(line: 36, column: 37, scope: !5)
!19 = !DILocation(line: 36, column: 30, scope: !5)
!20 = !DILocation(line: 36, column: 55, scope: !5)
!21 = !DILocation(line: 36, column: 45, scope: !5)
!22 = !DILocation(line: 37, column: 30, scope: !5)
!23 = !DILocation(line: 37, column: 37, scope: !5)
!24 = !DILocation(line: 39, column: 18, scope: !5)
!25 = !DILocation(line: 40, column: 18, scope: !5)
!26 = !DILocation(line: 43, column: 43, scope: !5)
!27 = !DILocation(line: 111, column: 15, scope: !28, inlinedAt: !30)
!28 = distinct !DILexicalBlockFile(scope: !5, file: !29, discriminator: 0)
!29 = !DIFile(filename: "triton_helpers.py", directory: "/mnt/disk1/anaconda3/envs/pqhung/lib/python3.9/site-packages/torch/_inductor/runtime")
!30 = !DILocation(line: 44, column: 38, scope: !5)
!31 = !DILocation(line: 113, column: 21, scope: !28, inlinedAt: !30)
!32 = !DILocation(line: 113, column: 16, scope: !28, inlinedAt: !30)
!33 = !DILocation(line: 114, column: 29, scope: !28, inlinedAt: !30)
!34 = !DILocation(line: 124, column: 29, scope: !28, inlinedAt: !30)
!35 = !DILocation(line: 45, column: 19, scope: !5)
!36 = !DILocation(line: 46, column: 24, scope: !5)
!37 = !DILocation(line: 260, column: 15, scope: !38, inlinedAt: !40)
!38 = distinct !DILexicalBlockFile(scope: !5, file: !39, discriminator: 0)
!39 = !DIFile(filename: "standard.py", directory: "/mnt/disk1/anaconda3/envs/pqhung/lib/python3.9/site-packages/triton/language")
!40 = !DILocation(line: 49, column: 26, scope: !5)
!41 = !DILocation(line: 290, column: 36, scope: !38, inlinedAt: !40)
!42 = !DILocation(line: 52, column: 21, scope: !5)
!43 = !DILocation(line: 53, column: 35, scope: !5)
!44 = !DILocation(line: 53, column: 32, scope: !5)
!45 = !DILocation(line: 53, column: 45, scope: !5)
!46 = !DILocation(line: 53, column: 40, scope: !5)
!47 = !DILocation(line: 53, column: 25, scope: !5)
!48 = !DILocation(line: 53, column: 57, scope: !5)
!49 = !DILocation(line: 53, column: 4, scope: !5)

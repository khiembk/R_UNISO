#loc = loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/3s/c3s5rpotgkrxj53byxl6iiai4e64ppfdhf7r5r7xy2iceaf5vzca.py":18:0)
#loc89 = loc("/mnt/disk1/anaconda3/envs/pqhung/lib/python3.9/site-packages/torch/_inductor/runtime/triton_helpers.py":187:0)
#loc103 = loc("/mnt/disk1/anaconda3/envs/pqhung/lib/python3.9/site-packages/torch/_inductor/runtime/triton_helpers.py":110:0)
#loc109 = loc(unknown)
#loc113 = loc("/mnt/disk1/anaconda3/envs/pqhung/lib/python3.9/site-packages/torch/_inductor/runtime/triton_helpers.py":87:0)
#loc117 = loc("/mnt/disk1/anaconda3/envs/pqhung/lib/python3.9/site-packages/torch/_inductor/runtime/triton_helpers.py":64:0)
#loc122 = loc("/mnt/disk1/anaconda3/envs/pqhung/lib/python3.9/site-packages/torch/_inductor/runtime/triton_helpers.py":170:0)
#loc126 = loc("/mnt/disk1/anaconda3/envs/pqhung/lib/python3.9/site-packages/torch/_inductor/runtime/triton_helpers.py":265:0)
#loc130 = loc("/mnt/disk1/anaconda3/envs/pqhung/lib/python3.9/site-packages/torch/_inductor/runtime/triton_helpers.py":260:0)
#loc134 = loc("/mnt/disk1/anaconda3/envs/pqhung/lib/python3.9/site-packages/torch/_inductor/runtime/triton_helpers.py":178:0)
#loc145 = loc("/mnt/disk1/anaconda3/envs/pqhung/lib/python3.9/site-packages/torch/_inductor/runtime/triton_helpers.py":123:0)
#loc149 = loc("/mnt/disk1/anaconda3/envs/pqhung/lib/python3.9/site-packages/triton/language/standard.py":284:0)
#loc153 = loc("/mnt/disk1/anaconda3/envs/pqhung/lib/python3.9/site-packages/triton/language/standard.py":259:0)
module {
  tt.func public @triton_red_fused_15(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/3s/c3s5rpotgkrxj53byxl6iiai4e64ppfdhf7r5r7xy2iceaf5vzca.py":18:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/3s/c3s5rpotgkrxj53byxl6iiai4e64ppfdhf7r5r7xy2iceaf5vzca.py":18:0), %arg2: i32 {tt.divisibility = 16 : i32} loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/3s/c3s5rpotgkrxj53byxl6iiai4e64ppfdhf7r5r7xy2iceaf5vzca.py":18:0), %arg3: i32 loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/3s/c3s5rpotgkrxj53byxl6iiai4e64ppfdhf7r5r7xy2iceaf5vzca.py":18:0)) attributes {noinline = false} {
    %c10368_i32 = arith.constant 10368 : i32 loc(#loc1)
    %c324_i32 = arith.constant 324 : i32 loc(#loc2)
    %0 = tt.get_program_id x : i32 loc(#loc3)
    %c64_i32 = arith.constant 64 : i32 loc(#loc4)
    %c64_i32_0 = arith.constant 64 : i32 loc(#loc4)
    %1 = arith.muli %0, %c64_i32_0 : i32 loc(#loc4)
    %2 = tt.make_range {end = 64 : i32, start = 0 : i32} : tensor<64xi32> loc(#loc5)
    %3 = tt.expand_dims %2 {axis = 1 : i32} : tensor<64xi32> -> tensor<64x1xi32> loc(#loc6)
    %4 = tt.splat %1 : i32 -> tensor<64x1xi32> loc(#loc7)
    %5 = arith.addi %4, %3 : tensor<64x1xi32> loc(#loc7)
    %cst = arith.constant dense<10368> : tensor<64x1xi32> loc(#loc8)
    %6 = arith.cmpi slt, %5, %cst : tensor<64x1xi32> loc(#loc8)
    %7 = tt.make_range {end = 64 : i32, start = 0 : i32} : tensor<64xi32> loc(#loc9)
    %8 = tt.expand_dims %7 {axis = 0 : i32} : tensor<64xi32> -> tensor<1x64xi32> loc(#loc10)
    %c324_i32_1 = arith.constant 324 : i32 loc(#loc11)
    %c324_i32_2 = arith.constant 324 : i32 loc(#loc11)
    %cst_3 = arith.constant dense<324> : tensor<64x1xi32> loc(#loc11)
    %9 = arith.remsi %5, %cst_3 : tensor<64x1xi32> loc(#loc11)
    %c324_i32_4 = arith.constant 324 : i32 loc(#loc12)
    %c324_i32_5 = arith.constant 324 : i32 loc(#loc12)
    %cst_6 = arith.constant dense<324> : tensor<64x1xi32> loc(#loc12)
    %10 = arith.divsi %5, %cst_6 : tensor<64x1xi32> loc(#loc12)
    %false = arith.constant false loc(#loc13)
    %cst_7 = arith.constant dense<false> : tensor<64x64xi1> loc(#loc13)
    %c2592_i32 = arith.constant 2592 : i32 loc(#loc14)
    %c2592_i32_8 = arith.constant 2592 : i32 loc(#loc14)
    %cst_9 = arith.constant dense<2592> : tensor<64x1xi32> loc(#loc14)
    %11 = arith.divsi %5, %cst_9 : tensor<64x1xi32> loc(#loc14)
    %c2592_i32_10 = arith.constant 2592 : i32 loc(#loc15)
    %c2592_i32_11 = arith.constant 2592 : i32 loc(#loc15)
    %cst_12 = arith.constant dense<2592> : tensor<64x1xi32> loc(#loc15)
    %12 = arith.remsi %5, %cst_12 : tensor<64x1xi32> loc(#loc15)
    %cst_13 = arith.constant 0xFF800000 : f32 loc(#loc16)
    %cst_14 = arith.constant dense<0xFF800000> : tensor<64x64xf32> loc(#loc16)
    %13 = tt.call @"triton.language.standard.zeros____(0, 0)cconstexpr_64__(0, 1)cconstexpr_64__(1,)cconstexpr_fp32_"() : () -> tensor<64x64xf32> loc(#loc17)
    %c0_i32 = arith.constant 0 : i32 loc(#loc18)
    %c64_i32_15 = arith.constant 64 : i32 loc(#loc18)
    %14 = arith.bitcast %c0_i32 : i32 to i32 loc(#loc18)
    %15 = arith.bitcast %c324_i32 : i32 to i32 loc(#loc18)
    %16 = arith.bitcast %c64_i32_15 : i32 to i32 loc(#loc18)
    %17 = ub.poison : i32 loc(#loc18)
    %18:3 = scf.for %arg4 = %14 to %15 step %16 iter_args(%arg5 = %cst_7, %arg6 = %cst_14, %arg7 = %13) -> (tensor<64x64xi1>, tensor<64x64xf32>, tensor<64x64xf32>)  : i32 {
      %30 = tt.splat %arg4 : i32 -> tensor<1x64xi32> loc(#loc19)
      %31 = arith.addi %30, %8 : tensor<1x64xi32> loc(#loc19)
      %cst_19 = arith.constant dense<324> : tensor<1x64xi32> loc(#loc20)
      %32 = arith.cmpi slt, %31, %cst_19 : tensor<1x64xi32> loc(#loc20)
      %c324_i32_20 = arith.constant 324 : i32 loc(#loc21)
      %c324_i32_21 = arith.constant 324 : i32 loc(#loc21)
      %cst_22 = arith.constant dense<324> : tensor<64x1xi32> loc(#loc21)
      %33 = arith.muli %cst_22, %5 : tensor<64x1xi32> loc(#loc21)
      %34 = tt.broadcast %31 : tensor<1x64xi32> -> tensor<64x64xi32> loc(#loc22)
      %35 = tt.broadcast %33 : tensor<64x1xi32> -> tensor<64x64xi32> loc(#loc22)
      %36 = arith.addi %34, %35 : tensor<64x64xi32> loc(#loc22)
      %37 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<64x64x!tt.ptr<f32>> loc(#loc23)
      %38 = tt.addptr %37, %36 : tensor<64x64x!tt.ptr<f32>>, tensor<64x64xi32> loc(#loc23)
      %39 = tt.broadcast %32 : tensor<1x64xi1> -> tensor<64x64xi1> loc(#loc24)
      %40 = tt.broadcast %6 : tensor<64x1xi1> -> tensor<64x64xi1> loc(#loc24)
      %41 = arith.andi %39, %40 : tensor<64x64xi1> loc(#loc24)
      %cst_23 = arith.constant 0.000000e+00 : f32 loc(#loc25)
      %cst_24 = arith.constant dense<0.000000e+00> : tensor<64x64xf32> loc(#loc25)
      %42 = tt.load %38, %41, %cst_24 evictionPolicy = evict_last : tensor<64x64x!tt.ptr<f32>> loc(#loc25)
      %c324_i32_25 = arith.constant 324 : i32 loc(#loc26)
      %c324_i32_26 = arith.constant 324 : i32 loc(#loc26)
      %cst_27 = arith.constant dense<324> : tensor<64x1xi32> loc(#loc26)
      %43 = arith.muli %cst_27, %9 : tensor<64x1xi32> loc(#loc26)
      %44 = tt.broadcast %31 : tensor<1x64xi32> -> tensor<64x64xi32> loc(#loc27)
      %45 = tt.broadcast %43 : tensor<64x1xi32> -> tensor<64x64xi32> loc(#loc27)
      %46 = arith.addi %44, %45 : tensor<64x64xi32> loc(#loc27)
      %c104992_i32 = arith.constant 104992 : i32 loc(#loc28)
      %c104992_i32_28 = arith.constant 104992 : i32 loc(#loc28)
      %cst_29 = arith.constant dense<104992> : tensor<64x1xi32> loc(#loc28)
      %47 = arith.muli %cst_29, %10 : tensor<64x1xi32> loc(#loc28)
      %48 = tt.broadcast %47 : tensor<64x1xi32> -> tensor<64x64xi32> loc(#loc29)
      %49 = arith.addi %46, %48 : tensor<64x64xi32> loc(#loc29)
      %50 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<64x64x!tt.ptr<f32>> loc(#loc30)
      %51 = tt.addptr %50, %49 : tensor<64x64x!tt.ptr<f32>>, tensor<64x64xi32> loc(#loc30)
      %52 = tt.broadcast %32 : tensor<1x64xi1> -> tensor<64x64xi1> loc(#loc31)
      %53 = tt.broadcast %6 : tensor<64x1xi1> -> tensor<64x64xi1> loc(#loc31)
      %54 = arith.andi %52, %53 : tensor<64x64xi1> loc(#loc31)
      %cst_30 = arith.constant 0.000000e+00 : f32 loc(#loc32)
      %cst_31 = arith.constant dense<0.000000e+00> : tensor<64x64xf32> loc(#loc32)
      %55 = tt.load %51, %54, %cst_31 evictionPolicy = evict_last : tensor<64x64x!tt.ptr<f32>> loc(#loc32)
      %56 = arith.addf %42, %55 : tensor<64x64xf32> loc(#loc33)
      %cst_32 = arith.constant 0xFF800000 : f32 loc(#loc34)
      %cst_33 = arith.constant dense<0xFF800000> : tensor<64x64xf32> loc(#loc35)
      %57 = arith.cmpf oeq, %56, %cst_33 : tensor<64x64xf32> loc(#loc35)
      %c0_i32_34 = arith.constant 0 : i32 loc(#loc36)
      %58 = arith.extui %57 : tensor<64x64xi1> to tensor<64x64xi32> loc(#loc36)
      %cst_35 = arith.constant dense<0> : tensor<64x64xi32> loc(#loc36)
      %59 = arith.cmpi eq, %58, %cst_35 : tensor<64x64xi32> loc(#loc36)
      %60 = arith.extui %59 : tensor<64x64xi1> to tensor<64x64xi64> loc(#loc37)
      %c0_i32_36 = arith.constant 0 : i32 loc(#loc38)
      %61 = arith.extsi %c0_i32_36 : i32 to i64 loc(#loc38)
      %62 = tt.splat %61 : i64 -> tensor<64x64xi64> loc(#loc38)
      %63 = arith.cmpi ne, %60, %62 : tensor<64x64xi64> loc(#loc38)
      %64 = arith.ori %arg5, %63 : tensor<64x64xi1> loc(#loc39)
      %65 = tt.broadcast %32 : tensor<1x64xi1> -> tensor<64x64xi1> loc(#loc40)
      %66 = tt.broadcast %6 : tensor<64x1xi1> -> tensor<64x64xi1> loc(#loc40)
      %67 = arith.andi %65, %66 : tensor<64x64xi1> loc(#loc40)
      %68 = arith.select %67, %64, %arg5 : tensor<64x64xi1>, tensor<64x64xi1> loc(#loc41)
      %69:2 = tt.call @"torch._inductor.runtime.triton_helpers.online_softmax_combine__fp32S64_64S_fp32S64_64S_fp32S64_64S__(3,)cconstexpr_False_"(%arg6, %arg7, %56) : (tensor<64x64xf32>, tensor<64x64xf32>, tensor<64x64xf32>) -> (tensor<64x64xf32>, tensor<64x64xf32>) loc(#loc42)
      %70 = tt.broadcast %32 : tensor<1x64xi1> -> tensor<64x64xi1> loc(#loc43)
      %71 = tt.broadcast %6 : tensor<64x1xi1> -> tensor<64x64xi1> loc(#loc43)
      %72 = arith.andi %70, %71 : tensor<64x64xi1> loc(#loc43)
      %73 = arith.select %72, %69#0, %arg6 : tensor<64x64xi1>, tensor<64x64xf32> loc(#loc44)
      %74 = tt.broadcast %32 : tensor<1x64xi1> -> tensor<64x64xi1> loc(#loc45)
      %75 = tt.broadcast %6 : tensor<64x1xi1> -> tensor<64x64xi1> loc(#loc45)
      %76 = arith.andi %74, %75 : tensor<64x64xi1> loc(#loc45)
      %77 = arith.select %76, %69#1, %arg7 : tensor<64x64xi1>, tensor<64x64xf32> loc(#loc46)
      scf.yield %68, %73, %77 : tensor<64x64xi1>, tensor<64x64xf32>, tensor<64x64xf32> loc(#loc47)
    } loc(#loc18)
    %19 = arith.extui %18#0 : tensor<64x64xi1> to tensor<64x64xi8> loc(#loc48)
    %20 = tt.call @"torch._inductor.runtime.triton_helpers.any__i8S64_64S__(1,)cconstexpr_1_"(%19) : (tensor<64x64xi8>) -> tensor<64xi8> loc(#loc49)
    %21 = tt.expand_dims %20 {axis = 1 : i32} : tensor<64xi8> -> tensor<64x1xi8> loc(#loc50)
    %c0_i8 = arith.constant 0 : i8 loc(#loc51)
    %cst_16 = arith.constant dense<0> : tensor<64x1xi8> loc(#loc51)
    %22 = arith.cmpi ne, %21, %cst_16 : tensor<64x1xi8> loc(#loc51)
    %23:2 = tt.call @"torch._inductor.runtime.triton_helpers.online_softmax_reduce__fp32S64_64S_fp32S64_64S__(2,)cconstexpr_1__(3,)cconstexpr_False_"(%18#1, %18#2) : (tensor<64x64xf32>, tensor<64x64xf32>) -> (tensor<64xf32>, tensor<64xf32>) loc(#loc52)
    %24 = tt.expand_dims %23#0 {axis = 1 : i32} : tensor<64xf32> -> tensor<64x1xf32> loc(#loc53)
    %25 = tt.expand_dims %23#1 {axis = 1 : i32} : tensor<64xf32> -> tensor<64x1xf32> loc(#loc54)
    %c0_i32_17 = arith.constant 0 : i32 loc(#loc55)
    %c64_i32_18 = arith.constant 64 : i32 loc(#loc55)
    %26 = arith.bitcast %c0_i32_17 : i32 to i32 loc(#loc55)
    %27 = arith.bitcast %c324_i32 : i32 to i32 loc(#loc55)
    %28 = arith.bitcast %c64_i32_18 : i32 to i32 loc(#loc55)
    %29 = ub.poison : i32 loc(#loc55)
    scf.for %arg4 = %26 to %27 step %28  : i32 {
      %30 = tt.splat %arg4 : i32 -> tensor<1x64xi32> loc(#loc56)
      %31 = arith.addi %30, %8 : tensor<1x64xi32> loc(#loc56)
      %cst_19 = arith.constant dense<324> : tensor<1x64xi32> loc(#loc57)
      %32 = arith.cmpi slt, %31, %cst_19 : tensor<1x64xi32> loc(#loc57)
      %c324_i32_20 = arith.constant 324 : i32 loc(#loc58)
      %c324_i32_21 = arith.constant 324 : i32 loc(#loc58)
      %cst_22 = arith.constant dense<324> : tensor<64x1xi32> loc(#loc58)
      %33 = arith.muli %cst_22, %5 : tensor<64x1xi32> loc(#loc58)
      %34 = tt.broadcast %31 : tensor<1x64xi32> -> tensor<64x64xi32> loc(#loc59)
      %35 = tt.broadcast %33 : tensor<64x1xi32> -> tensor<64x64xi32> loc(#loc59)
      %36 = arith.addi %34, %35 : tensor<64x64xi32> loc(#loc59)
      %37 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<64x64x!tt.ptr<f32>> loc(#loc60)
      %38 = tt.addptr %37, %36 : tensor<64x64x!tt.ptr<f32>>, tensor<64x64xi32> loc(#loc60)
      %39 = tt.broadcast %32 : tensor<1x64xi1> -> tensor<64x64xi1> loc(#loc61)
      %40 = tt.broadcast %6 : tensor<64x1xi1> -> tensor<64x64xi1> loc(#loc61)
      %41 = arith.andi %39, %40 : tensor<64x64xi1> loc(#loc61)
      %cst_23 = arith.constant 0.000000e+00 : f32 loc(#loc62)
      %cst_24 = arith.constant dense<0.000000e+00> : tensor<64x64xf32> loc(#loc62)
      %42 = tt.load %38, %41, %cst_24 evictionPolicy = evict_first : tensor<64x64x!tt.ptr<f32>> loc(#loc62)
      %c324_i32_25 = arith.constant 324 : i32 loc(#loc63)
      %c324_i32_26 = arith.constant 324 : i32 loc(#loc63)
      %cst_27 = arith.constant dense<324> : tensor<64x1xi32> loc(#loc63)
      %43 = arith.muli %cst_27, %9 : tensor<64x1xi32> loc(#loc63)
      %44 = tt.broadcast %31 : tensor<1x64xi32> -> tensor<64x64xi32> loc(#loc64)
      %45 = tt.broadcast %43 : tensor<64x1xi32> -> tensor<64x64xi32> loc(#loc64)
      %46 = arith.addi %44, %45 : tensor<64x64xi32> loc(#loc64)
      %c104992_i32 = arith.constant 104992 : i32 loc(#loc65)
      %c104992_i32_28 = arith.constant 104992 : i32 loc(#loc65)
      %cst_29 = arith.constant dense<104992> : tensor<64x1xi32> loc(#loc65)
      %47 = arith.muli %cst_29, %10 : tensor<64x1xi32> loc(#loc65)
      %48 = tt.broadcast %47 : tensor<64x1xi32> -> tensor<64x64xi32> loc(#loc66)
      %49 = arith.addi %46, %48 : tensor<64x64xi32> loc(#loc66)
      %50 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<64x64x!tt.ptr<f32>> loc(#loc67)
      %51 = tt.addptr %50, %49 : tensor<64x64x!tt.ptr<f32>>, tensor<64x64xi32> loc(#loc67)
      %52 = tt.broadcast %32 : tensor<1x64xi1> -> tensor<64x64xi1> loc(#loc68)
      %53 = tt.broadcast %6 : tensor<64x1xi1> -> tensor<64x64xi1> loc(#loc68)
      %54 = arith.andi %52, %53 : tensor<64x64xi1> loc(#loc68)
      %cst_30 = arith.constant 0.000000e+00 : f32 loc(#loc69)
      %cst_31 = arith.constant dense<0.000000e+00> : tensor<64x64xf32> loc(#loc69)
      %55 = tt.load %51, %54, %cst_31 evictionPolicy = evict_first : tensor<64x64x!tt.ptr<f32>> loc(#loc69)
      %c0_i32_32 = arith.constant 0 : i32 loc(#loc70)
      %56 = arith.extui %22 : tensor<64x1xi1> to tensor<64x1xi32> loc(#loc70)
      %cst_33 = arith.constant dense<0> : tensor<64x1xi32> loc(#loc70)
      %57 = arith.cmpi eq, %56, %cst_33 : tensor<64x1xi32> loc(#loc70)
      %58 = arith.addf %42, %55 : tensor<64x64xf32> loc(#loc71)
      %59 = tt.broadcast %24 : tensor<64x1xf32> -> tensor<64x64xf32> loc(#loc72)
      %60 = arith.subf %58, %59 : tensor<64x64xf32> loc(#loc72)
      %61 = math.exp %60 : tensor<64x64xf32> loc(#loc73)
      %62 = tt.broadcast %25 : tensor<64x1xf32> -> tensor<64x64xf32> loc(#loc74)
      %63 = arith.divf %61, %62 : tensor<64x64xf32> loc(#loc74)
      %cst_34 = arith.constant 0.000000e+00 : f32 loc(#loc75)
      %cst_35 = arith.constant dense<0.000000e+00> : tensor<64x64xf32> loc(#loc76)
      %64 = tt.broadcast %57 : tensor<64x1xi1> -> tensor<64x64xi1> loc(#loc76)
      %65 = arith.select %64, %cst_35, %63 : tensor<64x64xi1>, tensor<64x64xf32> loc(#loc76)
      %c324_i32_36 = arith.constant 324 : i32 loc(#loc77)
      %c324_i32_37 = arith.constant 324 : i32 loc(#loc77)
      %cst_38 = arith.constant dense<324> : tensor<64x1xi32> loc(#loc77)
      %66 = arith.muli %cst_38, %9 : tensor<64x1xi32> loc(#loc77)
      %67 = tt.broadcast %31 : tensor<1x64xi32> -> tensor<64x64xi32> loc(#loc78)
      %68 = tt.broadcast %66 : tensor<64x1xi32> -> tensor<64x64xi32> loc(#loc78)
      %69 = arith.addi %67, %68 : tensor<64x64xi32> loc(#loc78)
      %c104992_i32_39 = arith.constant 104992 : i32 loc(#loc79)
      %c104992_i32_40 = arith.constant 104992 : i32 loc(#loc79)
      %cst_41 = arith.constant dense<104992> : tensor<64x1xi32> loc(#loc79)
      %70 = arith.muli %cst_41, %10 : tensor<64x1xi32> loc(#loc79)
      %71 = tt.broadcast %70 : tensor<64x1xi32> -> tensor<64x64xi32> loc(#loc80)
      %72 = arith.addi %69, %71 : tensor<64x64xi32> loc(#loc80)
      %73 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<64x64x!tt.ptr<f32>> loc(#loc81)
      %74 = tt.addptr %73, %72 : tensor<64x64x!tt.ptr<f32>>, tensor<64x64xi32> loc(#loc81)
      %75 = tt.broadcast %32 : tensor<1x64xi1> -> tensor<64x64xi1> loc(#loc82)
      %76 = tt.broadcast %6 : tensor<64x1xi1> -> tensor<64x64xi1> loc(#loc82)
      %77 = arith.andi %75, %76 : tensor<64x64xi1> loc(#loc82)
      tt.store %74, %65, %77 : tensor<64x64x!tt.ptr<f32>> loc(#loc83)
    } loc(#loc55)
    tt.return loc(#loc84)
  } loc(#loc)
  tt.func private @"triton.language.standard.zeros____(0, 0)cconstexpr_64__(0, 1)cconstexpr_64__(1,)cconstexpr_fp32_"() -> tensor<64x64xf32> attributes {noinline = false} {
    %cst = arith.constant 0.000000e+00 : f32 loc(#loc86)
    %cst_0 = arith.constant dense<0.000000e+00> : tensor<64x64xf32> loc(#loc86)
    tt.return %cst_0 : tensor<64x64xf32> loc(#loc87)
  ^bb1:  // no predecessors
    %0 = ub.poison : tensor<64x64xf32> loc(#loc88)
    tt.return %0 : tensor<64x64xf32> loc(#loc88)
  } loc(#loc85)
  tt.func private @"torch._inductor.runtime.triton_helpers.online_softmax_combine__fp32S64_64S_fp32S64_64S_fp32S64_64S__(3,)cconstexpr_False_"(%arg0: tensor<64x64xf32> loc("/mnt/disk1/anaconda3/envs/pqhung/lib/python3.9/site-packages/torch/_inductor/runtime/triton_helpers.py":187:0), %arg1: tensor<64x64xf32> loc("/mnt/disk1/anaconda3/envs/pqhung/lib/python3.9/site-packages/torch/_inductor/runtime/triton_helpers.py":187:0), %arg2: tensor<64x64xf32> loc("/mnt/disk1/anaconda3/envs/pqhung/lib/python3.9/site-packages/torch/_inductor/runtime/triton_helpers.py":187:0)) -> (tensor<64x64xf32>, tensor<64x64xf32>) attributes {noinline = false} {
    %0 = tt.call @torch._inductor.runtime.triton_helpers.maximum__fp32S64_64S_fp32S64_64S__(%arg0, %arg2) : (tensor<64x64xf32>, tensor<64x64xf32>) -> tensor<64x64xf32> loc(#loc90)
    %cst = arith.constant 0xFF800000 : f32 loc(#loc91)
    %cst_0 = arith.constant dense<0xFF800000> : tensor<64x64xf32> loc(#loc91)
    %1 = arith.cmpf oeq, %0, %cst_0 : tensor<64x64xf32> loc(#loc91)
    %2 = arith.subf %arg0, %0 : tensor<64x64xf32> loc(#loc92)
    %3 = tt.call @"torch._inductor.runtime.triton_helpers.exp__fp32S64_64S__(1,)cconstexpr_False_"(%2) : (tensor<64x64xf32>) -> tensor<64x64xf32> loc(#loc93)
    %cst_1 = arith.constant 1.000000e+00 : f32 loc(#loc94)
    %cst_2 = arith.constant 1.000000e+00 : f32 loc(#loc94)
    %cst_3 = arith.constant dense<1.000000e+00> : tensor<64x64xf32> loc(#loc94)
    %4 = arith.select %1, %cst_3, %3 : tensor<64x64xi1>, tensor<64x64xf32> loc(#loc94)
    %cst_4 = arith.constant 0xFF800000 : f32 loc(#loc95)
    %cst_5 = arith.constant dense<0xFF800000> : tensor<64x64xf32> loc(#loc95)
    %5 = arith.cmpf oeq, %0, %cst_5 : tensor<64x64xf32> loc(#loc95)
    %6 = arith.subf %arg2, %0 : tensor<64x64xf32> loc(#loc96)
    %7 = tt.call @"torch._inductor.runtime.triton_helpers.exp__fp32S64_64S__(1,)cconstexpr_False_"(%6) : (tensor<64x64xf32>) -> tensor<64x64xf32> loc(#loc97)
    %cst_6 = arith.constant 1.000000e+00 : f32 loc(#loc98)
    %cst_7 = arith.constant 1.000000e+00 : f32 loc(#loc98)
    %cst_8 = arith.constant dense<1.000000e+00> : tensor<64x64xf32> loc(#loc98)
    %8 = arith.select %5, %cst_8, %7 : tensor<64x64xi1>, tensor<64x64xf32> loc(#loc98)
    %9 = arith.mulf %arg1, %4 : tensor<64x64xf32> loc(#loc99)
    %10 = arith.addf %9, %8 : tensor<64x64xf32> loc(#loc100)
    tt.return %0, %10 : tensor<64x64xf32>, tensor<64x64xf32> loc(#loc101)
  ^bb1:  // no predecessors
    %11 = ub.poison : tensor<64x64xf32> loc(#loc102)
    %12 = ub.poison : tensor<64x64xf32> loc(#loc102)
    tt.return %11, %12 : tensor<64x64xf32>, tensor<64x64xf32> loc(#loc102)
  } loc(#loc89)
  tt.func private @torch._inductor.runtime.triton_helpers.maximum__fp32S64_64S_fp32S64_64S__(%arg0: tensor<64x64xf32> loc("/mnt/disk1/anaconda3/envs/pqhung/lib/python3.9/site-packages/torch/_inductor/runtime/triton_helpers.py":110:0), %arg1: tensor<64x64xf32> loc("/mnt/disk1/anaconda3/envs/pqhung/lib/python3.9/site-packages/torch/_inductor/runtime/triton_helpers.py":110:0)) -> tensor<64x64xf32> attributes {noinline = false} {
    %0 = arith.cmpf ogt, %arg0, %arg1 : tensor<64x64xf32> loc(#loc104)
    %1 = tt.call @torch._inductor.runtime.triton_helpers.is_floating__fp32S64_64S__(%arg0) : (tensor<64x64xf32>) -> i1 loc(#loc105)
    %2 = scf.if %1 -> (tensor<64x64xi1>) {
      %5 = arith.cmpf une, %arg0, %arg0 : tensor<64x64xf32> loc(#loc107)
      %6 = arith.ori %0, %5 : tensor<64x64xi1> loc(#loc108)
      scf.yield %6 : tensor<64x64xi1> loc(#loc108)
    } else {
      scf.yield %0 : tensor<64x64xi1> loc(#loc109)
    } loc(#loc106)
    %3 = arith.select %2, %arg0, %arg1 : tensor<64x64xi1>, tensor<64x64xf32> loc(#loc110)
    tt.return %3 : tensor<64x64xf32> loc(#loc111)
  ^bb1:  // no predecessors
    %4 = ub.poison : tensor<64x64xf32> loc(#loc112)
    tt.return %4 : tensor<64x64xf32> loc(#loc112)
  } loc(#loc103)
  tt.func private @torch._inductor.runtime.triton_helpers.is_floating__fp32S64_64S__(%arg0: tensor<64x64xf32> loc("/mnt/disk1/anaconda3/envs/pqhung/lib/python3.9/site-packages/torch/_inductor/runtime/triton_helpers.py":87:0)) -> i1 attributes {noinline = false} {
    %0 = tt.call @torch._inductor.runtime.triton_helpers.promote_to_tensor__fp32S64_64S__(%arg0) : (tensor<64x64xf32>) -> tensor<64x64xf32> loc(#loc114)
    %true = arith.constant true loc(#loc115)
    tt.return %true : i1 loc(#loc115)
  ^bb1:  // no predecessors
    %1 = ub.poison : i1 loc(#loc116)
    tt.return %1 : i1 loc(#loc116)
  } loc(#loc113)
  tt.func private @torch._inductor.runtime.triton_helpers.promote_to_tensor__fp32S64_64S__(%arg0: tensor<64x64xf32> loc("/mnt/disk1/anaconda3/envs/pqhung/lib/python3.9/site-packages/torch/_inductor/runtime/triton_helpers.py":64:0)) -> tensor<64x64xf32> attributes {noinline = false} {
    %0 = tt.call @"triton.language.standard.zeros____(0, 0)cconstexpr_1__(1,)cconstexpr_int1_"() : () -> tensor<1xi1> loc(#loc118)
    %1 = arith.uitofp %0 : tensor<1xi1> to tensor<1xf32> loc(#loc119)
    %2 = tt.expand_dims %1 {axis = 0 : i32} : tensor<1xf32> -> tensor<1x1xf32> loc(#loc119)
    %3 = tt.broadcast %2 : tensor<1x1xf32> -> tensor<64x64xf32> loc(#loc119)
    %4 = arith.addf %arg0, %3 : tensor<64x64xf32> loc(#loc119)
    tt.return %4 : tensor<64x64xf32> loc(#loc120)
  ^bb1:  // no predecessors
    %5 = ub.poison : tensor<64x64xf32> loc(#loc121)
    tt.return %5 : tensor<64x64xf32> loc(#loc121)
  } loc(#loc117)
  tt.func private @"triton.language.standard.zeros____(0, 0)cconstexpr_1__(1,)cconstexpr_int1_"() -> tensor<1xi1> attributes {noinline = false} {
    %false = arith.constant false loc(#loc86)
    %cst = arith.constant dense<false> : tensor<1xi1> loc(#loc86)
    tt.return %cst : tensor<1xi1> loc(#loc87)
  ^bb1:  // no predecessors
    %0 = ub.poison : tensor<1xi1> loc(#loc88)
    tt.return %0 : tensor<1xi1> loc(#loc88)
  } loc(#loc85)
  tt.func private @"torch._inductor.runtime.triton_helpers.exp__fp32S64_64S__(1,)cconstexpr_False_"(%arg0: tensor<64x64xf32> loc("/mnt/disk1/anaconda3/envs/pqhung/lib/python3.9/site-packages/torch/_inductor/runtime/triton_helpers.py":170:0)) -> tensor<64x64xf32> attributes {noinline = false} {
    %0 = math.exp %arg0 : tensor<64x64xf32> loc(#loc123)
    tt.return %0 : tensor<64x64xf32> loc(#loc124)
  ^bb1:  // no predecessors
    %1 = ub.poison : tensor<64x64xf32> loc(#loc125)
    tt.return %1 : tensor<64x64xf32> loc(#loc125)
  } loc(#loc122)
  tt.func private @"torch._inductor.runtime.triton_helpers.any__i8S64_64S__(1,)cconstexpr_1_"(%arg0: tensor<64x64xi8> loc("/mnt/disk1/anaconda3/envs/pqhung/lib/python3.9/site-packages/torch/_inductor/runtime/triton_helpers.py":265:0)) -> tensor<64xi8> attributes {noinline = false} {
    %0 = "tt.reduce"(%arg0) <{axis = 1 : i32}> ({
    ^bb0(%arg1: i8 loc(unknown), %arg2: i8 loc(unknown)):
      %2 = tt.call @torch._inductor.runtime.triton_helpers._any_combine__i8_i8__(%arg1, %arg2) : (i8, i8) -> i8 loc(#loc127)
      tt.reduce.return %2 : i8 loc(#loc127)
    }) : (tensor<64x64xi8>) -> tensor<64xi8> loc(#loc127)
    tt.return %0 : tensor<64xi8> loc(#loc128)
  ^bb1:  // no predecessors
    %1 = ub.poison : tensor<64xi8> loc(#loc129)
    tt.return %1 : tensor<64xi8> loc(#loc129)
  } loc(#loc126)
  tt.func private @torch._inductor.runtime.triton_helpers._any_combine__i8_i8__(%arg0: i8 loc("/mnt/disk1/anaconda3/envs/pqhung/lib/python3.9/site-packages/torch/_inductor/runtime/triton_helpers.py":260:0), %arg1: i8 loc("/mnt/disk1/anaconda3/envs/pqhung/lib/python3.9/site-packages/torch/_inductor/runtime/triton_helpers.py":260:0)) -> i8 attributes {noinline = false} {
    %0 = arith.ori %arg0, %arg1 : i8 loc(#loc131)
    tt.return %0 : i8 loc(#loc132)
  ^bb1:  // no predecessors
    %1 = ub.poison : i8 loc(#loc133)
    tt.return %1 : i8 loc(#loc133)
  } loc(#loc130)
  tt.func private @"torch._inductor.runtime.triton_helpers.online_softmax_reduce__fp32S64_64S_fp32S64_64S__(2,)cconstexpr_1__(3,)cconstexpr_False_"(%arg0: tensor<64x64xf32> loc("/mnt/disk1/anaconda3/envs/pqhung/lib/python3.9/site-packages/torch/_inductor/runtime/triton_helpers.py":178:0), %arg1: tensor<64x64xf32> loc("/mnt/disk1/anaconda3/envs/pqhung/lib/python3.9/site-packages/torch/_inductor/runtime/triton_helpers.py":178:0)) -> (tensor<64xf32>, tensor<64xf32>) attributes {noinline = false} {
    %0 = tt.call @"torch._inductor.runtime.triton_helpers.max2__fp32S64_64S__(1,)cconstexpr_1_"(%arg0) : (tensor<64x64xf32>) -> tensor<64xf32> loc(#loc135)
    %1 = tt.expand_dims %0 {axis = 1 : i32} : tensor<64xf32> -> tensor<64x1xf32> loc(#loc136)
    %cst = arith.constant 0xFF800000 : f32 loc(#loc137)
    %cst_0 = arith.constant dense<0xFF800000> : tensor<64x1xf32> loc(#loc137)
    %2 = arith.cmpf oeq, %1, %cst_0 : tensor<64x1xf32> loc(#loc137)
    %3 = tt.broadcast %1 : tensor<64x1xf32> -> tensor<64x64xf32> loc(#loc138)
    %4 = arith.subf %arg0, %3 : tensor<64x64xf32> loc(#loc138)
    %c0_i32 = arith.constant 0 : i32 loc(#loc139)
    %cst_1 = arith.constant 0.000000e+00 : f32 loc(#loc139)
    %cst_2 = arith.constant dense<0.000000e+00> : tensor<64x64xf32> loc(#loc139)
    %5 = tt.broadcast %2 : tensor<64x1xi1> -> tensor<64x64xi1> loc(#loc139)
    %6 = arith.select %5, %cst_2, %4 : tensor<64x64xi1>, tensor<64x64xf32> loc(#loc139)
    %7 = tt.call @"torch._inductor.runtime.triton_helpers.exp__fp32S64_64S__(1,)cconstexpr_False_"(%6) : (tensor<64x64xf32>) -> tensor<64x64xf32> loc(#loc140)
    %8 = arith.mulf %arg1, %7 : tensor<64x64xf32> loc(#loc141)
    %9 = tt.call @"triton.language.standard.sum__fp32S64_64S__(1,)cconstexpr_1__(2,)cconstexpr_False__(3,)cNone"(%8) : (tensor<64x64xf32>) -> tensor<64xf32> loc(#loc142)
    tt.return %0, %9 : tensor<64xf32>, tensor<64xf32> loc(#loc143)
  ^bb1:  // no predecessors
    %10 = ub.poison : tensor<64xf32> loc(#loc144)
    %11 = ub.poison : tensor<64xf32> loc(#loc144)
    tt.return %10, %11 : tensor<64xf32>, tensor<64xf32> loc(#loc144)
  } loc(#loc134)
  tt.func private @"torch._inductor.runtime.triton_helpers.max2__fp32S64_64S__(1,)cconstexpr_1_"(%arg0: tensor<64x64xf32> loc("/mnt/disk1/anaconda3/envs/pqhung/lib/python3.9/site-packages/torch/_inductor/runtime/triton_helpers.py":123:0)) -> tensor<64xf32> attributes {noinline = false} {
    %0 = "tt.reduce"(%arg0) <{axis = 1 : i32}> ({
    ^bb0(%arg1: f32 loc(unknown), %arg2: f32 loc(unknown)):
      %2 = tt.call @torch._inductor.runtime.triton_helpers.maximum__fp32_fp32__(%arg1, %arg2) : (f32, f32) -> f32 loc(#loc146)
      tt.reduce.return %2 : f32 loc(#loc146)
    }) : (tensor<64x64xf32>) -> tensor<64xf32> loc(#loc146)
    tt.return %0 : tensor<64xf32> loc(#loc147)
  ^bb1:  // no predecessors
    %1 = ub.poison : tensor<64xf32> loc(#loc148)
    tt.return %1 : tensor<64xf32> loc(#loc148)
  } loc(#loc145)
  tt.func private @torch._inductor.runtime.triton_helpers.maximum__fp32_fp32__(%arg0: f32 loc("/mnt/disk1/anaconda3/envs/pqhung/lib/python3.9/site-packages/torch/_inductor/runtime/triton_helpers.py":110:0), %arg1: f32 loc("/mnt/disk1/anaconda3/envs/pqhung/lib/python3.9/site-packages/torch/_inductor/runtime/triton_helpers.py":110:0)) -> f32 attributes {noinline = false} {
    %0 = arith.cmpf ogt, %arg0, %arg1 : f32 loc(#loc104)
    %1 = tt.call @torch._inductor.runtime.triton_helpers.is_floating__fp32__(%arg0) : (f32) -> i1 loc(#loc105)
    %2 = scf.if %1 -> (i1) {
      %5 = arith.cmpf une, %arg0, %arg0 : f32 loc(#loc107)
      %6 = arith.ori %0, %5 : i1 loc(#loc108)
      scf.yield %6 : i1 loc(#loc108)
    } else {
      scf.yield %0 : i1 loc(#loc109)
    } loc(#loc106)
    %3 = arith.select %2, %arg0, %arg1 : f32 loc(#loc110)
    tt.return %3 : f32 loc(#loc111)
  ^bb1:  // no predecessors
    %4 = ub.poison : f32 loc(#loc112)
    tt.return %4 : f32 loc(#loc112)
  } loc(#loc103)
  tt.func private @torch._inductor.runtime.triton_helpers.is_floating__fp32__(%arg0: f32 loc("/mnt/disk1/anaconda3/envs/pqhung/lib/python3.9/site-packages/torch/_inductor/runtime/triton_helpers.py":87:0)) -> i1 attributes {noinline = false} {
    %0 = tt.call @torch._inductor.runtime.triton_helpers.promote_to_tensor__fp32__(%arg0) : (f32) -> tensor<1xf32> loc(#loc114)
    %true = arith.constant true loc(#loc115)
    tt.return %true : i1 loc(#loc115)
  ^bb1:  // no predecessors
    %1 = ub.poison : i1 loc(#loc116)
    tt.return %1 : i1 loc(#loc116)
  } loc(#loc113)
  tt.func private @torch._inductor.runtime.triton_helpers.promote_to_tensor__fp32__(%arg0: f32 loc("/mnt/disk1/anaconda3/envs/pqhung/lib/python3.9/site-packages/torch/_inductor/runtime/triton_helpers.py":64:0)) -> tensor<1xf32> attributes {noinline = false} {
    %0 = tt.call @"triton.language.standard.zeros____(0, 0)cconstexpr_1__(1,)cconstexpr_int1_"() : () -> tensor<1xi1> loc(#loc118)
    %1 = arith.uitofp %0 : tensor<1xi1> to tensor<1xf32> loc(#loc119)
    %2 = tt.splat %arg0 : f32 -> tensor<1xf32> loc(#loc119)
    %3 = arith.addf %2, %1 : tensor<1xf32> loc(#loc119)
    tt.return %3 : tensor<1xf32> loc(#loc120)
  ^bb1:  // no predecessors
    %4 = ub.poison : tensor<1xf32> loc(#loc121)
    tt.return %4 : tensor<1xf32> loc(#loc121)
  } loc(#loc117)
  tt.func private @"triton.language.standard.sum__fp32S64_64S__(1,)cconstexpr_1__(2,)cconstexpr_False__(3,)cNone"(%arg0: tensor<64x64xf32> loc("/mnt/disk1/anaconda3/envs/pqhung/lib/python3.9/site-packages/triton/language/standard.py":284:0)) -> tensor<64xf32> attributes {noinline = false} {
    %0 = "tt.reduce"(%arg0) <{axis = 1 : i32}> ({
    ^bb0(%arg1: f32 loc(unknown), %arg2: f32 loc(unknown)):
      %2 = tt.call @triton.language.standard._sum_combine__fp32_fp32__(%arg1, %arg2) : (f32, f32) -> f32 loc(#loc150)
      tt.reduce.return %2 : f32 loc(#loc150)
    }) : (tensor<64x64xf32>) -> tensor<64xf32> loc(#loc150)
    tt.return %0 : tensor<64xf32> loc(#loc151)
  ^bb1:  // no predecessors
    %1 = ub.poison : tensor<64xf32> loc(#loc152)
    tt.return %1 : tensor<64xf32> loc(#loc152)
  } loc(#loc149)
  tt.func private @triton.language.standard._sum_combine__fp32_fp32__(%arg0: f32 loc("/mnt/disk1/anaconda3/envs/pqhung/lib/python3.9/site-packages/triton/language/standard.py":259:0), %arg1: f32 loc("/mnt/disk1/anaconda3/envs/pqhung/lib/python3.9/site-packages/triton/language/standard.py":259:0)) -> f32 attributes {noinline = false} {
    %0 = arith.addf %arg0, %arg1 : f32 loc(#loc154)
    tt.return %0 : f32 loc(#loc155)
  ^bb1:  // no predecessors
    %1 = ub.poison : f32 loc(#loc156)
    tt.return %1 : f32 loc(#loc156)
  } loc(#loc153)
} loc(#loc)
#loc1 = loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/3s/c3s5rpotgkrxj53byxl6iiai4e64ppfdhf7r5r7xy2iceaf5vzca.py":19:13)
#loc2 = loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/3s/c3s5rpotgkrxj53byxl6iiai4e64ppfdhf7r5r7xy2iceaf5vzca.py":20:15)
#loc3 = loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/3s/c3s5rpotgkrxj53byxl6iiai4e64ppfdhf7r5r7xy2iceaf5vzca.py":23:28)
#loc4 = loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/3s/c3s5rpotgkrxj53byxl6iiai4e64ppfdhf7r5r7xy2iceaf5vzca.py":23:33)
#loc5 = loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/3s/c3s5rpotgkrxj53byxl6iiai4e64ppfdhf7r5r7xy2iceaf5vzca.py":24:36)
#loc6 = loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/3s/c3s5rpotgkrxj53byxl6iiai4e64ppfdhf7r5r7xy2iceaf5vzca.py":24:44)
#loc7 = loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/3s/c3s5rpotgkrxj53byxl6iiai4e64ppfdhf7r5r7xy2iceaf5vzca.py":24:23)
#loc8 = loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/3s/c3s5rpotgkrxj53byxl6iiai4e64ppfdhf7r5r7xy2iceaf5vzca.py":25:21)
#loc9 = loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/3s/c3s5rpotgkrxj53byxl6iiai4e64ppfdhf7r5r7xy2iceaf5vzca.py":26:27)
#loc10 = loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/3s/c3s5rpotgkrxj53byxl6iiai4e64ppfdhf7r5r7xy2iceaf5vzca.py":26:37)
#loc11 = loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/3s/c3s5rpotgkrxj53byxl6iiai4e64ppfdhf7r5r7xy2iceaf5vzca.py":29:19)
#loc12 = loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/3s/c3s5rpotgkrxj53byxl6iiai4e64ppfdhf7r5r7xy2iceaf5vzca.py":30:19)
#loc13 = loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/3s/c3s5rpotgkrxj53byxl6iiai4e64ppfdhf7r5r7xy2iceaf5vzca.py":31:47)
#loc14 = loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/3s/c3s5rpotgkrxj53byxl6iiai4e64ppfdhf7r5r7xy2iceaf5vzca.py":32:19)
#loc15 = loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/3s/c3s5rpotgkrxj53byxl6iiai4e64ppfdhf7r5r7xy2iceaf5vzca.py":33:19)
#loc16 = loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/3s/c3s5rpotgkrxj53byxl6iiai4e64ppfdhf7r5r7xy2iceaf5vzca.py":34:60)
#loc17 = loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/3s/c3s5rpotgkrxj53byxl6iiai4e64ppfdhf7r5r7xy2iceaf5vzca.py":35:46)
#loc18 = loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/3s/c3s5rpotgkrxj53byxl6iiai4e64ppfdhf7r5r7xy2iceaf5vzca.py":36:40)
#loc19 = loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/3s/c3s5rpotgkrxj53byxl6iiai4e64ppfdhf7r5r7xy2iceaf5vzca.py":37:31)
#loc20 = loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/3s/c3s5rpotgkrxj53byxl6iiai4e64ppfdhf7r5r7xy2iceaf5vzca.py":38:29)
#loc21 = loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/3s/c3s5rpotgkrxj53byxl6iiai4e64ppfdhf7r5r7xy2iceaf5vzca.py":42:45)
#loc22 = loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/3s/c3s5rpotgkrxj53byxl6iiai4e64ppfdhf7r5r7xy2iceaf5vzca.py":42:41)
#loc23 = loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/3s/c3s5rpotgkrxj53byxl6iiai4e64ppfdhf7r5r7xy2iceaf5vzca.py":42:34)
#loc24 = loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/3s/c3s5rpotgkrxj53byxl6iiai4e64ppfdhf7r5r7xy2iceaf5vzca.py":42:60)
#loc25 = loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/3s/c3s5rpotgkrxj53byxl6iiai4e64ppfdhf7r5r7xy2iceaf5vzca.py":42:50)
#loc26 = loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/3s/c3s5rpotgkrxj53byxl6iiai4e64ppfdhf7r5r7xy2iceaf5vzca.py":43:49)
#loc27 = loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/3s/c3s5rpotgkrxj53byxl6iiai4e64ppfdhf7r5r7xy2iceaf5vzca.py":43:45)
#loc28 = loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/3s/c3s5rpotgkrxj53byxl6iiai4e64ppfdhf7r5r7xy2iceaf5vzca.py":43:61)
#loc29 = loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/3s/c3s5rpotgkrxj53byxl6iiai4e64ppfdhf7r5r7xy2iceaf5vzca.py":43:54)
#loc30 = loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/3s/c3s5rpotgkrxj53byxl6iiai4e64ppfdhf7r5r7xy2iceaf5vzca.py":43:38)
#loc31 = loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/3s/c3s5rpotgkrxj53byxl6iiai4e64ppfdhf7r5r7xy2iceaf5vzca.py":43:76)
#loc32 = loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/3s/c3s5rpotgkrxj53byxl6iiai4e64ppfdhf7r5r7xy2iceaf5vzca.py":43:66)
#loc33 = loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/3s/c3s5rpotgkrxj53byxl6iiai4e64ppfdhf7r5r7xy2iceaf5vzca.py":44:22)
#loc34 = loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/3s/c3s5rpotgkrxj53byxl6iiai4e64ppfdhf7r5r7xy2iceaf5vzca.py":45:15)
#loc35 = loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/3s/c3s5rpotgkrxj53byxl6iiai4e64ppfdhf7r5r7xy2iceaf5vzca.py":46:23)
#loc36 = loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/3s/c3s5rpotgkrxj53byxl6iiai4e64ppfdhf7r5r7xy2iceaf5vzca.py":47:23)
#loc37 = loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/3s/c3s5rpotgkrxj53byxl6iiai4e64ppfdhf7r5r7xy2iceaf5vzca.py":48:23)
#loc38 = loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/3s/c3s5rpotgkrxj53byxl6iiai4e64ppfdhf7r5r7xy2iceaf5vzca.py":49:24)
#loc39 = loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/3s/c3s5rpotgkrxj53byxl6iiai4e64ppfdhf7r5r7xy2iceaf5vzca.py":51:24)
#loc40 = loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/3s/c3s5rpotgkrxj53byxl6iiai4e64ppfdhf7r5r7xy2iceaf5vzca.py":52:35)
#loc41 = loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/3s/c3s5rpotgkrxj53byxl6iiai4e64ppfdhf7r5r7xy2iceaf5vzca.py":52:49)
#loc42 = loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/3s/c3s5rpotgkrxj53byxl6iiai4e64ppfdhf7r5r7xy2iceaf5vzca.py":56:43)
#loc43 = loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/3s/c3s5rpotgkrxj53byxl6iiai4e64ppfdhf7r5r7xy2iceaf5vzca.py":59:40)
#loc44 = loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/3s/c3s5rpotgkrxj53byxl6iiai4e64ppfdhf7r5r7xy2iceaf5vzca.py":59:64)
#loc45 = loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/3s/c3s5rpotgkrxj53byxl6iiai4e64ppfdhf7r5r7xy2iceaf5vzca.py":60:40)
#loc46 = loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/3s/c3s5rpotgkrxj53byxl6iiai4e64ppfdhf7r5r7xy2iceaf5vzca.py":60:64)
#loc47 = loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/3s/c3s5rpotgkrxj53byxl6iiai4e64ppfdhf7r5r7xy2iceaf5vzca.py":60:8)
#loc48 = loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/3s/c3s5rpotgkrxj53byxl6iiai4e64ppfdhf7r5r7xy2iceaf5vzca.py":61:39)
#loc49 = loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/3s/c3s5rpotgkrxj53byxl6iiai4e64ppfdhf7r5r7xy2iceaf5vzca.py":61:49)
#loc50 = loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/3s/c3s5rpotgkrxj53byxl6iiai4e64ppfdhf7r5r7xy2iceaf5vzca.py":61:52)
#loc51 = loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/3s/c3s5rpotgkrxj53byxl6iiai4e64ppfdhf7r5r7xy2iceaf5vzca.py":61:64)
#loc52 = loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/3s/c3s5rpotgkrxj53byxl6iiai4e64ppfdhf7r5r7xy2iceaf5vzca.py":64:35)
#loc53 = loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/3s/c3s5rpotgkrxj53byxl6iiai4e64ppfdhf7r5r7xy2iceaf5vzca.py":65:18)
#loc54 = loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/3s/c3s5rpotgkrxj53byxl6iiai4e64ppfdhf7r5r7xy2iceaf5vzca.py":66:18)
#loc55 = loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/3s/c3s5rpotgkrxj53byxl6iiai4e64ppfdhf7r5r7xy2iceaf5vzca.py":69:40)
#loc56 = loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/3s/c3s5rpotgkrxj53byxl6iiai4e64ppfdhf7r5r7xy2iceaf5vzca.py":70:31)
#loc57 = loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/3s/c3s5rpotgkrxj53byxl6iiai4e64ppfdhf7r5r7xy2iceaf5vzca.py":71:29)
#loc58 = loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/3s/c3s5rpotgkrxj53byxl6iiai4e64ppfdhf7r5r7xy2iceaf5vzca.py":75:46)
#loc59 = loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/3s/c3s5rpotgkrxj53byxl6iiai4e64ppfdhf7r5r7xy2iceaf5vzca.py":75:42)
#loc60 = loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/3s/c3s5rpotgkrxj53byxl6iiai4e64ppfdhf7r5r7xy2iceaf5vzca.py":75:35)
#loc61 = loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/3s/c3s5rpotgkrxj53byxl6iiai4e64ppfdhf7r5r7xy2iceaf5vzca.py":75:61)
#loc62 = loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/3s/c3s5rpotgkrxj53byxl6iiai4e64ppfdhf7r5r7xy2iceaf5vzca.py":75:51)
#loc63 = loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/3s/c3s5rpotgkrxj53byxl6iiai4e64ppfdhf7r5r7xy2iceaf5vzca.py":76:50)
#loc64 = loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/3s/c3s5rpotgkrxj53byxl6iiai4e64ppfdhf7r5r7xy2iceaf5vzca.py":76:46)
#loc65 = loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/3s/c3s5rpotgkrxj53byxl6iiai4e64ppfdhf7r5r7xy2iceaf5vzca.py":76:62)
#loc66 = loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/3s/c3s5rpotgkrxj53byxl6iiai4e64ppfdhf7r5r7xy2iceaf5vzca.py":76:55)
#loc67 = loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/3s/c3s5rpotgkrxj53byxl6iiai4e64ppfdhf7r5r7xy2iceaf5vzca.py":76:39)
#loc68 = loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/3s/c3s5rpotgkrxj53byxl6iiai4e64ppfdhf7r5r7xy2iceaf5vzca.py":76:77)
#loc69 = loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/3s/c3s5rpotgkrxj53byxl6iiai4e64ppfdhf7r5r7xy2iceaf5vzca.py":76:67)
#loc70 = loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/3s/c3s5rpotgkrxj53byxl6iiai4e64ppfdhf7r5r7xy2iceaf5vzca.py":77:24)
#loc71 = loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/3s/c3s5rpotgkrxj53byxl6iiai4e64ppfdhf7r5r7xy2iceaf5vzca.py":78:24)
#loc72 = loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/3s/c3s5rpotgkrxj53byxl6iiai4e64ppfdhf7r5r7xy2iceaf5vzca.py":79:24)
#loc73 = loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/3s/c3s5rpotgkrxj53byxl6iiai4e64ppfdhf7r5r7xy2iceaf5vzca.py":80:28)
#loc74 = loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/3s/c3s5rpotgkrxj53byxl6iiai4e64ppfdhf7r5r7xy2iceaf5vzca.py":81:25)
#loc75 = loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/3s/c3s5rpotgkrxj53byxl6iiai4e64ppfdhf7r5r7xy2iceaf5vzca.py":82:16)
#loc76 = loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/3s/c3s5rpotgkrxj53byxl6iiai4e64ppfdhf7r5r7xy2iceaf5vzca.py":83:39)
#loc77 = loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/3s/c3s5rpotgkrxj53byxl6iiai4e64ppfdhf7r5r7xy2iceaf5vzca.py":84:43)
#loc78 = loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/3s/c3s5rpotgkrxj53byxl6iiai4e64ppfdhf7r5r7xy2iceaf5vzca.py":84:39)
#loc79 = loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/3s/c3s5rpotgkrxj53byxl6iiai4e64ppfdhf7r5r7xy2iceaf5vzca.py":84:55)
#loc80 = loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/3s/c3s5rpotgkrxj53byxl6iiai4e64ppfdhf7r5r7xy2iceaf5vzca.py":84:48)
#loc81 = loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/3s/c3s5rpotgkrxj53byxl6iiai4e64ppfdhf7r5r7xy2iceaf5vzca.py":84:32)
#loc82 = loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/3s/c3s5rpotgkrxj53byxl6iiai4e64ppfdhf7r5r7xy2iceaf5vzca.py":84:77)
#loc83 = loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/3s/c3s5rpotgkrxj53byxl6iiai4e64ppfdhf7r5r7xy2iceaf5vzca.py":84:67)
#loc84 = loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/3s/c3s5rpotgkrxj53byxl6iiai4e64ppfdhf7r5r7xy2iceaf5vzca.py":69:4)
#loc85 = loc("/mnt/disk1/anaconda3/envs/pqhung/lib/python3.9/site-packages/triton/language/standard.py":117:0)
#loc86 = loc("/mnt/disk1/anaconda3/envs/pqhung/lib/python3.9/site-packages/triton/language/standard.py":126:31)
#loc87 = loc("/mnt/disk1/anaconda3/envs/pqhung/lib/python3.9/site-packages/triton/language/standard.py":126:11)
#loc88 = loc("/mnt/disk1/anaconda3/envs/pqhung/lib/python3.9/site-packages/triton/language/standard.py":126:4)
#loc90 = loc("/mnt/disk1/anaconda3/envs/pqhung/lib/python3.9/site-packages/torch/_inductor/runtime/triton_helpers.py":194:31)
#loc91 = loc("/mnt/disk1/anaconda3/envs/pqhung/lib/python3.9/site-packages/torch/_inductor/runtime/triton_helpers.py":197:19)
#loc92 = loc("/mnt/disk1/anaconda3/envs/pqhung/lib/python3.9/site-packages/torch/_inductor/runtime/triton_helpers.py":197:53)
#loc93 = loc("/mnt/disk1/anaconda3/envs/pqhung/lib/python3.9/site-packages/torch/_inductor/runtime/triton_helpers.py":197:62)
#loc94 = loc("/mnt/disk1/anaconda3/envs/pqhung/lib/python3.9/site-packages/torch/_inductor/runtime/triton_helpers.py":197:39)
#loc95 = loc("/mnt/disk1/anaconda3/envs/pqhung/lib/python3.9/site-packages/torch/_inductor/runtime/triton_helpers.py":200:19)
#loc96 = loc("/mnt/disk1/anaconda3/envs/pqhung/lib/python3.9/site-packages/torch/_inductor/runtime/triton_helpers.py":200:53)
#loc97 = loc("/mnt/disk1/anaconda3/envs/pqhung/lib/python3.9/site-packages/torch/_inductor/runtime/triton_helpers.py":200:62)
#loc98 = loc("/mnt/disk1/anaconda3/envs/pqhung/lib/python3.9/site-packages/torch/_inductor/runtime/triton_helpers.py":200:39)
#loc99 = loc("/mnt/disk1/anaconda3/envs/pqhung/lib/python3.9/site-packages/torch/_inductor/runtime/triton_helpers.py":206:24)
#loc100 = loc("/mnt/disk1/anaconda3/envs/pqhung/lib/python3.9/site-packages/torch/_inductor/runtime/triton_helpers.py":206:36)
#loc101 = loc("/mnt/disk1/anaconda3/envs/pqhung/lib/python3.9/site-packages/torch/_inductor/runtime/triton_helpers.py":207:11)
#loc102 = loc("/mnt/disk1/anaconda3/envs/pqhung/lib/python3.9/site-packages/torch/_inductor/runtime/triton_helpers.py":207:4)
#loc104 = loc("/mnt/disk1/anaconda3/envs/pqhung/lib/python3.9/site-packages/torch/_inductor/runtime/triton_helpers.py":111:15)
#loc105 = loc("/mnt/disk1/anaconda3/envs/pqhung/lib/python3.9/site-packages/torch/_inductor/runtime/triton_helpers.py":112:19)
#loc106 = loc("/mnt/disk1/anaconda3/envs/pqhung/lib/python3.9/site-packages/torch/_inductor/runtime/triton_helpers.py":112:7)
#loc107 = loc("/mnt/disk1/anaconda3/envs/pqhung/lib/python3.9/site-packages/torch/_inductor/runtime/triton_helpers.py":113:21)
#loc108 = loc("/mnt/disk1/anaconda3/envs/pqhung/lib/python3.9/site-packages/torch/_inductor/runtime/triton_helpers.py":113:16)
#loc110 = loc("/mnt/disk1/anaconda3/envs/pqhung/lib/python3.9/site-packages/torch/_inductor/runtime/triton_helpers.py":114:29)
#loc111 = loc("/mnt/disk1/anaconda3/envs/pqhung/lib/python3.9/site-packages/torch/_inductor/runtime/triton_helpers.py":114:11)
#loc112 = loc("/mnt/disk1/anaconda3/envs/pqhung/lib/python3.9/site-packages/torch/_inductor/runtime/triton_helpers.py":114:4)
#loc114 = loc("/mnt/disk1/anaconda3/envs/pqhung/lib/python3.9/site-packages/torch/_inductor/runtime/triton_helpers.py":88:29)
#loc115 = loc("/mnt/disk1/anaconda3/envs/pqhung/lib/python3.9/site-packages/torch/_inductor/runtime/triton_helpers.py":88:11)
#loc116 = loc("/mnt/disk1/anaconda3/envs/pqhung/lib/python3.9/site-packages/torch/_inductor/runtime/triton_helpers.py":88:4)
#loc118 = loc("/mnt/disk1/anaconda3/envs/pqhung/lib/python3.9/site-packages/torch/_inductor/runtime/triton_helpers.py":66:30)
#loc119 = loc("/mnt/disk1/anaconda3/envs/pqhung/lib/python3.9/site-packages/torch/_inductor/runtime/triton_helpers.py":66:15)
#loc120 = loc("/mnt/disk1/anaconda3/envs/pqhung/lib/python3.9/site-packages/torch/_inductor/runtime/triton_helpers.py":66:11)
#loc121 = loc("/mnt/disk1/anaconda3/envs/pqhung/lib/python3.9/site-packages/torch/_inductor/runtime/triton_helpers.py":66:4)
#loc123 = loc("/mnt/disk1/anaconda3/envs/pqhung/lib/python3.9/site-packages/torch/_inductor/runtime/triton_helpers.py":174:24)
#loc124 = loc("/mnt/disk1/anaconda3/envs/pqhung/lib/python3.9/site-packages/torch/_inductor/runtime/triton_helpers.py":174:15)
#loc125 = loc("/mnt/disk1/anaconda3/envs/pqhung/lib/python3.9/site-packages/torch/_inductor/runtime/triton_helpers.py":171:4)
#loc127 = loc("/mnt/disk1/anaconda3/envs/pqhung/lib/python3.9/site-packages/torch/_inductor/runtime/triton_helpers.py":266:29)
#loc128 = loc("/mnt/disk1/anaconda3/envs/pqhung/lib/python3.9/site-packages/torch/_inductor/runtime/triton_helpers.py":266:11)
#loc129 = loc("/mnt/disk1/anaconda3/envs/pqhung/lib/python3.9/site-packages/torch/_inductor/runtime/triton_helpers.py":266:4)
#loc131 = loc("/mnt/disk1/anaconda3/envs/pqhung/lib/python3.9/site-packages/torch/_inductor/runtime/triton_helpers.py":261:15)
#loc132 = loc("/mnt/disk1/anaconda3/envs/pqhung/lib/python3.9/site-packages/torch/_inductor/runtime/triton_helpers.py":261:11)
#loc133 = loc("/mnt/disk1/anaconda3/envs/pqhung/lib/python3.9/site-packages/torch/_inductor/runtime/triton_helpers.py":261:4)
#loc135 = loc("/mnt/disk1/anaconda3/envs/pqhung/lib/python3.9/site-packages/torch/_inductor/runtime/triton_helpers.py":179:28)
#loc136 = loc("/mnt/disk1/anaconda3/envs/pqhung/lib/python3.9/site-packages/torch/_inductor/runtime/triton_helpers.py":180:30)
#loc137 = loc("/mnt/disk1/anaconda3/envs/pqhung/lib/python3.9/site-packages/torch/_inductor/runtime/triton_helpers.py":181:40)
#loc138 = loc("/mnt/disk1/anaconda3/envs/pqhung/lib/python3.9/site-packages/torch/_inductor/runtime/triton_helpers.py":181:68)
#loc139 = loc("/mnt/disk1/anaconda3/envs/pqhung/lib/python3.9/site-packages/torch/_inductor/runtime/triton_helpers.py":181:58)
#loc140 = loc("/mnt/disk1/anaconda3/envs/pqhung/lib/python3.9/site-packages/torch/_inductor/runtime/triton_helpers.py":182:42)
#loc141 = loc("/mnt/disk1/anaconda3/envs/pqhung/lib/python3.9/site-packages/torch/_inductor/runtime/triton_helpers.py":182:31)
#loc142 = loc("/mnt/disk1/anaconda3/envs/pqhung/lib/python3.9/site-packages/torch/_inductor/runtime/triton_helpers.py":182:58)
#loc143 = loc("/mnt/disk1/anaconda3/envs/pqhung/lib/python3.9/site-packages/torch/_inductor/runtime/triton_helpers.py":183:11)
#loc144 = loc("/mnt/disk1/anaconda3/envs/pqhung/lib/python3.9/site-packages/torch/_inductor/runtime/triton_helpers.py":183:4)
#loc146 = loc("/mnt/disk1/anaconda3/envs/pqhung/lib/python3.9/site-packages/torch/_inductor/runtime/triton_helpers.py":124:29)
#loc147 = loc("/mnt/disk1/anaconda3/envs/pqhung/lib/python3.9/site-packages/torch/_inductor/runtime/triton_helpers.py":124:11)
#loc148 = loc("/mnt/disk1/anaconda3/envs/pqhung/lib/python3.9/site-packages/torch/_inductor/runtime/triton_helpers.py":124:4)
#loc150 = loc("/mnt/disk1/anaconda3/envs/pqhung/lib/python3.9/site-packages/triton/language/standard.py":290:36)
#loc151 = loc("/mnt/disk1/anaconda3/envs/pqhung/lib/python3.9/site-packages/triton/language/standard.py":290:11)
#loc152 = loc("/mnt/disk1/anaconda3/envs/pqhung/lib/python3.9/site-packages/triton/language/standard.py":290:4)
#loc154 = loc("/mnt/disk1/anaconda3/envs/pqhung/lib/python3.9/site-packages/triton/language/standard.py":260:15)
#loc155 = loc("/mnt/disk1/anaconda3/envs/pqhung/lib/python3.9/site-packages/triton/language/standard.py":260:11)
#loc156 = loc("/mnt/disk1/anaconda3/envs/pqhung/lib/python3.9/site-packages/triton/language/standard.py":260:4)

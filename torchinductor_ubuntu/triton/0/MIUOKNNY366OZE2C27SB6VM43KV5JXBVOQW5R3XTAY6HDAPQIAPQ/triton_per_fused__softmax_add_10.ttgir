#blocked = #ttg.blocked<{sizePerThread = [1, 2], threadsPerWarp = [1, 32], warpsPerCTA = [4, 1], order = [1, 0]}>
#loc = loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/jg/cjgujg2s3lvpsqkrlzuzbcldofxrz3zop22m6skn526gjzfe3ddl.py":18:0)
#loc1 = loc(unknown)
#loc25 = loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/jg/cjgujg2s3lvpsqkrlzuzbcldofxrz3zop22m6skn526gjzfe3ddl.py":42:37)
#loc35 = loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/jg/cjgujg2s3lvpsqkrlzuzbcldofxrz3zop22m6skn526gjzfe3ddl.py":47:26)
#loc42 = loc(callsite(#loc1 at #loc25))
#loc44 = loc(callsite(#loc1 at #loc35))
module attributes {"ttg.num-ctas" = 1 : i32, "ttg.num-warps" = 4 : i32, ttg.target = "cuda:86", "ttg.threads-per-warp" = 32 : i32} {
  tt.func public @triton_per_fused__softmax_add_10(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/jg/cjgujg2s3lvpsqkrlzuzbcldofxrz3zop22m6skn526gjzfe3ddl.py":18:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/jg/cjgujg2s3lvpsqkrlzuzbcldofxrz3zop22m6skn526gjzfe3ddl.py":18:0), %arg2: i32 {tt.divisibility = 16 : i32} loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/jg/cjgujg2s3lvpsqkrlzuzbcldofxrz3zop22m6skn526gjzfe3ddl.py":18:0), %arg3: i32 loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/jg/cjgujg2s3lvpsqkrlzuzbcldofxrz3zop22m6skn526gjzfe3ddl.py":18:0)) attributes {noinline = false} {
    %cst = arith.constant dense<2528> : tensor<8x1xi32, #blocked> loc(#loc1)
    %cst_0 = arith.constant dense<50> : tensor<8x1xi32, #blocked> loc(#loc1)
    %cst_1 = arith.constant dense<50> : tensor<1x64xi32, #blocked> loc(#loc1)
    %cst_2 = arith.constant dense<400> : tensor<8x1xi32, #blocked> loc(#loc1)
    %c8_i32 = arith.constant 8 : i32 loc(#loc1)
    %cst_3 = arith.constant dense<0xFF800000> : tensor<8x64xf32, #blocked> loc(#loc1)
    %cst_4 = arith.constant dense<0.000000e+00> : tensor<8x64xf32, #blocked> loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c8_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 8 : i32, start = 0 : i32} : tensor<8xi32, #ttg.slice<{dim = 1, parent = #blocked}>> loc(#loc4)
    %3 = tt.expand_dims %2 {axis = 1 : i32} : tensor<8xi32, #ttg.slice<{dim = 1, parent = #blocked}>> -> tensor<8x1xi32, #blocked> loc(#loc4)
    %4 = tt.splat %1 : i32 -> tensor<8x1xi32, #blocked> loc(#loc5)
    %5 = arith.addi %4, %3 : tensor<8x1xi32, #blocked> loc(#loc5)
    %6 = arith.cmpi slt, %5, %cst_2 : tensor<8x1xi32, #blocked> loc(#loc6)
    %7 = tt.make_range {end = 64 : i32, start = 0 : i32} : tensor<64xi32, #ttg.slice<{dim = 0, parent = #blocked}>> loc(#loc7)
    %8 = tt.expand_dims %7 {axis = 0 : i32} : tensor<64xi32, #ttg.slice<{dim = 0, parent = #blocked}>> -> tensor<1x64xi32, #blocked> loc(#loc7)
    %9 = arith.cmpi slt, %8, %cst_1 : tensor<1x64xi32, #blocked> loc(#loc8)
    %10 = arith.remsi %5, %cst_0 : tensor<8x1xi32, #blocked> loc(#loc9)
    %11 = arith.divsi %5, %cst_0 : tensor<8x1xi32, #blocked> loc(#loc10)
    %12 = arith.muli %5, %cst_0 : tensor<8x1xi32, #blocked> loc(#loc11)
    %13 = tt.broadcast %8 : tensor<1x64xi32, #blocked> -> tensor<8x64xi32, #blocked> loc(#loc12)
    %14 = tt.broadcast %12 : tensor<8x1xi32, #blocked> -> tensor<8x64xi32, #blocked> loc(#loc12)
    %15 = arith.addi %13, %14 : tensor<8x64xi32, #blocked> loc(#loc12)
    %16 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<8x64x!tt.ptr<f32>, #blocked> loc(#loc13)
    %17 = tt.addptr %16, %15 : tensor<8x64x!tt.ptr<f32>, #blocked>, tensor<8x64xi32, #blocked> loc(#loc13)
    %18 = tt.broadcast %9 : tensor<1x64xi1, #blocked> -> tensor<8x64xi1, #blocked> loc(#loc14)
    %19 = tt.broadcast %6 : tensor<8x1xi1, #blocked> -> tensor<8x64xi1, #blocked> loc(#loc14)
    %20 = arith.andi %18, %19 : tensor<8x64xi1, #blocked> loc(#loc14)
    %21 = tt.load %17, %20, %cst_4 : tensor<8x64x!tt.ptr<f32>, #blocked> loc(#loc15)
    %22 = arith.muli %10, %cst_0 : tensor<8x1xi32, #blocked> loc(#loc16)
    %23 = tt.broadcast %22 : tensor<8x1xi32, #blocked> -> tensor<8x64xi32, #blocked> loc(#loc17)
    %24 = arith.addi %13, %23 : tensor<8x64xi32, #blocked> loc(#loc17)
    %25 = arith.muli %11, %cst : tensor<8x1xi32, #blocked> loc(#loc18)
    %26 = tt.broadcast %25 : tensor<8x1xi32, #blocked> -> tensor<8x64xi32, #blocked> loc(#loc19)
    %27 = arith.addi %24, %26 : tensor<8x64xi32, #blocked> loc(#loc19)
    %28 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<8x64x!tt.ptr<f32>, #blocked> loc(#loc20)
    %29 = tt.addptr %28, %27 : tensor<8x64x!tt.ptr<f32>, #blocked>, tensor<8x64xi32, #blocked> loc(#loc20)
    %30 = tt.load %29, %20, %cst_4 : tensor<8x64x!tt.ptr<f32>, #blocked> loc(#loc21)
    %31 = arith.addf %21, %30 : tensor<8x64xf32, #blocked> loc(#loc22)
    %32 = arith.select %20, %31, %cst_3 : tensor<8x64xi1, #blocked>, tensor<8x64xf32, #blocked> loc(#loc23)
    %33 = "tt.reduce"(%32) <{axis = 1 : i32}> ({
    ^bb0(%arg4: f32 loc(callsite(#loc1 at #loc25)), %arg5: f32 loc(callsite(#loc1 at #loc25))):
      %43 = arith.cmpf ogt, %arg4, %arg5 : f32 loc(#loc45)
      %44 = arith.cmpf une, %arg4, %arg4 : f32 loc(#loc46)
      %45 = arith.ori %43, %44 : i1 loc(#loc47)
      %46 = arith.select %45, %arg4, %arg5 : f32 loc(#loc48)
      tt.reduce.return %46 : f32 loc(#loc41)
    }) : (tensor<8x64xf32, #blocked>) -> tensor<8xf32, #ttg.slice<{dim = 1, parent = #blocked}>> loc(#loc41)
    %34 = tt.expand_dims %33 {axis = 1 : i32} : tensor<8xf32, #ttg.slice<{dim = 1, parent = #blocked}>> -> tensor<8x1xf32, #blocked> loc(#loc30)
    %35 = tt.broadcast %34 : tensor<8x1xf32, #blocked> -> tensor<8x64xf32, #blocked> loc(#loc31)
    %36 = arith.subf %31, %35 : tensor<8x64xf32, #blocked> loc(#loc31)
    %37 = math.exp %36 : tensor<8x64xf32, #blocked> loc(#loc32)
    %38 = arith.select %20, %37, %cst_4 : tensor<8x64xi1, #blocked>, tensor<8x64xf32, #blocked> loc(#loc33)
    %39 = "tt.reduce"(%38) <{axis = 1 : i32}> ({
    ^bb0(%arg4: f32 loc(callsite(#loc1 at #loc35)), %arg5: f32 loc(callsite(#loc1 at #loc35))):
      %43 = arith.addf %arg4, %arg5 : f32 loc(#loc49)
      tt.reduce.return %43 : f32 loc(#loc43)
    }) : (tensor<8x64xf32, #blocked>) -> tensor<8xf32, #ttg.slice<{dim = 1, parent = #blocked}>> loc(#loc43)
    %40 = tt.expand_dims %39 {axis = 1 : i32} : tensor<8xf32, #ttg.slice<{dim = 1, parent = #blocked}>> -> tensor<8x1xf32, #blocked> loc(#loc37)
    %41 = tt.broadcast %40 : tensor<8x1xf32, #blocked> -> tensor<8x64xf32, #blocked> loc(#loc38)
    %42 = arith.divf %37, %41 : tensor<8x64xf32, #blocked> loc(#loc38)
    tt.store %29, %42, %20 : tensor<8x64x!tt.ptr<f32>, #blocked> loc(#loc39)
    tt.return loc(#loc40)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/jg/cjgujg2s3lvpsqkrlzuzbcldofxrz3zop22m6skn526gjzfe3ddl.py":24:28)
#loc3 = loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/jg/cjgujg2s3lvpsqkrlzuzbcldofxrz3zop22m6skn526gjzfe3ddl.py":24:33)
#loc4 = loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/jg/cjgujg2s3lvpsqkrlzuzbcldofxrz3zop22m6skn526gjzfe3ddl.py":25:44)
#loc5 = loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/jg/cjgujg2s3lvpsqkrlzuzbcldofxrz3zop22m6skn526gjzfe3ddl.py":25:23)
#loc6 = loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/jg/cjgujg2s3lvpsqkrlzuzbcldofxrz3zop22m6skn526gjzfe3ddl.py":26:21)
#loc7 = loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/jg/cjgujg2s3lvpsqkrlzuzbcldofxrz3zop22m6skn526gjzfe3ddl.py":27:38)
#loc8 = loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/jg/cjgujg2s3lvpsqkrlzuzbcldofxrz3zop22m6skn526gjzfe3ddl.py":29:25)
#loc9 = loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/jg/cjgujg2s3lvpsqkrlzuzbcldofxrz3zop22m6skn526gjzfe3ddl.py":34:19)
#loc10 = loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/jg/cjgujg2s3lvpsqkrlzuzbcldofxrz3zop22m6skn526gjzfe3ddl.py":35:19)
#loc11 = loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/jg/cjgujg2s3lvpsqkrlzuzbcldofxrz3zop22m6skn526gjzfe3ddl.py":36:40)
#loc12 = loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/jg/cjgujg2s3lvpsqkrlzuzbcldofxrz3zop22m6skn526gjzfe3ddl.py":36:37)
#loc13 = loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/jg/cjgujg2s3lvpsqkrlzuzbcldofxrz3zop22m6skn526gjzfe3ddl.py":36:30)
#loc14 = loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/jg/cjgujg2s3lvpsqkrlzuzbcldofxrz3zop22m6skn526gjzfe3ddl.py":36:55)
#loc15 = loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/jg/cjgujg2s3lvpsqkrlzuzbcldofxrz3zop22m6skn526gjzfe3ddl.py":36:45)
#loc16 = loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/jg/cjgujg2s3lvpsqkrlzuzbcldofxrz3zop22m6skn526gjzfe3ddl.py":37:44)
#loc17 = loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/jg/cjgujg2s3lvpsqkrlzuzbcldofxrz3zop22m6skn526gjzfe3ddl.py":37:41)
#loc18 = loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/jg/cjgujg2s3lvpsqkrlzuzbcldofxrz3zop22m6skn526gjzfe3ddl.py":37:54)
#loc19 = loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/jg/cjgujg2s3lvpsqkrlzuzbcldofxrz3zop22m6skn526gjzfe3ddl.py":37:49)
#loc20 = loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/jg/cjgujg2s3lvpsqkrlzuzbcldofxrz3zop22m6skn526gjzfe3ddl.py":37:34)
#loc21 = loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/jg/cjgujg2s3lvpsqkrlzuzbcldofxrz3zop22m6skn526gjzfe3ddl.py":37:59)
#loc22 = loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/jg/cjgujg2s3lvpsqkrlzuzbcldofxrz3zop22m6skn526gjzfe3ddl.py":38:18)
#loc23 = loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/jg/cjgujg2s3lvpsqkrlzuzbcldofxrz3zop22m6skn526gjzfe3ddl.py":41:43)
#loc24 = loc("/mnt/disk1/anaconda3/envs/pqhung/lib/python3.9/site-packages/torch/_inductor/runtime/triton_helpers.py":124:29)
#loc26 = loc("/mnt/disk1/anaconda3/envs/pqhung/lib/python3.9/site-packages/torch/_inductor/runtime/triton_helpers.py":111:15)
#loc27 = loc("/mnt/disk1/anaconda3/envs/pqhung/lib/python3.9/site-packages/torch/_inductor/runtime/triton_helpers.py":113:21)
#loc28 = loc("/mnt/disk1/anaconda3/envs/pqhung/lib/python3.9/site-packages/torch/_inductor/runtime/triton_helpers.py":113:16)
#loc29 = loc("/mnt/disk1/anaconda3/envs/pqhung/lib/python3.9/site-packages/torch/_inductor/runtime/triton_helpers.py":114:29)
#loc30 = loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/jg/cjgujg2s3lvpsqkrlzuzbcldofxrz3zop22m6skn526gjzfe3ddl.py":42:40)
#loc31 = loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/jg/cjgujg2s3lvpsqkrlzuzbcldofxrz3zop22m6skn526gjzfe3ddl.py":43:18)
#loc32 = loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/jg/cjgujg2s3lvpsqkrlzuzbcldofxrz3zop22m6skn526gjzfe3ddl.py":44:24)
#loc33 = loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/jg/cjgujg2s3lvpsqkrlzuzbcldofxrz3zop22m6skn526gjzfe3ddl.py":46:45)
#loc34 = loc("/mnt/disk1/anaconda3/envs/pqhung/lib/python3.9/site-packages/triton/language/standard.py":290:36)
#loc36 = loc("/mnt/disk1/anaconda3/envs/pqhung/lib/python3.9/site-packages/triton/language/standard.py":260:15)
#loc37 = loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/jg/cjgujg2s3lvpsqkrlzuzbcldofxrz3zop22m6skn526gjzfe3ddl.py":47:29)
#loc38 = loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/jg/cjgujg2s3lvpsqkrlzuzbcldofxrz3zop22m6skn526gjzfe3ddl.py":50:21)
#loc39 = loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/jg/cjgujg2s3lvpsqkrlzuzbcldofxrz3zop22m6skn526gjzfe3ddl.py":51:60)
#loc40 = loc("/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/jg/cjgujg2s3lvpsqkrlzuzbcldofxrz3zop22m6skn526gjzfe3ddl.py":51:4)
#loc41 = loc(callsite(#loc24 at #loc25))
#loc43 = loc(callsite(#loc34 at #loc35))
#loc45 = loc(callsite(#loc26 at #loc41))
#loc46 = loc(callsite(#loc27 at #loc41))
#loc47 = loc(callsite(#loc28 at #loc41))
#loc48 = loc(callsite(#loc29 at #loc41))
#loc49 = loc(callsite(#loc36 at #loc43))

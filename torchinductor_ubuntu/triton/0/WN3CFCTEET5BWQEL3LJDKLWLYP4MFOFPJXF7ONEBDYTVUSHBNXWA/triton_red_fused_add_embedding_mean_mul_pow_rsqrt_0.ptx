//
// Generated by LLVM NVPTX Back-End
//

.version 8.7
.target sm_86
.address_size 64

	// .globl	triton_red_fused_add_embedding_mean_mul_pow_rsqrt_0 // -- Begin function triton_red_fused_add_embedding_mean_mul_pow_rsqrt_0
.extern .func __assertfail
(
	.param .b64 __assertfail_param_0,
	.param .b64 __assertfail_param_1,
	.param .b32 __assertfail_param_2,
	.param .b64 __assertfail_param_3,
	.param .b64 __assertfail_param_4
)
.noreturn;
.global .align 1 .b8 assertFunc_0[8] = {117, 110, 107, 110, 111, 119, 110};
.global .align 1 .b8 assertFile_0[121] = {47, 109, 110, 116, 47, 100, 105, 115, 107, 49, 47, 107, 104, 105, 101, 109, 116, 116, 47, 117, 110, 105, 118, 101, 114, 115, 97, 108, 45, 111, 102, 102, 108, 105, 110, 101, 45, 98, 98, 111, 47, 116, 111, 114, 99, 104, 105, 110, 100, 117, 99, 116, 111, 114, 95, 117, 98, 117, 110, 116, 117, 47, 107, 122, 47, 99, 107, 122, 113, 105, 55, 120, 50, 97, 116, 52, 109, 51, 106, 120, 115, 54, 122, 100, 99, 52, 54, 116, 52, 55, 116, 54, 108, 119, 54, 110, 109, 108, 104, 110, 110, 50, 114, 103, 54, 115, 122, 101, 118, 52, 119, 105, 112, 118, 115, 108, 98, 46, 112, 121};
.global .align 1 .b8 assertMessage_0[39] = {105, 110, 100, 101, 120, 32, 111, 117, 116, 32, 111, 102, 32, 98, 111, 117, 110, 100, 115, 58, 32, 48, 32, 60, 61, 32, 116, 109, 112, 52, 32, 60, 32, 51, 50, 49, 50, 56};
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
                                        // @triton_red_fused_add_embedding_mean_mul_pow_rsqrt_0
.visible .entry triton_red_fused_add_embedding_mean_mul_pow_rsqrt_0(
	.param .u64 .ptr .global .align 1 triton_red_fused_add_embedding_mean_mul_pow_rsqrt_0_param_0,
	.param .u64 .ptr .global .align 1 triton_red_fused_add_embedding_mean_mul_pow_rsqrt_0_param_1,
	.param .u64 .ptr .global .align 1 triton_red_fused_add_embedding_mean_mul_pow_rsqrt_0_param_2,
	.param .u64 .ptr .global .align 1 triton_red_fused_add_embedding_mean_mul_pow_rsqrt_0_param_3,
	.param .u32 triton_red_fused_add_embedding_mean_mul_pow_rsqrt_0_param_4,
	.param .u32 triton_red_fused_add_embedding_mean_mul_pow_rsqrt_0_param_5,
	.param .u64 .ptr .global .align 1 triton_red_fused_add_embedding_mean_mul_pow_rsqrt_0_param_6
)
.reqntid 128
{
	.reg .pred 	%p<33>;
	.reg .b16 	%rs<13>;
	.reg .b32 	%r<80>;
	.reg .b64 	%rd<93>;
	.loc	1 18 0                          // ckzqi7x2at4m3jxs6zdc46t47t6lw6nmlhnn2rg6szev4wipvslb.py:18:0
$L__func_begin0:
	.loc	1 18 0                          // ckzqi7x2at4m3jxs6zdc46t47t6lw6nmlhnn2rg6szev4wipvslb.py:18:0

// %bb.0:
	ld.param.b64 	%rd52, [triton_red_fused_add_embedding_mean_mul_pow_rsqrt_0_param_0];
$L__tmp0:
	.loc	1 23 28                         // ckzqi7x2at4m3jxs6zdc46t47t6lw6nmlhnn2rg6szev4wipvslb.py:23:28
	mov.u32 	%r1, %ctaid.x;
	.loc	1 23 33                         // ckzqi7x2at4m3jxs6zdc46t47t6lw6nmlhnn2rg6szev4wipvslb.py:23:33
	shl.b32 	%r15, %r1, 6;
	.loc	1 24 44                         // ckzqi7x2at4m3jxs6zdc46t47t6lw6nmlhnn2rg6szev4wipvslb.py:24:44
	mov.u32 	%r2, %tid.x;
	bfe.u32 	%r3, %r2, 1, 6;
	bfe.u32 	%r16, %r2, 3, 4;
	.loc	1 24 23                         // ckzqi7x2at4m3jxs6zdc46t47t6lw6nmlhnn2rg6szev4wipvslb.py:24:23
	or.b32 	%r4, %r3, %r15;
	.loc	1 25 21                         // ckzqi7x2at4m3jxs6zdc46t47t6lw6nmlhnn2rg6szev4wipvslb.py:25:21
	setp.lt.s32 	%p8, %r4, 1296;
	.loc	1 29 30                         // ckzqi7x2at4m3jxs6zdc46t47t6lw6nmlhnn2rg6szev4wipvslb.py:29:30
	mul.wide.s32 	%rd53, %r4, 8;
	add.s64 	%rd22, %rd52, %rd53;
	.loc	1 29 35                         // ckzqi7x2at4m3jxs6zdc46t47t6lw6nmlhnn2rg6szev4wipvslb.py:29:35
	// begin inline asm
	mov.u64 %rd20, 0x0;
	createpolicy.fractional.L2::evict_last.b64 %rd20, 1.0;
	// end inline asm
	// begin inline asm
	mov.u64 %rd21, 0x0;
	@%p8 ld.global.L1::evict_last.L2::cache_hint.b64 { %rd21 }, [ %rd22 + 0 ], %rd20;
	// end inline asm
	// begin inline asm
	mov.u64 %rd24, 0x0;
	createpolicy.fractional.L2::evict_last.b64 %rd24, 1.0;
	// end inline asm
	// begin inline asm
	mov.u64 %rd25, 0x0;
	@%p8 ld.global.L1::evict_last.L2::cache_hint.b64 { %rd25 }, [ %rd22 + 0 ], %rd24;
	// end inline asm
	// begin inline asm
	mov.u64 %rd28, 0x0;
	createpolicy.fractional.L2::evict_last.b64 %rd28, 1.0;
	// end inline asm
	// begin inline asm
	mov.u64 %rd29, 0x0;
	@%p8 ld.global.L1::evict_last.L2::cache_hint.b64 { %rd29 }, [ %rd22 + 0 ], %rd28;
	// end inline asm
	// begin inline asm
	mov.u64 %rd32, 0x0;
	createpolicy.fractional.L2::evict_last.b64 %rd32, 1.0;
	// end inline asm
	// begin inline asm
	mov.u64 %rd33, 0x0;
	@%p8 ld.global.L1::evict_last.L2::cache_hint.b64 { %rd33 }, [ %rd22 + 0 ], %rd32;
	// end inline asm
	// begin inline asm
	mov.u64 %rd36, 0x0;
	createpolicy.fractional.L2::evict_last.b64 %rd36, 1.0;
	// end inline asm
	.loc	1 24 23                         // ckzqi7x2at4m3jxs6zdc46t47t6lw6nmlhnn2rg6szev4wipvslb.py:24:23
	or.b32 	%r18, %r16, %r15;
	or.b32 	%r19, %r18, 16;
	or.b32 	%r20, %r18, 32;
	or.b32 	%r21, %r18, 48;
	.loc	1 25 21                         // ckzqi7x2at4m3jxs6zdc46t47t6lw6nmlhnn2rg6szev4wipvslb.py:25:21
	setp.lt.s32 	%p12, %r21, 1296;
	setp.lt.s32 	%p11, %r20, 1296;
	setp.lt.s32 	%p10, %r19, 1296;
	setp.lt.s32 	%p9, %r18, 1296;
	.loc	1 29 30                         // ckzqi7x2at4m3jxs6zdc46t47t6lw6nmlhnn2rg6szev4wipvslb.py:29:30
	mul.wide.s32 	%rd56, %r18, 8;
	add.s64 	%rd38, %rd52, %rd56;
	add.s64 	%rd42, %rd38, 128;
	add.s64 	%rd46, %rd38, 256;
	add.s64 	%rd50, %rd38, 384;
	.loc	1 29 35                         // ckzqi7x2at4m3jxs6zdc46t47t6lw6nmlhnn2rg6szev4wipvslb.py:29:35
	// begin inline asm
	mov.u64 %rd37, 0x0;
	@%p9 ld.global.L1::evict_last.L2::cache_hint.b64 { %rd37 }, [ %rd38 + 0 ], %rd36;
	// end inline asm
	// begin inline asm
	mov.u64 %rd40, 0x0;
	createpolicy.fractional.L2::evict_last.b64 %rd40, 1.0;
	// end inline asm
	// begin inline asm
	mov.u64 %rd41, 0x0;
	@%p10 ld.global.L1::evict_last.L2::cache_hint.b64 { %rd41 }, [ %rd42 + 0 ], %rd40;
	// end inline asm
	// begin inline asm
	mov.u64 %rd44, 0x0;
	createpolicy.fractional.L2::evict_last.b64 %rd44, 1.0;
	// end inline asm
	// begin inline asm
	mov.u64 %rd45, 0x0;
	@%p11 ld.global.L1::evict_last.L2::cache_hint.b64 { %rd45 }, [ %rd46 + 0 ], %rd44;
	// end inline asm
	// begin inline asm
	mov.u64 %rd48, 0x0;
	createpolicy.fractional.L2::evict_last.b64 %rd48, 1.0;
	// end inline asm
	// begin inline asm
	mov.u64 %rd49, 0x0;
	@%p12 ld.global.L1::evict_last.L2::cache_hint.b64 { %rd49 }, [ %rd50 + 0 ], %rd48;
	// end inline asm
	.loc	1 38 22                         // ckzqi7x2at4m3jxs6zdc46t47t6lw6nmlhnn2rg6szev4wipvslb.py:38:22
	add.s64 	%rd57, %rd41, 32128;
	add.s64 	%rd58, %rd37, 32128;
	add.s64 	%rd59, %rd49, 32128;
	add.s64 	%rd60, %rd45, 32128;
	.loc	1 39 22                         // ckzqi7x2at4m3jxs6zdc46t47t6lw6nmlhnn2rg6szev4wipvslb.py:39:22
	setp.lt.s64 	%p14, %rd41, 0;
	setp.lt.s64 	%p15, %rd37, 0;
	setp.lt.s64 	%p16, %rd49, 0;
	setp.lt.s64 	%p17, %rd45, 0;
	.loc	1 40 36                         // ckzqi7x2at4m3jxs6zdc46t47t6lw6nmlhnn2rg6szev4wipvslb.py:40:36
	selp.b64 	%rd61, %rd60, %rd45, %p17;
	selp.b64 	%rd62, %rd59, %rd49, %p16;
	selp.b64 	%rd63, %rd58, %rd37, %p15;
	selp.b64 	%rd64, %rd57, %rd41, %p14;
	setp.gt.u64 	%p18, %rd64, 32127;
	setp.gt.u64 	%p19, %rd63, 32127;
	setp.gt.u64 	%p20, %rd62, 32127;
	setp.gt.u64 	%p21, %rd61, 32127;
	and.pred 	%p22, %p21, %p11;
	selp.b16 	%rs1, 1, 0, %p22;
	shl.b16 	%rs2, %rs1, 2;
	and.pred 	%p23, %p20, %p12;
	selp.b16 	%rs3, -1, 0, %p23;
	shl.b16 	%rs4, %rs3, 3;
	or.b16 	%rs5, %rs4, %rs2;
	and.pred 	%p24, %p19, %p9;
	selp.b16 	%rs6, 1, 0, %p24;
	and.pred 	%p25, %p18, %p10;
	selp.b16 	%rs7, -1, 0, %p25;
	shl.b16 	%rs8, %rs7, 1;
	or.b16 	%rs9, %rs6, %rs8;
	and.b16 	%rs10, %rs9, 3;
	or.b16 	%rs11, %rs10, %rs5;
	and.b16 	%rs12, %rs11, 15;
	setp.ne.s16 	%p26, %rs12, 0;
	.loc	1 41 68                         // ckzqi7x2at4m3jxs6zdc46t47t6lw6nmlhnn2rg6szev4wipvslb.py:41:68
	@%p26 bra 	$L__BB0_6;
// %bb.1:                               // %.split.preheader
	.loc	1 0 68                          // ckzqi7x2at4m3jxs6zdc46t47t6lw6nmlhnn2rg6szev4wipvslb.py:0:68
	ld.param.b64 	%rd19, [triton_red_fused_add_embedding_mean_mul_pow_rsqrt_0_param_3];
	ld.param.b64 	%rd18, [triton_red_fused_add_embedding_mean_mul_pow_rsqrt_0_param_2];
	ld.param.b64 	%rd17, [triton_red_fused_add_embedding_mean_mul_pow_rsqrt_0_param_1];
	shl.b32 	%r17, %r2, 2;
	and.b32 	%r5, %r17, 4;
	add.s64 	%rd54, %rd33, 32128;
	setp.lt.s64 	%p13, %rd33, 0;
	selp.b64 	%rd55, %rd54, %rd33, %p13;
	mul.lo.s64 	%rd1, %rd55, 1536;
	add.s64 	%rd2, %rd17, %rd1;
	.loc	1 31 40                         // ckzqi7x2at4m3jxs6zdc46t47t6lw6nmlhnn2rg6szev4wipvslb.py:31:40
	mul.wide.u32 	%rd72, %r5, 4;
	add.s64 	%rd88, %rd2, %rd72;
	mov.b32 	%r76, 0f00000000;
	mov.b64 	%rd89, -8;
	mov.b32 	%r77, %r76;
	mov.b32 	%r78, %r76;
	mov.b32 	%r79, %r76;
$L__BB0_2:                              // %.split
                                        // =>This Inner Loop Header: Depth=1
	.loc	1 41 68                         // ckzqi7x2at4m3jxs6zdc46t47t6lw6nmlhnn2rg6szev4wipvslb.py:41:68
	bar.sync 	0;
	.loc	1 42 52                         // ckzqi7x2at4m3jxs6zdc46t47t6lw6nmlhnn2rg6szev4wipvslb.py:42:52
	// begin inline asm
	mov.u64 %rd73, 0x0;
	createpolicy.fractional.L2::evict_last.b64 %rd73, 1.0;
	// end inline asm
	mov.b32 	%r30, 0;
	// begin inline asm
	mov.u32 %r26, %r30;
	mov.u32 %r27, %r30;
	mov.u32 %r28, %r30;
	mov.u32 %r29, %r30;
	@%p8 ld.global.L1::evict_last.L2::cache_hint.v4.b32 { %r26, %r27, %r28, %r29 }, [ %rd88 + 0 ], %rd73;
	// end inline asm
	.loc	1 45 24                         // ckzqi7x2at4m3jxs6zdc46t47t6lw6nmlhnn2rg6szev4wipvslb.py:45:24
	fma.rn.f32 	%r34, %r29, %r29, %r79;
	fma.rn.f32 	%r35, %r26, %r26, %r76;
	fma.rn.f32 	%r36, %r27, %r27, %r77;
	fma.rn.f32 	%r37, %r28, %r28, %r78;
	.loc	1 46 49                         // ckzqi7x2at4m3jxs6zdc46t47t6lw6nmlhnn2rg6szev4wipvslb.py:46:49
	selp.f32 	%r78, %r37, %r78, %p8;
	selp.f32 	%r77, %r36, %r77, %p8;
	selp.f32 	%r76, %r35, %r76, %p8;
	selp.f32 	%r79, %r34, %r79, %p8;
	.loc	1 31 40                         // ckzqi7x2at4m3jxs6zdc46t47t6lw6nmlhnn2rg6szev4wipvslb.py:31:40
	add.s64 	%rd89, %rd89, 8;
	add.s64 	%rd88, %rd88, 32;
	setp.lt.u64 	%p28, %rd89, 376;
	@%p28 bra 	$L__BB0_2;
// %bb.3:                               // %__nv_rsqrtf.exit
$L__tmp1:
	.loc	2 260 15                        // standard.py:260:15 @[ ckzqi7x2at4m3jxs6zdc46t47t6lw6nmlhnn2rg6szev4wipvslb.py:47:25 ]
	add.f32 	%r38, %r76, %r77;
	add.f32 	%r39, %r78, %r38;
	add.f32 	%r40, %r79, %r39;
	.loc	2 290 36                        // standard.py:290:36 @[ ckzqi7x2at4m3jxs6zdc46t47t6lw6nmlhnn2rg6szev4wipvslb.py:47:25 ]
	shfl.sync.bfly.b32 	%r41, %r40, 1, 31, -1;
	.loc	2 260 15                        // standard.py:260:15 @[ ckzqi7x2at4m3jxs6zdc46t47t6lw6nmlhnn2rg6szev4wipvslb.py:47:25 ]
	add.f32 	%r42, %r40, %r41;
	mov.b32 	%r43, 0f43C00000;
$L__tmp2:
	.loc	1 62 24                         // ckzqi7x2at4m3jxs6zdc46t47t6lw6nmlhnn2rg6szev4wipvslb.py:62:24
	div.full.f32 	%r44, %r42, %r43;
	.loc	1 64 24                         // ckzqi7x2at4m3jxs6zdc46t47t6lw6nmlhnn2rg6szev4wipvslb.py:64:24
	add.f32 	%r45, %r44, 0f358637BD;
	.loc	1 65 32                         // ckzqi7x2at4m3jxs6zdc46t47t6lw6nmlhnn2rg6szev4wipvslb.py:65:32
	rsqrt.approx.ftz.f32 	%r14, %r45;
	.loc	1 48 40                         // ckzqi7x2at4m3jxs6zdc46t47t6lw6nmlhnn2rg6szev4wipvslb.py:48:40
	mul.lo.s32 	%r46, %r3, 384;
	mad.lo.s32 	%r47, %r1, 24576, %r46;
	or.b32 	%r48, %r47, %r5;
	cvt.u64.u32 	%rd8, %r48;
	and.b32 	%r49, %r2, 1;
	mul.wide.u32 	%rd77, %r49, 16;
	add.s64 	%rd78, %rd1, %rd77;
	add.s64 	%rd91, %rd17, %rd78;
	add.s64 	%rd90, %rd18, %rd77;
	mov.b64 	%rd92, -8;
$L__BB0_4:                              // =>This Inner Loop Header: Depth=1
	.loc	1 54 42                         // ckzqi7x2at4m3jxs6zdc46t47t6lw6nmlhnn2rg6szev4wipvslb.py:54:42
	// begin inline asm
	mov.u64 %rd79, 0x0;
	createpolicy.fractional.L2::evict_last.b64 %rd79, 1.0;
	// end inline asm
	mov.b32 	%r54, 0;
	mov.pred 	%p29, -1;
	// begin inline asm
	mov.u32 %r50, %r54;
	mov.u32 %r51, %r54;
	mov.u32 %r52, %r54;
	mov.u32 %r53, %r54;
	@%p29 ld.global.L1::evict_last.L2::cache_hint.v4.b32 { %r50, %r51, %r52, %r53 }, [ %rd90 + 0 ], %rd79;
	// end inline asm
	.loc	1 59 70                         // ckzqi7x2at4m3jxs6zdc46t47t6lw6nmlhnn2rg6szev4wipvslb.py:59:70
	bar.sync 	0;
	.loc	1 60 54                         // ckzqi7x2at4m3jxs6zdc46t47t6lw6nmlhnn2rg6szev4wipvslb.py:60:54
	// begin inline asm
	mov.u64 %rd82, 0x0;
	createpolicy.fractional.L2::evict_first.b64 %rd82, 1.0;
	// end inline asm
	// begin inline asm
	mov.u32 %r58, %r54;
	mov.u32 %r59, %r54;
	mov.u32 %r60, %r54;
	mov.u32 %r61, %r54;
	@%p8 ld.global.L1::evict_first.L2::cache_hint.v4.b32 { %r58, %r59, %r60, %r61 }, [ %rd91 + 0 ], %rd82;
	// end inline asm
	.loc	1 66 24                         // ckzqi7x2at4m3jxs6zdc46t47t6lw6nmlhnn2rg6szev4wipvslb.py:66:24
	mul.f32 	%r70, %r14, %r58;
	mul.f32 	%r71, %r14, %r59;
	mul.f32 	%r72, %r14, %r60;
	mul.f32 	%r73, %r14, %r61;
	.loc	1 67 24                         // ckzqi7x2at4m3jxs6zdc46t47t6lw6nmlhnn2rg6szev4wipvslb.py:67:24
	mul.f32 	%r66, %r70, %r50;
	mul.f32 	%r67, %r71, %r51;
	mul.f32 	%r68, %r72, %r52;
	mul.f32 	%r69, %r73, %r53;
	.loc	1 68 29                         // ckzqi7x2at4m3jxs6zdc46t47t6lw6nmlhnn2rg6szev4wipvslb.py:68:29
	add.s64 	%rd86, %rd8, %rd92;
	cvt.u32.u64 	%r74, %rd86;
	add.s32 	%r75, %r74, 8;
	mul.wide.s32 	%rd87, %r75, 4;
	add.s64 	%rd85, %rd19, %rd87;
	.loc	1 68 52                         // ckzqi7x2at4m3jxs6zdc46t47t6lw6nmlhnn2rg6szev4wipvslb.py:68:52
	// begin inline asm
	@%p8 st.global.v4.b32 [ %rd85 + 0 ], { %r66, %r67, %r68, %r69 };
	// end inline asm
	.loc	1 48 40                         // ckzqi7x2at4m3jxs6zdc46t47t6lw6nmlhnn2rg6szev4wipvslb.py:48:40
	add.s64 	%rd92, %rd92, 8;
	add.s64 	%rd91, %rd91, 32;
	add.s64 	%rd90, %rd90, 32;
	setp.lt.u64 	%p32, %rd92, 376;
	@%p32 bra 	$L__BB0_4;
// %bb.5:
	.loc	1 48 4                          // ckzqi7x2at4m3jxs6zdc46t47t6lw6nmlhnn2rg6szev4wipvslb.py:48:4
	ret;
$L__BB0_6:
	.loc	1 41 68                         // ckzqi7x2at4m3jxs6zdc46t47t6lw6nmlhnn2rg6szev4wipvslb.py:41:68
	mov.b64 	%rd65, assertMessage_0;
	cvta.global.u64 	%rd66, %rd65;
	mov.b64 	%rd67, assertFile_0;
	cvta.global.u64 	%rd68, %rd67;
	mov.b64 	%rd69, assertFunc_0;
	cvta.global.u64 	%rd70, %rd69;
	{ // callseq 0, 0
	.param .b64 param0;
	st.param.b64 	[param0], %rd66;
	.param .b64 param1;
	st.param.b64 	[param1], %rd68;
	.param .b32 param2;
	st.param.b32 	[param2], 41;
	.param .b64 param3;
	st.param.b64 	[param3], %rd70;
	.param .b64 param4;
	st.param.b64 	[param4], 1;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	} // callseq 0
	trap;
$L__tmp3:
$L__func_end0:
                                        // -- End function
}
	.file	1 "/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/kz/ckzqi7x2at4m3jxs6zdc46t47t6lw6nmlhnn2rg6szev4wipvslb.py"
	.file	2 "/mnt/disk1/anaconda3/envs/pqhung/lib/python3.9/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 243                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xec DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 107
.b8 122
.b8 113
.b8 105
.b8 55
.b8 120
.b8 50
.b8 97
.b8 116
.b8 52
.b8 109
.b8 51
.b8 106
.b8 120
.b8 115
.b8 54
.b8 122
.b8 100
.b8 99
.b8 52
.b8 54
.b8 116
.b8 52
.b8 55
.b8 116
.b8 54
.b8 108
.b8 119
.b8 54
.b8 110
.b8 109
.b8 108
.b8 104
.b8 110
.b8 110
.b8 50
.b8 114
.b8 103
.b8 54
.b8 115
.b8 122
.b8 101
.b8 118
.b8 52
.b8 119
.b8 105
.b8 112
.b8 118
.b8 115
.b8 108
.b8 98
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 47                                  // DW_AT_comp_dir
.b8 109
.b8 110
.b8 116
.b8 47
.b8 100
.b8 105
.b8 115
.b8 107
.b8 49
.b8 47
.b8 107
.b8 104
.b8 105
.b8 101
.b8 109
.b8 116
.b8 116
.b8 47
.b8 117
.b8 110
.b8 105
.b8 118
.b8 101
.b8 114
.b8 115
.b8 97
.b8 108
.b8 45
.b8 111
.b8 102
.b8 102
.b8 108
.b8 105
.b8 110
.b8 101
.b8 45
.b8 98
.b8 98
.b8 111
.b8 47
.b8 116
.b8 111
.b8 114
.b8 99
.b8 104
.b8 105
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 117
.b8 98
.b8 117
.b8 110
.b8 116
.b8 117
.b8 47
.b8 107
.b8 122
.b8 0
.b8 2                                   // Abbrev [2] 0x92:0x36 DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 114
.b8 101
.b8 100
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 97
.b8 100
.b8 100
.b8 95
.b8 101
.b8 109
.b8 98
.b8 101
.b8 100
.b8 100
.b8 105
.b8 110
.b8 103
.b8 95
.b8 109
.b8 101
.b8 97
.b8 110
.b8 95
.b8 109
.b8 117
.b8 108
.b8 95
.b8 112
.b8 111
.b8 119
.b8 95
.b8 114
.b8 115
.b8 113
.b8 114
.b8 116
.b8 95
.b8 48
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0xc8:0x2e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 146                                // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xdd:0x18 DW_TAG_inlined_subroutine
.b32 146                                // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 47                                  // DW_AT_call_line
.b8 25                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}

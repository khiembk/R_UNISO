; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-p6:32:32-p7:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@assertFunc_0 = internal constant [8 x i8] c"unknown\00"
@assertFile_0 = internal constant [121 x i8] c"/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/gs/cgscz7snavm33fdoafcgbjt7z3jguuay3yszv3klt6rj5gv776id.py\00"
@assertMessage_0 = internal constant [37 x i8] c"index out of bounds: 0 <= tmp22 < 32\00"
@global_smem = external addrspace(3) global [0 x i8], align 16
@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1

; Function Attrs: noreturn
declare !dbg !5 void @__assertfail(ptr, ptr, i32, ptr, i64) local_unnamed_addr #0

define ptx_kernel void @triton_per_fused__softmax_add_0(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, i32 %4, i32 %5, ptr addrspace(1) readnone captures(none) %6) local_unnamed_addr #1 !dbg !9 {
  %8 = tail call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !dbg !10
  %9 = shl i32 %8, 3, !dbg !11
  %10 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %11 = and i32 %10, 7, !dbg !12
  %12 = and i32 %10, 64, !dbg !12
  %.lobit2 = lshr i32 %10, 5, !dbg !12
  %13 = and i32 %.lobit2, 3, !dbg !12
  %.lobit = lshr exact i32 %12, 6, !dbg !12
  %14 = or disjoint i32 %9, %11, !dbg !13
  %15 = or disjoint i32 %13, %9, !dbg !13
  %16 = or disjoint i32 %15, 4, !dbg !13
  %17 = or disjoint i32 %.lobit, %9, !dbg !13
  %18 = or disjoint i32 %17, 2, !dbg !13
  %19 = or disjoint i32 %17, 4, !dbg !13
  %20 = or disjoint i32 %17, 6, !dbg !13
  %21 = icmp slt i32 %15, 400, !dbg !14
  %22 = icmp slt i32 %16, 400, !dbg !14
  %23 = insertelement <4 x i32> poison, i32 %17, i64 0, !dbg !14
  %24 = insertelement <4 x i32> %23, i32 %18, i64 1, !dbg !14
  %25 = insertelement <4 x i32> %24, i32 %19, i64 2, !dbg !14
  %26 = insertelement <4 x i32> %25, i32 %20, i64 3, !dbg !14
  %27 = icmp slt <4 x i32> %26, splat (i32 400), !dbg !14
  %28 = lshr i32 %10, 3, !dbg !15
  %29 = and i32 %28, 7, !dbg !15
  %30 = lshr exact i32 %12, 3, !dbg !15
  %31 = or disjoint i32 %29, %30, !dbg !15
  %32 = or disjoint i32 %31, 16, !dbg !15
  %33 = or disjoint i32 %31, 32, !dbg !15
  %34 = or disjoint i32 %31, 48, !dbg !15
  %35 = shl nuw nsw i32 %10, 1, !dbg !15
  %36 = and i32 %35, 62, !dbg !15
  %37 = and i32 %10, 63, !dbg !15
  %38 = icmp samesign ult i32 %36, 50, !dbg !16
  %39 = icmp samesign ult i32 %37, 50, !dbg !16
  %40 = sdiv i32 %15, 50, !dbg !17
  %41 = mul i32 %40, 50, !dbg !18
  %.decomposed = sub i32 %15, %41, !dbg !18
  %42 = sdiv i32 %16, 50, !dbg !17
  %43 = mul i32 %42, 50, !dbg !18
  %.decomposed239 = sub i32 %16, %43, !dbg !18
  %44 = sdiv i32 %14, 50, !dbg !17
  %45 = mul i32 %44, 50, !dbg !18
  %.decomposed240 = sub i32 %14, %45, !dbg !18
  %46 = mul i32 %15, 50, !dbg !19
  %47 = mul i32 %16, 50, !dbg !19
  %48 = add i32 %46, %36, !dbg !20
  %49 = add i32 %47, %36, !dbg !20
  %50 = sext i32 %48 to i64, !dbg !21
  %51 = getelementptr float, ptr addrspace(1) %0, i64 %50, !dbg !21
  %52 = sext i32 %49 to i64, !dbg !21
  %53 = getelementptr float, ptr addrspace(1) %0, i64 %52, !dbg !21
  %54 = and i1 %38, %21, !dbg !22
  %55 = and i1 %38, %22, !dbg !22
  %56 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, $2;\0A\09mov.u32 $1, $3;\0A\09@$5 ld.global.v2.b32 { $0, $1 }, [ $4 + 0 ];", "=r,=r,r,r,l,b"(i32 0, i32 0, ptr addrspace(1) %51, i1 %54) #8, !dbg !23
  %57 = extractvalue { i32, i32 } %56, 0, !dbg !23
  %58 = extractvalue { i32, i32 } %56, 1, !dbg !23
  %59 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, $2;\0A\09mov.u32 $1, $3;\0A\09@$5 ld.global.v2.b32 { $0, $1 }, [ $4 + 0 ];", "=r,=r,r,r,l,b"(i32 0, i32 0, ptr addrspace(1) %53, i1 %55) #8, !dbg !23
  %60 = extractvalue { i32, i32 } %59, 0, !dbg !23
  %61 = extractvalue { i32, i32 } %59, 1, !dbg !23
  %62 = and i32 %35, 254, !dbg !23
  %63 = shl nuw nsw i32 %10, 6, !dbg !23
  %64 = and i32 %63, 448, !dbg !23
  %65 = lshr i32 %10, 4, !dbg !23
  %66 = and i32 %65, 6, !dbg !23
  %67 = getelementptr inbounds nuw float, ptr addrspace(3) @global_smem, i32 %66, !dbg !23
  %68 = getelementptr inbounds nuw float, ptr addrspace(3) %67, i32 %62, !dbg !23
  %69 = insertelement <2 x i32> poison, i32 %57, i64 0, !dbg !23
  %70 = insertelement <2 x i32> %69, i32 %58, i64 1, !dbg !23
  store <2 x i32> %70, ptr addrspace(3) %68, align 8, !dbg !23
  %71 = or disjoint i32 %62, 256, !dbg !23
  %72 = lshr i32 %71, 5, !dbg !23
  %73 = and i32 %72, 14, !dbg !23
  %74 = getelementptr inbounds nuw float, ptr addrspace(3) @global_smem, i32 %73, !dbg !23
  %75 = getelementptr inbounds nuw float, ptr addrspace(3) %74, i32 %71, !dbg !23
  %76 = insertelement <2 x i32> poison, i32 %60, i64 0, !dbg !23
  %77 = insertelement <2 x i32> %76, i32 %61, i64 1, !dbg !23
  store <2 x i32> %77, ptr addrspace(3) %75, align 8, !dbg !23
  tail call void @llvm.nvvm.barrier.cta.sync.aligned.all(i32 0), !dbg !23
  %78 = lshr exact i32 %64, 3, !dbg !23
  %79 = getelementptr inbounds nuw i8, ptr addrspace(3) @global_smem, i32 %78, !dbg !23
  %80 = getelementptr inbounds nuw float, ptr addrspace(3) %79, i32 %64, !dbg !23
  %81 = getelementptr inbounds nuw float, ptr addrspace(3) %80, i32 %29, !dbg !23
  %82 = getelementptr inbounds nuw float, ptr addrspace(3) %81, i32 %30, !dbg !23
  %83 = load float, ptr addrspace(3) %82, align 4, !dbg !23
  %84 = getelementptr inbounds nuw i8, ptr addrspace(3) %82, i32 64, !dbg !23
  %85 = load float, ptr addrspace(3) %84, align 4, !dbg !23
  %86 = getelementptr inbounds nuw i8, ptr addrspace(3) %82, i32 128, !dbg !23
  %87 = load float, ptr addrspace(3) %86, align 4, !dbg !23
  %88 = getelementptr inbounds nuw i8, ptr addrspace(3) %82, i32 192, !dbg !23
  %89 = load float, ptr addrspace(3) %88, align 4, !dbg !23
  %90 = mul nsw i32 %.decomposed, 50, !dbg !24
  %91 = mul nsw i32 %.decomposed239, 50, !dbg !24
  %92 = add nsw i32 %90, %36, !dbg !25
  %93 = add nsw i32 %91, %36, !dbg !25
  %94 = sext i32 %92 to i64, !dbg !26
  %95 = getelementptr float, ptr addrspace(1) %2, i64 %94, !dbg !26
  %96 = sext i32 %93 to i64, !dbg !26
  %97 = getelementptr float, ptr addrspace(1) %2, i64 %96, !dbg !26
  %98 = tail call i64 asm sideeffect "mov.u64 $0, 0x0;\0A\09createpolicy.fractional.L2::evict_last.b64 $0, 1.0;", "=l"() #8, !dbg !27
  %99 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, $2;\0A\09mov.u32 $1, $3;\0A\09@$6 ld.global.L1::evict_last.L2::cache_hint.v2.b32 { $0, $1 }, [ $4 + 0 ], $5;", "=r,=r,r,r,l,l,b"(i32 0, i32 0, ptr addrspace(1) %95, i64 %98, i1 %54) #8, !dbg !27
  %100 = extractvalue { i32, i32 } %99, 0, !dbg !27
  %101 = extractvalue { i32, i32 } %99, 1, !dbg !27
  %102 = tail call i64 asm sideeffect "mov.u64 $0, 0x0;\0A\09createpolicy.fractional.L2::evict_last.b64 $0, 1.0;", "=l"() #8, !dbg !27
  %103 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, $2;\0A\09mov.u32 $1, $3;\0A\09@$6 ld.global.L1::evict_last.L2::cache_hint.v2.b32 { $0, $1 }, [ $4 + 0 ], $5;", "=r,=r,r,r,l,l,b"(i32 0, i32 0, ptr addrspace(1) %97, i64 %102, i1 %55) #8, !dbg !27
  %104 = extractvalue { i32, i32 } %103, 0, !dbg !27
  %105 = extractvalue { i32, i32 } %103, 1, !dbg !27
  tail call void @llvm.nvvm.barrier.cta.sync.aligned.all(i32 0), !dbg !27
  %106 = insertelement <2 x i32> poison, i32 %100, i64 0, !dbg !27
  %107 = insertelement <2 x i32> %106, i32 %101, i64 1, !dbg !27
  store <2 x i32> %107, ptr addrspace(3) %68, align 8, !dbg !27
  %108 = insertelement <2 x i32> poison, i32 %104, i64 0, !dbg !27
  %109 = insertelement <2 x i32> %108, i32 %105, i64 1, !dbg !27
  store <2 x i32> %109, ptr addrspace(3) %75, align 8, !dbg !27
  tail call void @llvm.nvvm.barrier.cta.sync.aligned.all(i32 0), !dbg !27
  %110 = load float, ptr addrspace(3) %82, align 4, !dbg !27
  %111 = load float, ptr addrspace(3) %84, align 4, !dbg !27
  %112 = load float, ptr addrspace(3) %86, align 4, !dbg !27
  %113 = load float, ptr addrspace(3) %88, align 4, !dbg !27
  %114 = sub nsw i32 %31, %.decomposed240, !dbg !28
  %115 = sub nsw i32 %32, %.decomposed240, !dbg !28
  %116 = sub nsw i32 %33, %.decomposed240, !dbg !28
  %117 = sub nsw i32 %34, %.decomposed240, !dbg !28
  %118 = tail call i32 @llvm.smin.i32(i32 %114, i32 0), !dbg !29
  %119 = tail call i32 @llvm.smin.i32(i32 %115, i32 0), !dbg !29
  %120 = tail call i32 @llvm.smin.i32(i32 %116, i32 0), !dbg !29
  %121 = tail call i32 @llvm.smin.i32(i32 %117, i32 0), !dbg !29
  %122 = sub nsw i32 0, %118, !dbg !30
  %123 = sub nsw i32 0, %119, !dbg !30
  %124 = sub nsw i32 0, %120, !dbg !30
  %125 = sub nsw i32 0, %121, !dbg !30
  %126 = srem <4 x i32> %26, splat (i32 50), !dbg !18
  %127 = insertelement <4 x i32> poison, i32 %37, i64 0, !dbg !28
  %128 = shufflevector <4 x i32> %127, <4 x i32> poison, <4 x i32> zeroinitializer, !dbg !28
  %129 = sub nsw <4 x i32> %128, %126, !dbg !28
  %130 = tail call <4 x i32> @llvm.smin.v4i32(<4 x i32> %129, <4 x i32> zeroinitializer), !dbg !29
  %131 = sub nsw <4 x i32> zeroinitializer, %130, !dbg !30
  %132 = zext <4 x i32> %131 to <4 x i64>, !dbg !31
  %133 = icmp sgt <4 x i32> %129, splat (i32 -16), !dbg !31
  %134 = uitofp nneg i32 %122 to float, !dbg !32
  %135 = uitofp nneg i32 %123 to float, !dbg !32
  %136 = uitofp nneg i32 %124 to float, !dbg !32
  %137 = uitofp nneg i32 %125 to float, !dbg !32
  %138 = extractelement <4 x i32> %131, i64 0, !dbg !32
  %139 = uitofp nneg i32 %138 to float, !dbg !32
  %140 = extractelement <4 x i32> %131, i64 1, !dbg !32
  %141 = uitofp nneg i32 %140 to float, !dbg !32
  %142 = extractelement <4 x i32> %131, i64 2, !dbg !32
  %143 = uitofp nneg i32 %142 to float, !dbg !32
  %144 = extractelement <4 x i32> %131, i64 3, !dbg !32
  %145 = uitofp nneg i32 %144 to float, !dbg !32
  %146 = fmul float %134, 6.250000e-02, !dbg !33
  %147 = fmul float %135, 6.250000e-02, !dbg !33
  %148 = fmul float %136, 6.250000e-02, !dbg !33
  %149 = fmul float %137, 6.250000e-02, !dbg !33
  %150 = fmul float %139, 6.250000e-02, !dbg !33
  %151 = fmul float %141, 6.250000e-02, !dbg !33
  %152 = fmul float %143, 6.250000e-02, !dbg !33
  %153 = fmul float %145, 6.250000e-02, !dbg !33
  %154 = fcmp olt float %146, 0x3810000000000000, !dbg !34
  %155 = fmul float %146, 0x4160000000000000, !dbg !34
  %.02.i = select i1 %154, float %155, float %146, !dbg !34
  %i.i.0.i = select i1 %154, float -2.300000e+01, float 0.000000e+00, !dbg !34
  %156 = bitcast float %.02.i to i32, !dbg !34
  %157 = add nsw i32 %156, -1059760811, !dbg !34
  %158 = and i32 %157, -8388608, !dbg !34
  %159 = sub i32 %156, %158, !dbg !34
  %160 = bitcast i32 %159 to float, !dbg !34
  %161 = sitofp i32 %158 to float, !dbg !34
  %162 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #8, !dbg !34
  %.not.i = icmp eq i32 %162, 0, !dbg !34
  %163 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %161, float 0x3E80000000000000, float %i.i.0.i) #8, !dbg !34
  %164 = tail call float @llvm.nvvm.fma.rn.f(float %161, float 0x3E80000000000000, float %i.i.0.i) #8, !dbg !34
  %.08.i = select i1 %.not.i, float %164, float %163, !dbg !34
  %165 = fadd float %160, -1.000000e+00, !dbg !34
  %166 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #8, !dbg !34
  %.not1.i = icmp eq i32 %166, 0, !dbg !34
  %167 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0xBFC0AA04E0000000, float %165, float 0x3FC2073EC0000000) #8, !dbg !34
  %168 = tail call float @llvm.nvvm.fma.rn.f(float 0xBFC0AA04E0000000, float %165, float 0x3FC2073EC0000000) #8, !dbg !34
  %.010.i = select i1 %.not1.i, float %168, float %167, !dbg !34
  %169 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #8, !dbg !34
  %.not2.i = icmp eq i32 %169, 0, !dbg !34
  %170 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i, float %165, float 0xBFBF19B980000000) #8, !dbg !34
  %171 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i, float %165, float 0xBFBF19B980000000) #8, !dbg !34
  %.011.i = select i1 %.not2.i, float %171, float %170, !dbg !34
  %172 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #8, !dbg !34
  %.not3.i = icmp eq i32 %172, 0, !dbg !34
  %173 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i, float %165, float 0x3FC1E52AA0000000) #8, !dbg !34
  %174 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i, float %165, float 0x3FC1E52AA0000000) #8, !dbg !34
  %.012.i = select i1 %.not3.i, float %174, float %173, !dbg !34
  %175 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #8, !dbg !34
  %.not4.i = icmp eq i32 %175, 0, !dbg !34
  %176 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.012.i, float %165, float 0xBFC55B1720000000) #8, !dbg !34
  %177 = tail call float @llvm.nvvm.fma.rn.f(float %.012.i, float %165, float 0xBFC55B1720000000) #8, !dbg !34
  %.09.i = select i1 %.not4.i, float %177, float %176, !dbg !34
  %178 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #8, !dbg !34
  %.not5.i = icmp eq i32 %178, 0, !dbg !34
  %179 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i, float %165, float 0x3FC99DA160000000) #8, !dbg !34
  %180 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i, float %165, float 0x3FC99DA160000000) #8, !dbg !34
  %.05.i = select i1 %.not5.i, float %180, float %179, !dbg !34
  %181 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #8, !dbg !34
  %.not6.i = icmp eq i32 %181, 0, !dbg !34
  %182 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i, float %165, float 0xBFCFFFE440000000) #8, !dbg !34
  %183 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i, float %165, float 0xBFCFFFE440000000) #8, !dbg !34
  %.01.i = select i1 %.not6.i, float %183, float %182, !dbg !34
  %184 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #8, !dbg !34
  %.not7.i = icmp eq i32 %184, 0, !dbg !34
  %185 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01.i, float %165, float 0x3FD5554F00000000) #8, !dbg !34
  %186 = tail call float @llvm.nvvm.fma.rn.f(float %.01.i, float %165, float 0x3FD5554F00000000) #8, !dbg !34
  %.0.i = select i1 %.not7.i, float %186, float %185, !dbg !34
  %187 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #8, !dbg !34
  %.not8.i = icmp eq i32 %187, 0, !dbg !34
  %188 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i, float %165, float -5.000000e-01) #8, !dbg !34
  %189 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i, float %165, float -5.000000e-01) #8, !dbg !34
  %.07.i = select i1 %.not8.i, float %189, float %188, !dbg !34
  %190 = fmul float %165, %.07.i, !dbg !34
  %191 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #8, !dbg !34
  %.not9.i = icmp eq i32 %191, 0, !dbg !34
  %192 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %190, float %165, float %165) #8, !dbg !34
  %193 = tail call float @llvm.nvvm.fma.rn.f(float %190, float %165, float %165) #8, !dbg !34
  %.06.i = select i1 %.not9.i, float %193, float %192, !dbg !34
  %194 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #8, !dbg !34
  %.not10.i = icmp eq i32 %194, 0, !dbg !34
  %195 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i, float 0x3FE62E4300000000, float %.06.i) #8, !dbg !34
  %196 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i, float 0x3FE62E4300000000, float %.06.i) #8, !dbg !34
  %.04.i = select i1 %.not10.i, float %196, float %195, !dbg !34
  %197 = icmp samesign ugt i32 %156, 2139095039, !dbg !34
  br i1 %197, label %__nv_fmaf_rn.exit.i.i, label %__nv_logf.exit, !dbg !34

__nv_fmaf_rn.exit.i.i:                            ; preds = %7
  %198 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #8, !dbg !34
  %.not11.i = icmp eq i32 %198, 0, !dbg !34
  %199 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i, float 0x7FF0000000000000, float 0x7FF0000000000000) #8, !dbg !34
  %200 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i, float 0x7FF0000000000000, float 0x7FF0000000000000) #8, !dbg !34
  %.03.i = select i1 %.not11.i, float %200, float %199, !dbg !34
  br label %__nv_logf.exit, !dbg !34

__nv_logf.exit:                                   ; preds = %7, %__nv_fmaf_rn.exit.i.i
  %r.i.0.i = phi float [ %.03.i, %__nv_fmaf_rn.exit.i.i ], [ %.04.i, %7 ], !dbg !34
  %201 = fcmp olt float %147, 0x3810000000000000, !dbg !34
  %202 = fmul float %147, 0x4160000000000000, !dbg !34
  %.02.i28 = select i1 %201, float %202, float %147, !dbg !34
  %i.i.0.i29 = select i1 %201, float -2.300000e+01, float 0.000000e+00, !dbg !34
  %203 = bitcast float %.02.i28 to i32, !dbg !34
  %204 = add nsw i32 %203, -1059760811, !dbg !34
  %205 = and i32 %204, -8388608, !dbg !34
  %206 = sub i32 %203, %205, !dbg !34
  %207 = bitcast i32 %206 to float, !dbg !34
  %208 = sitofp i32 %205 to float, !dbg !34
  %209 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #8, !dbg !34
  %.not.i30 = icmp eq i32 %209, 0, !dbg !34
  %210 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %208, float 0x3E80000000000000, float %i.i.0.i29) #8, !dbg !34
  %211 = tail call float @llvm.nvvm.fma.rn.f(float %208, float 0x3E80000000000000, float %i.i.0.i29) #8, !dbg !34
  %.08.i31 = select i1 %.not.i30, float %211, float %210, !dbg !34
  %212 = fadd float %207, -1.000000e+00, !dbg !34
  %213 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #8, !dbg !34
  %.not1.i32 = icmp eq i32 %213, 0, !dbg !34
  %214 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0xBFC0AA04E0000000, float %212, float 0x3FC2073EC0000000) #8, !dbg !34
  %215 = tail call float @llvm.nvvm.fma.rn.f(float 0xBFC0AA04E0000000, float %212, float 0x3FC2073EC0000000) #8, !dbg !34
  %.010.i33 = select i1 %.not1.i32, float %215, float %214, !dbg !34
  %216 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #8, !dbg !34
  %.not2.i34 = icmp eq i32 %216, 0, !dbg !34
  %217 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i33, float %212, float 0xBFBF19B980000000) #8, !dbg !34
  %218 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i33, float %212, float 0xBFBF19B980000000) #8, !dbg !34
  %.011.i35 = select i1 %.not2.i34, float %218, float %217, !dbg !34
  %219 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #8, !dbg !34
  %.not3.i36 = icmp eq i32 %219, 0, !dbg !34
  %220 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i35, float %212, float 0x3FC1E52AA0000000) #8, !dbg !34
  %221 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i35, float %212, float 0x3FC1E52AA0000000) #8, !dbg !34
  %.012.i37 = select i1 %.not3.i36, float %221, float %220, !dbg !34
  %222 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #8, !dbg !34
  %.not4.i38 = icmp eq i32 %222, 0, !dbg !34
  %223 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.012.i37, float %212, float 0xBFC55B1720000000) #8, !dbg !34
  %224 = tail call float @llvm.nvvm.fma.rn.f(float %.012.i37, float %212, float 0xBFC55B1720000000) #8, !dbg !34
  %.09.i39 = select i1 %.not4.i38, float %224, float %223, !dbg !34
  %225 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #8, !dbg !34
  %.not5.i40 = icmp eq i32 %225, 0, !dbg !34
  %226 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i39, float %212, float 0x3FC99DA160000000) #8, !dbg !34
  %227 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i39, float %212, float 0x3FC99DA160000000) #8, !dbg !34
  %.05.i41 = select i1 %.not5.i40, float %227, float %226, !dbg !34
  %228 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #8, !dbg !34
  %.not6.i42 = icmp eq i32 %228, 0, !dbg !34
  %229 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i41, float %212, float 0xBFCFFFE440000000) #8, !dbg !34
  %230 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i41, float %212, float 0xBFCFFFE440000000) #8, !dbg !34
  %.01.i43 = select i1 %.not6.i42, float %230, float %229, !dbg !34
  %231 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #8, !dbg !34
  %.not7.i44 = icmp eq i32 %231, 0, !dbg !34
  %232 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01.i43, float %212, float 0x3FD5554F00000000) #8, !dbg !34
  %233 = tail call float @llvm.nvvm.fma.rn.f(float %.01.i43, float %212, float 0x3FD5554F00000000) #8, !dbg !34
  %.0.i45 = select i1 %.not7.i44, float %233, float %232, !dbg !34
  %234 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #8, !dbg !34
  %.not8.i46 = icmp eq i32 %234, 0, !dbg !34
  %235 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i45, float %212, float -5.000000e-01) #8, !dbg !34
  %236 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i45, float %212, float -5.000000e-01) #8, !dbg !34
  %.07.i47 = select i1 %.not8.i46, float %236, float %235, !dbg !34
  %237 = fmul float %212, %.07.i47, !dbg !34
  %238 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #8, !dbg !34
  %.not9.i48 = icmp eq i32 %238, 0, !dbg !34
  %239 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %237, float %212, float %212) #8, !dbg !34
  %240 = tail call float @llvm.nvvm.fma.rn.f(float %237, float %212, float %212) #8, !dbg !34
  %.06.i49 = select i1 %.not9.i48, float %240, float %239, !dbg !34
  %241 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #8, !dbg !34
  %.not10.i50 = icmp eq i32 %241, 0, !dbg !34
  %242 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i31, float 0x3FE62E4300000000, float %.06.i49) #8, !dbg !34
  %243 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i31, float 0x3FE62E4300000000, float %.06.i49) #8, !dbg !34
  %.04.i51 = select i1 %.not10.i50, float %243, float %242, !dbg !34
  %244 = icmp samesign ugt i32 %203, 2139095039, !dbg !34
  br i1 %244, label %__nv_fmaf_rn.exit.i.i54, label %__nv_logf.exit57, !dbg !34

__nv_fmaf_rn.exit.i.i54:                          ; preds = %__nv_logf.exit
  %245 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #8, !dbg !34
  %.not11.i55 = icmp eq i32 %245, 0, !dbg !34
  %246 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i28, float 0x7FF0000000000000, float 0x7FF0000000000000) #8, !dbg !34
  %247 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i28, float 0x7FF0000000000000, float 0x7FF0000000000000) #8, !dbg !34
  %.03.i56 = select i1 %.not11.i55, float %247, float %246, !dbg !34
  br label %__nv_logf.exit57, !dbg !34

__nv_logf.exit57:                                 ; preds = %__nv_logf.exit, %__nv_fmaf_rn.exit.i.i54
  %r.i.0.i52 = phi float [ %.03.i56, %__nv_fmaf_rn.exit.i.i54 ], [ %.04.i51, %__nv_logf.exit ], !dbg !34
  %248 = fcmp olt float %148, 0x3810000000000000, !dbg !34
  %249 = fmul float %148, 0x4160000000000000, !dbg !34
  %.02.i58 = select i1 %248, float %249, float %148, !dbg !34
  %i.i.0.i59 = select i1 %248, float -2.300000e+01, float 0.000000e+00, !dbg !34
  %250 = bitcast float %.02.i58 to i32, !dbg !34
  %251 = add nsw i32 %250, -1059760811, !dbg !34
  %252 = and i32 %251, -8388608, !dbg !34
  %253 = sub i32 %250, %252, !dbg !34
  %254 = bitcast i32 %253 to float, !dbg !34
  %255 = sitofp i32 %252 to float, !dbg !34
  %256 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #8, !dbg !34
  %.not.i60 = icmp eq i32 %256, 0, !dbg !34
  %257 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %255, float 0x3E80000000000000, float %i.i.0.i59) #8, !dbg !34
  %258 = tail call float @llvm.nvvm.fma.rn.f(float %255, float 0x3E80000000000000, float %i.i.0.i59) #8, !dbg !34
  %.08.i61 = select i1 %.not.i60, float %258, float %257, !dbg !34
  %259 = fadd float %254, -1.000000e+00, !dbg !34
  %260 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #8, !dbg !34
  %.not1.i62 = icmp eq i32 %260, 0, !dbg !34
  %261 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0xBFC0AA04E0000000, float %259, float 0x3FC2073EC0000000) #8, !dbg !34
  %262 = tail call float @llvm.nvvm.fma.rn.f(float 0xBFC0AA04E0000000, float %259, float 0x3FC2073EC0000000) #8, !dbg !34
  %.010.i63 = select i1 %.not1.i62, float %262, float %261, !dbg !34
  %263 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #8, !dbg !34
  %.not2.i64 = icmp eq i32 %263, 0, !dbg !34
  %264 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i63, float %259, float 0xBFBF19B980000000) #8, !dbg !34
  %265 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i63, float %259, float 0xBFBF19B980000000) #8, !dbg !34
  %.011.i65 = select i1 %.not2.i64, float %265, float %264, !dbg !34
  %266 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #8, !dbg !34
  %.not3.i66 = icmp eq i32 %266, 0, !dbg !34
  %267 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i65, float %259, float 0x3FC1E52AA0000000) #8, !dbg !34
  %268 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i65, float %259, float 0x3FC1E52AA0000000) #8, !dbg !34
  %.012.i67 = select i1 %.not3.i66, float %268, float %267, !dbg !34
  %269 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #8, !dbg !34
  %.not4.i68 = icmp eq i32 %269, 0, !dbg !34
  %270 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.012.i67, float %259, float 0xBFC55B1720000000) #8, !dbg !34
  %271 = tail call float @llvm.nvvm.fma.rn.f(float %.012.i67, float %259, float 0xBFC55B1720000000) #8, !dbg !34
  %.09.i69 = select i1 %.not4.i68, float %271, float %270, !dbg !34
  %272 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #8, !dbg !34
  %.not5.i70 = icmp eq i32 %272, 0, !dbg !34
  %273 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i69, float %259, float 0x3FC99DA160000000) #8, !dbg !34
  %274 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i69, float %259, float 0x3FC99DA160000000) #8, !dbg !34
  %.05.i71 = select i1 %.not5.i70, float %274, float %273, !dbg !34
  %275 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #8, !dbg !34
  %.not6.i72 = icmp eq i32 %275, 0, !dbg !34
  %276 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i71, float %259, float 0xBFCFFFE440000000) #8, !dbg !34
  %277 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i71, float %259, float 0xBFCFFFE440000000) #8, !dbg !34
  %.01.i73 = select i1 %.not6.i72, float %277, float %276, !dbg !34
  %278 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #8, !dbg !34
  %.not7.i74 = icmp eq i32 %278, 0, !dbg !34
  %279 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01.i73, float %259, float 0x3FD5554F00000000) #8, !dbg !34
  %280 = tail call float @llvm.nvvm.fma.rn.f(float %.01.i73, float %259, float 0x3FD5554F00000000) #8, !dbg !34
  %.0.i75 = select i1 %.not7.i74, float %280, float %279, !dbg !34
  %281 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #8, !dbg !34
  %.not8.i76 = icmp eq i32 %281, 0, !dbg !34
  %282 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i75, float %259, float -5.000000e-01) #8, !dbg !34
  %283 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i75, float %259, float -5.000000e-01) #8, !dbg !34
  %.07.i77 = select i1 %.not8.i76, float %283, float %282, !dbg !34
  %284 = fmul float %259, %.07.i77, !dbg !34
  %285 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #8, !dbg !34
  %.not9.i78 = icmp eq i32 %285, 0, !dbg !34
  %286 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %284, float %259, float %259) #8, !dbg !34
  %287 = tail call float @llvm.nvvm.fma.rn.f(float %284, float %259, float %259) #8, !dbg !34
  %.06.i79 = select i1 %.not9.i78, float %287, float %286, !dbg !34
  %288 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #8, !dbg !34
  %.not10.i80 = icmp eq i32 %288, 0, !dbg !34
  %289 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i61, float 0x3FE62E4300000000, float %.06.i79) #8, !dbg !34
  %290 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i61, float 0x3FE62E4300000000, float %.06.i79) #8, !dbg !34
  %.04.i81 = select i1 %.not10.i80, float %290, float %289, !dbg !34
  %291 = icmp samesign ugt i32 %250, 2139095039, !dbg !34
  br i1 %291, label %__nv_fmaf_rn.exit.i.i84, label %__nv_logf.exit87, !dbg !34

__nv_fmaf_rn.exit.i.i84:                          ; preds = %__nv_logf.exit57
  %292 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #8, !dbg !34
  %.not11.i85 = icmp eq i32 %292, 0, !dbg !34
  %293 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i58, float 0x7FF0000000000000, float 0x7FF0000000000000) #8, !dbg !34
  %294 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i58, float 0x7FF0000000000000, float 0x7FF0000000000000) #8, !dbg !34
  %.03.i86 = select i1 %.not11.i85, float %294, float %293, !dbg !34
  br label %__nv_logf.exit87, !dbg !34

__nv_logf.exit87:                                 ; preds = %__nv_logf.exit57, %__nv_fmaf_rn.exit.i.i84
  %r.i.0.i82 = phi float [ %.03.i86, %__nv_fmaf_rn.exit.i.i84 ], [ %.04.i81, %__nv_logf.exit57 ], !dbg !34
  %295 = fcmp olt float %149, 0x3810000000000000, !dbg !34
  %296 = fmul float %149, 0x4160000000000000, !dbg !34
  %.02.i88 = select i1 %295, float %296, float %149, !dbg !34
  %297 = bitcast float %.02.i88 to i32, !dbg !34
  %298 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #8, !dbg !34
  %299 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #8, !dbg !34
  %300 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #8, !dbg !34
  %301 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #8, !dbg !34
  %302 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #8, !dbg !34
  %303 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #8, !dbg !34
  %304 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #8, !dbg !34
  %305 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #8, !dbg !34
  %306 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #8, !dbg !34
  %307 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #8, !dbg !34
  %308 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #8, !dbg !34
  %309 = icmp samesign ugt i32 %297, 2139095039, !dbg !34
  br i1 %309, label %__nv_fmaf_rn.exit.i.i114, label %__nv_logf.exit117, !dbg !34

__nv_fmaf_rn.exit.i.i114:                         ; preds = %__nv_logf.exit87
  %310 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #8, !dbg !34
  br label %__nv_logf.exit117, !dbg !34

__nv_logf.exit117:                                ; preds = %__nv_logf.exit87, %__nv_fmaf_rn.exit.i.i114
  %311 = fcmp olt float %150, 0x3810000000000000, !dbg !34
  %312 = fmul float %150, 0x4160000000000000, !dbg !34
  %.02.i118 = select i1 %311, float %312, float %150, !dbg !34
  %i.i.0.i119 = select i1 %311, float -2.300000e+01, float 0.000000e+00, !dbg !34
  %313 = bitcast float %.02.i118 to i32, !dbg !34
  %314 = add nsw i32 %313, -1059760811, !dbg !34
  %315 = and i32 %314, -8388608, !dbg !34
  %316 = sub i32 %313, %315, !dbg !34
  %317 = bitcast i32 %316 to float, !dbg !34
  %318 = sitofp i32 %315 to float, !dbg !34
  %319 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #8, !dbg !34
  %.not.i120 = icmp eq i32 %319, 0, !dbg !34
  %320 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %318, float 0x3E80000000000000, float %i.i.0.i119) #8, !dbg !34
  %321 = tail call float @llvm.nvvm.fma.rn.f(float %318, float 0x3E80000000000000, float %i.i.0.i119) #8, !dbg !34
  %.08.i121 = select i1 %.not.i120, float %321, float %320, !dbg !34
  %322 = fadd float %317, -1.000000e+00, !dbg !34
  %323 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #8, !dbg !34
  %.not1.i122 = icmp eq i32 %323, 0, !dbg !34
  %324 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0xBFC0AA04E0000000, float %322, float 0x3FC2073EC0000000) #8, !dbg !34
  %325 = tail call float @llvm.nvvm.fma.rn.f(float 0xBFC0AA04E0000000, float %322, float 0x3FC2073EC0000000) #8, !dbg !34
  %.010.i123 = select i1 %.not1.i122, float %325, float %324, !dbg !34
  %326 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #8, !dbg !34
  %.not2.i124 = icmp eq i32 %326, 0, !dbg !34
  %327 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i123, float %322, float 0xBFBF19B980000000) #8, !dbg !34
  %328 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i123, float %322, float 0xBFBF19B980000000) #8, !dbg !34
  %.011.i125 = select i1 %.not2.i124, float %328, float %327, !dbg !34
  %329 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #8, !dbg !34
  %.not3.i126 = icmp eq i32 %329, 0, !dbg !34
  %330 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i125, float %322, float 0x3FC1E52AA0000000) #8, !dbg !34
  %331 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i125, float %322, float 0x3FC1E52AA0000000) #8, !dbg !34
  %.012.i127 = select i1 %.not3.i126, float %331, float %330, !dbg !34
  %332 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #8, !dbg !34
  %.not4.i128 = icmp eq i32 %332, 0, !dbg !34
  %333 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.012.i127, float %322, float 0xBFC55B1720000000) #8, !dbg !34
  %334 = tail call float @llvm.nvvm.fma.rn.f(float %.012.i127, float %322, float 0xBFC55B1720000000) #8, !dbg !34
  %.09.i129 = select i1 %.not4.i128, float %334, float %333, !dbg !34
  %335 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #8, !dbg !34
  %.not5.i130 = icmp eq i32 %335, 0, !dbg !34
  %336 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i129, float %322, float 0x3FC99DA160000000) #8, !dbg !34
  %337 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i129, float %322, float 0x3FC99DA160000000) #8, !dbg !34
  %.05.i131 = select i1 %.not5.i130, float %337, float %336, !dbg !34
  %338 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #8, !dbg !34
  %.not6.i132 = icmp eq i32 %338, 0, !dbg !34
  %339 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i131, float %322, float 0xBFCFFFE440000000) #8, !dbg !34
  %340 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i131, float %322, float 0xBFCFFFE440000000) #8, !dbg !34
  %.01.i133 = select i1 %.not6.i132, float %340, float %339, !dbg !34
  %341 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #8, !dbg !34
  %.not7.i134 = icmp eq i32 %341, 0, !dbg !34
  %342 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01.i133, float %322, float 0x3FD5554F00000000) #8, !dbg !34
  %343 = tail call float @llvm.nvvm.fma.rn.f(float %.01.i133, float %322, float 0x3FD5554F00000000) #8, !dbg !34
  %.0.i135 = select i1 %.not7.i134, float %343, float %342, !dbg !34
  %344 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #8, !dbg !34
  %.not8.i136 = icmp eq i32 %344, 0, !dbg !34
  %345 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i135, float %322, float -5.000000e-01) #8, !dbg !34
  %346 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i135, float %322, float -5.000000e-01) #8, !dbg !34
  %.07.i137 = select i1 %.not8.i136, float %346, float %345, !dbg !34
  %347 = fmul float %322, %.07.i137, !dbg !34
  %348 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #8, !dbg !34
  %.not9.i138 = icmp eq i32 %348, 0, !dbg !34
  %349 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %347, float %322, float %322) #8, !dbg !34
  %350 = tail call float @llvm.nvvm.fma.rn.f(float %347, float %322, float %322) #8, !dbg !34
  %.06.i139 = select i1 %.not9.i138, float %350, float %349, !dbg !34
  %351 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #8, !dbg !34
  %.not10.i140 = icmp eq i32 %351, 0, !dbg !34
  %352 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i121, float 0x3FE62E4300000000, float %.06.i139) #8, !dbg !34
  %353 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i121, float 0x3FE62E4300000000, float %.06.i139) #8, !dbg !34
  %.04.i141 = select i1 %.not10.i140, float %353, float %352, !dbg !34
  %354 = icmp samesign ugt i32 %313, 2139095039, !dbg !34
  br i1 %354, label %__nv_fmaf_rn.exit.i.i144, label %__nv_logf.exit147, !dbg !34

__nv_fmaf_rn.exit.i.i144:                         ; preds = %__nv_logf.exit117
  %355 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #8, !dbg !34
  %.not11.i145 = icmp eq i32 %355, 0, !dbg !34
  %356 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i118, float 0x7FF0000000000000, float 0x7FF0000000000000) #8, !dbg !34
  %357 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i118, float 0x7FF0000000000000, float 0x7FF0000000000000) #8, !dbg !34
  %.03.i146 = select i1 %.not11.i145, float %357, float %356, !dbg !34
  br label %__nv_logf.exit147, !dbg !34

__nv_logf.exit147:                                ; preds = %__nv_logf.exit117, %__nv_fmaf_rn.exit.i.i144
  %r.i.0.i142 = phi float [ %.03.i146, %__nv_fmaf_rn.exit.i.i144 ], [ %.04.i141, %__nv_logf.exit117 ], !dbg !34
  %358 = fcmp olt float %151, 0x3810000000000000, !dbg !34
  %359 = fmul float %151, 0x4160000000000000, !dbg !34
  %.02.i148 = select i1 %358, float %359, float %151, !dbg !34
  %i.i.0.i149 = select i1 %358, float -2.300000e+01, float 0.000000e+00, !dbg !34
  %360 = bitcast float %.02.i148 to i32, !dbg !34
  %361 = add nsw i32 %360, -1059760811, !dbg !34
  %362 = and i32 %361, -8388608, !dbg !34
  %363 = sub i32 %360, %362, !dbg !34
  %364 = bitcast i32 %363 to float, !dbg !34
  %365 = sitofp i32 %362 to float, !dbg !34
  %366 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #8, !dbg !34
  %.not.i150 = icmp eq i32 %366, 0, !dbg !34
  %367 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %365, float 0x3E80000000000000, float %i.i.0.i149) #8, !dbg !34
  %368 = tail call float @llvm.nvvm.fma.rn.f(float %365, float 0x3E80000000000000, float %i.i.0.i149) #8, !dbg !34
  %.08.i151 = select i1 %.not.i150, float %368, float %367, !dbg !34
  %369 = fadd float %364, -1.000000e+00, !dbg !34
  %370 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #8, !dbg !34
  %.not1.i152 = icmp eq i32 %370, 0, !dbg !34
  %371 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0xBFC0AA04E0000000, float %369, float 0x3FC2073EC0000000) #8, !dbg !34
  %372 = tail call float @llvm.nvvm.fma.rn.f(float 0xBFC0AA04E0000000, float %369, float 0x3FC2073EC0000000) #8, !dbg !34
  %.010.i153 = select i1 %.not1.i152, float %372, float %371, !dbg !34
  %373 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #8, !dbg !34
  %.not2.i154 = icmp eq i32 %373, 0, !dbg !34
  %374 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i153, float %369, float 0xBFBF19B980000000) #8, !dbg !34
  %375 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i153, float %369, float 0xBFBF19B980000000) #8, !dbg !34
  %.011.i155 = select i1 %.not2.i154, float %375, float %374, !dbg !34
  %376 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #8, !dbg !34
  %.not3.i156 = icmp eq i32 %376, 0, !dbg !34
  %377 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i155, float %369, float 0x3FC1E52AA0000000) #8, !dbg !34
  %378 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i155, float %369, float 0x3FC1E52AA0000000) #8, !dbg !34
  %.012.i157 = select i1 %.not3.i156, float %378, float %377, !dbg !34
  %379 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #8, !dbg !34
  %.not4.i158 = icmp eq i32 %379, 0, !dbg !34
  %380 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.012.i157, float %369, float 0xBFC55B1720000000) #8, !dbg !34
  %381 = tail call float @llvm.nvvm.fma.rn.f(float %.012.i157, float %369, float 0xBFC55B1720000000) #8, !dbg !34
  %.09.i159 = select i1 %.not4.i158, float %381, float %380, !dbg !34
  %382 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #8, !dbg !34
  %.not5.i160 = icmp eq i32 %382, 0, !dbg !34
  %383 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i159, float %369, float 0x3FC99DA160000000) #8, !dbg !34
  %384 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i159, float %369, float 0x3FC99DA160000000) #8, !dbg !34
  %.05.i161 = select i1 %.not5.i160, float %384, float %383, !dbg !34
  %385 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #8, !dbg !34
  %.not6.i162 = icmp eq i32 %385, 0, !dbg !34
  %386 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i161, float %369, float 0xBFCFFFE440000000) #8, !dbg !34
  %387 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i161, float %369, float 0xBFCFFFE440000000) #8, !dbg !34
  %.01.i163 = select i1 %.not6.i162, float %387, float %386, !dbg !34
  %388 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #8, !dbg !34
  %.not7.i164 = icmp eq i32 %388, 0, !dbg !34
  %389 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01.i163, float %369, float 0x3FD5554F00000000) #8, !dbg !34
  %390 = tail call float @llvm.nvvm.fma.rn.f(float %.01.i163, float %369, float 0x3FD5554F00000000) #8, !dbg !34
  %.0.i165 = select i1 %.not7.i164, float %390, float %389, !dbg !34
  %391 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #8, !dbg !34
  %.not8.i166 = icmp eq i32 %391, 0, !dbg !34
  %392 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i165, float %369, float -5.000000e-01) #8, !dbg !34
  %393 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i165, float %369, float -5.000000e-01) #8, !dbg !34
  %.07.i167 = select i1 %.not8.i166, float %393, float %392, !dbg !34
  %394 = fmul float %369, %.07.i167, !dbg !34
  %395 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #8, !dbg !34
  %.not9.i168 = icmp eq i32 %395, 0, !dbg !34
  %396 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %394, float %369, float %369) #8, !dbg !34
  %397 = tail call float @llvm.nvvm.fma.rn.f(float %394, float %369, float %369) #8, !dbg !34
  %.06.i169 = select i1 %.not9.i168, float %397, float %396, !dbg !34
  %398 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #8, !dbg !34
  %.not10.i170 = icmp eq i32 %398, 0, !dbg !34
  %399 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i151, float 0x3FE62E4300000000, float %.06.i169) #8, !dbg !34
  %400 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i151, float 0x3FE62E4300000000, float %.06.i169) #8, !dbg !34
  %.04.i171 = select i1 %.not10.i170, float %400, float %399, !dbg !34
  %401 = icmp samesign ugt i32 %360, 2139095039, !dbg !34
  br i1 %401, label %__nv_fmaf_rn.exit.i.i174, label %__nv_logf.exit177, !dbg !34

__nv_fmaf_rn.exit.i.i174:                         ; preds = %__nv_logf.exit147
  %402 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #8, !dbg !34
  %.not11.i175 = icmp eq i32 %402, 0, !dbg !34
  %403 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i148, float 0x7FF0000000000000, float 0x7FF0000000000000) #8, !dbg !34
  %404 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i148, float 0x7FF0000000000000, float 0x7FF0000000000000) #8, !dbg !34
  %.03.i176 = select i1 %.not11.i175, float %404, float %403, !dbg !34
  br label %__nv_logf.exit177, !dbg !34

__nv_logf.exit177:                                ; preds = %__nv_logf.exit147, %__nv_fmaf_rn.exit.i.i174
  %r.i.0.i172 = phi float [ %.03.i176, %__nv_fmaf_rn.exit.i.i174 ], [ %.04.i171, %__nv_logf.exit147 ], !dbg !34
  %405 = fcmp olt float %152, 0x3810000000000000, !dbg !34
  %406 = fmul float %152, 0x4160000000000000, !dbg !34
  %.02.i178 = select i1 %405, float %406, float %152, !dbg !34
  %i.i.0.i179 = select i1 %405, float -2.300000e+01, float 0.000000e+00, !dbg !34
  %407 = bitcast float %.02.i178 to i32, !dbg !34
  %408 = add nsw i32 %407, -1059760811, !dbg !34
  %409 = and i32 %408, -8388608, !dbg !34
  %410 = sub i32 %407, %409, !dbg !34
  %411 = bitcast i32 %410 to float, !dbg !34
  %412 = sitofp i32 %409 to float, !dbg !34
  %413 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #8, !dbg !34
  %.not.i180 = icmp eq i32 %413, 0, !dbg !34
  %414 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %412, float 0x3E80000000000000, float %i.i.0.i179) #8, !dbg !34
  %415 = tail call float @llvm.nvvm.fma.rn.f(float %412, float 0x3E80000000000000, float %i.i.0.i179) #8, !dbg !34
  %.08.i181 = select i1 %.not.i180, float %415, float %414, !dbg !34
  %416 = fadd float %411, -1.000000e+00, !dbg !34
  %417 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #8, !dbg !34
  %.not1.i182 = icmp eq i32 %417, 0, !dbg !34
  %418 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0xBFC0AA04E0000000, float %416, float 0x3FC2073EC0000000) #8, !dbg !34
  %419 = tail call float @llvm.nvvm.fma.rn.f(float 0xBFC0AA04E0000000, float %416, float 0x3FC2073EC0000000) #8, !dbg !34
  %.010.i183 = select i1 %.not1.i182, float %419, float %418, !dbg !34
  %420 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #8, !dbg !34
  %.not2.i184 = icmp eq i32 %420, 0, !dbg !34
  %421 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i183, float %416, float 0xBFBF19B980000000) #8, !dbg !34
  %422 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i183, float %416, float 0xBFBF19B980000000) #8, !dbg !34
  %.011.i185 = select i1 %.not2.i184, float %422, float %421, !dbg !34
  %423 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #8, !dbg !34
  %.not3.i186 = icmp eq i32 %423, 0, !dbg !34
  %424 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i185, float %416, float 0x3FC1E52AA0000000) #8, !dbg !34
  %425 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i185, float %416, float 0x3FC1E52AA0000000) #8, !dbg !34
  %.012.i187 = select i1 %.not3.i186, float %425, float %424, !dbg !34
  %426 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #8, !dbg !34
  %.not4.i188 = icmp eq i32 %426, 0, !dbg !34
  %427 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.012.i187, float %416, float 0xBFC55B1720000000) #8, !dbg !34
  %428 = tail call float @llvm.nvvm.fma.rn.f(float %.012.i187, float %416, float 0xBFC55B1720000000) #8, !dbg !34
  %.09.i189 = select i1 %.not4.i188, float %428, float %427, !dbg !34
  %429 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #8, !dbg !34
  %.not5.i190 = icmp eq i32 %429, 0, !dbg !34
  %430 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i189, float %416, float 0x3FC99DA160000000) #8, !dbg !34
  %431 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i189, float %416, float 0x3FC99DA160000000) #8, !dbg !34
  %.05.i191 = select i1 %.not5.i190, float %431, float %430, !dbg !34
  %432 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #8, !dbg !34
  %.not6.i192 = icmp eq i32 %432, 0, !dbg !34
  %433 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i191, float %416, float 0xBFCFFFE440000000) #8, !dbg !34
  %434 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i191, float %416, float 0xBFCFFFE440000000) #8, !dbg !34
  %.01.i193 = select i1 %.not6.i192, float %434, float %433, !dbg !34
  %435 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #8, !dbg !34
  %.not7.i194 = icmp eq i32 %435, 0, !dbg !34
  %436 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01.i193, float %416, float 0x3FD5554F00000000) #8, !dbg !34
  %437 = tail call float @llvm.nvvm.fma.rn.f(float %.01.i193, float %416, float 0x3FD5554F00000000) #8, !dbg !34
  %.0.i195 = select i1 %.not7.i194, float %437, float %436, !dbg !34
  %438 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #8, !dbg !34
  %.not8.i196 = icmp eq i32 %438, 0, !dbg !34
  %439 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i195, float %416, float -5.000000e-01) #8, !dbg !34
  %440 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i195, float %416, float -5.000000e-01) #8, !dbg !34
  %.07.i197 = select i1 %.not8.i196, float %440, float %439, !dbg !34
  %441 = fmul float %416, %.07.i197, !dbg !34
  %442 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #8, !dbg !34
  %.not9.i198 = icmp eq i32 %442, 0, !dbg !34
  %443 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %441, float %416, float %416) #8, !dbg !34
  %444 = tail call float @llvm.nvvm.fma.rn.f(float %441, float %416, float %416) #8, !dbg !34
  %.06.i199 = select i1 %.not9.i198, float %444, float %443, !dbg !34
  %445 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #8, !dbg !34
  %.not10.i200 = icmp eq i32 %445, 0, !dbg !34
  %446 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i181, float 0x3FE62E4300000000, float %.06.i199) #8, !dbg !34
  %447 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i181, float 0x3FE62E4300000000, float %.06.i199) #8, !dbg !34
  %.04.i201 = select i1 %.not10.i200, float %447, float %446, !dbg !34
  %448 = icmp samesign ugt i32 %407, 2139095039, !dbg !34
  br i1 %448, label %__nv_fmaf_rn.exit.i.i204, label %__nv_logf.exit207, !dbg !34

__nv_fmaf_rn.exit.i.i204:                         ; preds = %__nv_logf.exit177
  %449 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #8, !dbg !34
  %.not11.i205 = icmp eq i32 %449, 0, !dbg !34
  %450 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i178, float 0x7FF0000000000000, float 0x7FF0000000000000) #8, !dbg !34
  %451 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i178, float 0x7FF0000000000000, float 0x7FF0000000000000) #8, !dbg !34
  %.03.i206 = select i1 %.not11.i205, float %451, float %450, !dbg !34
  br label %__nv_logf.exit207, !dbg !34

__nv_logf.exit207:                                ; preds = %__nv_logf.exit177, %__nv_fmaf_rn.exit.i.i204
  %r.i.0.i202 = phi float [ %.03.i206, %__nv_fmaf_rn.exit.i.i204 ], [ %.04.i201, %__nv_logf.exit177 ], !dbg !34
  %452 = fcmp olt float %153, 0x3810000000000000, !dbg !34
  %453 = fmul float %153, 0x4160000000000000, !dbg !34
  %.02.i208 = select i1 %452, float %453, float %153, !dbg !34
  %i.i.0.i209 = select i1 %452, float -2.300000e+01, float 0.000000e+00, !dbg !34
  %454 = bitcast float %.02.i208 to i32, !dbg !34
  %455 = add nsw i32 %454, -1059760811, !dbg !34
  %456 = and i32 %455, -8388608, !dbg !34
  %457 = sub i32 %454, %456, !dbg !34
  %458 = bitcast i32 %457 to float, !dbg !34
  %459 = sitofp i32 %456 to float, !dbg !34
  %460 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #8, !dbg !34
  %.not.i210 = icmp eq i32 %460, 0, !dbg !34
  %461 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %459, float 0x3E80000000000000, float %i.i.0.i209) #8, !dbg !34
  %462 = tail call float @llvm.nvvm.fma.rn.f(float %459, float 0x3E80000000000000, float %i.i.0.i209) #8, !dbg !34
  %.08.i211 = select i1 %.not.i210, float %462, float %461, !dbg !34
  %463 = fadd float %458, -1.000000e+00, !dbg !34
  %464 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #8, !dbg !34
  %.not1.i212 = icmp eq i32 %464, 0, !dbg !34
  %465 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0xBFC0AA04E0000000, float %463, float 0x3FC2073EC0000000) #8, !dbg !34
  %466 = tail call float @llvm.nvvm.fma.rn.f(float 0xBFC0AA04E0000000, float %463, float 0x3FC2073EC0000000) #8, !dbg !34
  %.010.i213 = select i1 %.not1.i212, float %466, float %465, !dbg !34
  %467 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #8, !dbg !34
  %.not2.i214 = icmp eq i32 %467, 0, !dbg !34
  %468 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i213, float %463, float 0xBFBF19B980000000) #8, !dbg !34
  %469 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i213, float %463, float 0xBFBF19B980000000) #8, !dbg !34
  %.011.i215 = select i1 %.not2.i214, float %469, float %468, !dbg !34
  %470 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #8, !dbg !34
  %.not3.i216 = icmp eq i32 %470, 0, !dbg !34
  %471 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i215, float %463, float 0x3FC1E52AA0000000) #8, !dbg !34
  %472 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i215, float %463, float 0x3FC1E52AA0000000) #8, !dbg !34
  %.012.i217 = select i1 %.not3.i216, float %472, float %471, !dbg !34
  %473 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #8, !dbg !34
  %.not4.i218 = icmp eq i32 %473, 0, !dbg !34
  %474 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.012.i217, float %463, float 0xBFC55B1720000000) #8, !dbg !34
  %475 = tail call float @llvm.nvvm.fma.rn.f(float %.012.i217, float %463, float 0xBFC55B1720000000) #8, !dbg !34
  %.09.i219 = select i1 %.not4.i218, float %475, float %474, !dbg !34
  %476 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #8, !dbg !34
  %.not5.i220 = icmp eq i32 %476, 0, !dbg !34
  %477 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i219, float %463, float 0x3FC99DA160000000) #8, !dbg !34
  %478 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i219, float %463, float 0x3FC99DA160000000) #8, !dbg !34
  %.05.i221 = select i1 %.not5.i220, float %478, float %477, !dbg !34
  %479 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #8, !dbg !34
  %.not6.i222 = icmp eq i32 %479, 0, !dbg !34
  %480 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i221, float %463, float 0xBFCFFFE440000000) #8, !dbg !34
  %481 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i221, float %463, float 0xBFCFFFE440000000) #8, !dbg !34
  %.01.i223 = select i1 %.not6.i222, float %481, float %480, !dbg !34
  %482 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #8, !dbg !34
  %.not7.i224 = icmp eq i32 %482, 0, !dbg !34
  %483 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01.i223, float %463, float 0x3FD5554F00000000) #8, !dbg !34
  %484 = tail call float @llvm.nvvm.fma.rn.f(float %.01.i223, float %463, float 0x3FD5554F00000000) #8, !dbg !34
  %.0.i225 = select i1 %.not7.i224, float %484, float %483, !dbg !34
  %485 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #8, !dbg !34
  %.not8.i226 = icmp eq i32 %485, 0, !dbg !34
  %486 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i225, float %463, float -5.000000e-01) #8, !dbg !34
  %487 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i225, float %463, float -5.000000e-01) #8, !dbg !34
  %.07.i227 = select i1 %.not8.i226, float %487, float %486, !dbg !34
  %488 = fmul float %463, %.07.i227, !dbg !34
  %489 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #8, !dbg !34
  %.not9.i228 = icmp eq i32 %489, 0, !dbg !34
  %490 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %488, float %463, float %463) #8, !dbg !34
  %491 = tail call float @llvm.nvvm.fma.rn.f(float %488, float %463, float %463) #8, !dbg !34
  %.06.i229 = select i1 %.not9.i228, float %491, float %490, !dbg !34
  %492 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #8, !dbg !34
  %.not10.i230 = icmp eq i32 %492, 0, !dbg !34
  %493 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i211, float 0x3FE62E4300000000, float %.06.i229) #8, !dbg !34
  %494 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i211, float 0x3FE62E4300000000, float %.06.i229) #8, !dbg !34
  %.04.i231 = select i1 %.not10.i230, float %494, float %493, !dbg !34
  %495 = icmp samesign ugt i32 %454, 2139095039, !dbg !34
  br i1 %495, label %__nv_fmaf_rn.exit.i.i234, label %__nv_logf.exit237, !dbg !34

__nv_fmaf_rn.exit.i.i234:                         ; preds = %__nv_logf.exit207
  %496 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #8, !dbg !34
  %.not11.i235 = icmp eq i32 %496, 0, !dbg !34
  %497 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i208, float 0x7FF0000000000000, float 0x7FF0000000000000) #8, !dbg !34
  %498 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i208, float 0x7FF0000000000000, float 0x7FF0000000000000) #8, !dbg !34
  %.03.i236 = select i1 %.not11.i235, float %498, float %497, !dbg !34
  br label %__nv_logf.exit237, !dbg !34

__nv_logf.exit237:                                ; preds = %__nv_logf.exit207, %__nv_fmaf_rn.exit.i.i234
  %r.i.0.i232 = phi float [ %.03.i236, %__nv_fmaf_rn.exit.i.i234 ], [ %.04.i231, %__nv_logf.exit207 ], !dbg !34
  %499 = insertelement <4 x float> poison, float %r.i.0.i142, i64 0, !dbg !35
  %500 = insertelement <4 x float> %499, float %r.i.0.i172, i64 1, !dbg !35
  %501 = insertelement <4 x float> %500, float %r.i.0.i202, i64 2, !dbg !35
  %502 = insertelement <4 x float> %501, float %r.i.0.i232, i64 3, !dbg !35
  %503 = fmul <4 x float> %502, splat (float 0x3FDEC709E0000000), !dbg !35
  %504 = fmul <4 x float> %503, splat (float 1.600000e+01), !dbg !36
  %505 = fptosi <4 x float> %504 to <4 x i64>, !dbg !37
  %506 = add <4 x i64> %505, splat (i64 16), !dbg !38
  %507 = tail call <4 x i64> @llvm.smin.v4i64(<4 x i64> %506, <4 x i64> splat (i64 31)), !dbg !39
  %508 = select <4 x i1> %133, <4 x i64> %132, <4 x i64> %507, !dbg !43
  %509 = lshr <4 x i64> %508, splat (i64 58), !dbg !44
  %510 = and <4 x i64> %509, splat (i64 32), !dbg !44
  %511 = add nsw <4 x i64> %510, %508, !dbg !44
  %512 = icmp ugt <4 x i64> %511, splat (i64 31), !dbg !45
  %513 = and <4 x i1> %27, %512, !dbg !46
  %514 = bitcast <4 x i1> %513 to i4, !dbg !47
  %515 = icmp ne i4 %514, 0, !dbg !47
  %516 = and i1 %39, %515, !dbg !47
  br i1 %516, label %517, label %518, !dbg !47

517:                                              ; preds = %__nv_logf.exit237
  tail call void @__assertfail(ptr nonnull @assertMessage_0, ptr nonnull @assertFile_0, i32 60, ptr nonnull @assertFunc_0, i64 1), !dbg !47
  unreachable, !dbg !47

518:                                              ; preds = %__nv_logf.exit237
  %519 = fcmp oeq float %.02.i58, 0.000000e+00, !dbg !34
  %520 = fcmp oeq float %.02.i28, 0.000000e+00, !dbg !34
  %521 = fcmp oeq float %.02.i, 0.000000e+00, !dbg !34
  %522 = zext nneg i32 %125 to i64, !dbg !31
  %523 = icmp sgt i32 %116, -16, !dbg !31
  %524 = zext nneg i32 %124 to i64, !dbg !31
  %525 = fmul float %r.i.0.i82, 0x3FDEC709E0000000, !dbg !35
  %526 = fmul float %525, 1.600000e+01, !dbg !36
  %527 = select i1 %519, float 0xFFF0000000000000, float %526, !dbg !34
  %528 = fptosi float %527 to i64, !dbg !37
  %529 = add i64 %528, 16, !dbg !38
  %530 = tail call i64 @llvm.smin.i64(i64 %529, i64 31), !dbg !39
  %531 = select i1 %523, i64 %524, i64 %530, !dbg !43
  %532 = lshr i64 %531, 58, !dbg !44
  %533 = and i64 %532, 32, !dbg !44
  %534 = add nsw i64 %533, %531, !dbg !44
  %535 = icmp sgt i32 %115, -16, !dbg !31
  %536 = zext nneg i32 %123 to i64, !dbg !31
  %537 = fmul float %r.i.0.i52, 0x3FDEC709E0000000, !dbg !35
  %538 = fmul float %537, 1.600000e+01, !dbg !36
  %539 = select i1 %520, float 0xFFF0000000000000, float %538, !dbg !34
  %540 = fptosi float %539 to i64, !dbg !37
  %541 = add i64 %540, 16, !dbg !38
  %542 = tail call i64 @llvm.smin.i64(i64 %541, i64 31), !dbg !39
  %543 = select i1 %535, i64 %536, i64 %542, !dbg !43
  %544 = lshr i64 %543, 58, !dbg !44
  %545 = and i64 %544, 32, !dbg !44
  %546 = add nsw i64 %545, %543, !dbg !44
  %547 = icmp sgt i32 %114, -16, !dbg !31
  %548 = zext nneg i32 %122 to i64, !dbg !31
  %549 = fmul float %r.i.0.i, 0x3FDEC709E0000000, !dbg !35
  %550 = fmul float %549, 1.600000e+01, !dbg !36
  %551 = select i1 %521, float 0xFFF0000000000000, float %550, !dbg !34
  %552 = fptosi float %551 to i64, !dbg !37
  %553 = add i64 %552, 16, !dbg !38
  %554 = tail call i64 @llvm.smin.i64(i64 %553, i64 31), !dbg !39
  %555 = select i1 %547, i64 %548, i64 %554, !dbg !43
  %556 = lshr i64 %555, 58, !dbg !44
  %557 = and i64 %556, 32, !dbg !44
  %558 = add nsw i64 %557, %555, !dbg !44
  %559 = icmp samesign ult i32 %34, 50, !dbg !16
  %560 = icmp slt i32 %14, 400, !dbg !14
  %561 = and i1 %560, %559, !dbg !22
  %562 = and i32 %10, 24, !dbg !12
  tail call void @llvm.nvvm.barrier.cta.sync.aligned.all(i32 0), !dbg !47
  %563 = sext i32 %44 to i64, !dbg !48
  %.idx = shl i64 %558, 5, !dbg !49
  %564 = getelementptr i8, ptr addrspace(1) %1, i64 %.idx, !dbg !49
  %565 = getelementptr float, ptr addrspace(1) %564, i64 %563, !dbg !49
  %.idx19 = shl i64 %546, 5, !dbg !49
  %566 = getelementptr i8, ptr addrspace(1) %1, i64 %.idx19, !dbg !49
  %567 = getelementptr float, ptr addrspace(1) %566, i64 %563, !dbg !49
  %.idx20 = shl i64 %534, 5, !dbg !49
  %568 = getelementptr i8, ptr addrspace(1) %1, i64 %.idx20, !dbg !49
  %569 = getelementptr float, ptr addrspace(1) %568, i64 %563, !dbg !49
  %.idx21 = shl nuw nsw i64 %522, 5, !dbg !49
  %570 = getelementptr i8, ptr addrspace(1) %1, i64 %.idx21, !dbg !49
  %571 = getelementptr float, ptr addrspace(1) %570, i64 %563, !dbg !49
  %572 = tail call i64 asm sideeffect "mov.u64 $0, 0x0;\0A\09createpolicy.fractional.L2::evict_last.b64 $0, 1.0;", "=l"() #8, !dbg !50
  %573 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$3 ld.global.L1::evict_last.L2::cache_hint.b32 { $0 }, [ $1 + 0 ], $2;", "=r,l,l,b"(ptr addrspace(1) %565, i64 %572, i1 %560) #8, !dbg !50
  %574 = bitcast i32 %573 to float, !dbg !50
  %575 = tail call i64 asm sideeffect "mov.u64 $0, 0x0;\0A\09createpolicy.fractional.L2::evict_last.b64 $0, 1.0;", "=l"() #8, !dbg !50
  %576 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$3 ld.global.L1::evict_last.L2::cache_hint.b32 { $0 }, [ $1 + 0 ], $2;", "=r,l,l,b"(ptr addrspace(1) %567, i64 %575, i1 %560) #8, !dbg !50
  %577 = bitcast i32 %576 to float, !dbg !50
  %578 = tail call i64 asm sideeffect "mov.u64 $0, 0x0;\0A\09createpolicy.fractional.L2::evict_last.b64 $0, 1.0;", "=l"() #8, !dbg !50
  %579 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$3 ld.global.L1::evict_last.L2::cache_hint.b32 { $0 }, [ $1 + 0 ], $2;", "=r,l,l,b"(ptr addrspace(1) %569, i64 %578, i1 %560) #8, !dbg !50
  %580 = bitcast i32 %579 to float, !dbg !50
  %581 = tail call i64 asm sideeffect "mov.u64 $0, 0x0;\0A\09createpolicy.fractional.L2::evict_last.b64 $0, 1.0;", "=l"() #8, !dbg !50
  %582 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$3 ld.global.L1::evict_last.L2::cache_hint.b32 { $0 }, [ $1 + 0 ], $2;", "=r,l,l,b"(ptr addrspace(1) %571, i64 %581, i1 %561) #8, !dbg !50
  %583 = bitcast i32 %582 to float, !dbg !50
  %584 = fadd float %110, %574, !dbg !51
  %585 = fadd float %111, %577, !dbg !51
  %586 = fadd float %112, %580, !dbg !51
  %587 = fadd float %113, %583, !dbg !51
  %588 = fadd float %83, %584, !dbg !52
  %589 = fadd float %85, %585, !dbg !52
  %590 = fadd float %87, %586, !dbg !52
  %591 = fadd float %89, %587, !dbg !52
  %592 = select i1 %560, float %588, float 0xFFF0000000000000, !dbg !53
  %593 = select i1 %560, float %589, float 0xFFF0000000000000, !dbg !53
  %594 = select i1 %560, float %590, float 0xFFF0000000000000, !dbg !53
  %595 = select i1 %561, float %591, float 0xFFF0000000000000, !dbg !53
  tail call void @llvm.nvvm.barrier.cta.sync.aligned.all(i32 0), !dbg !54
  %596 = fcmp ogt float %592, %593, !dbg !56
  %597 = fcmp uno float %592, 0.000000e+00, !dbg !57
  %598 = or i1 %597, %596, !dbg !58
  %599 = select i1 %598, float %592, float %593, !dbg !59
  %600 = fcmp ogt float %599, %594, !dbg !56
  %601 = fcmp uno float %599, 0.000000e+00, !dbg !57
  %602 = or i1 %600, %601, !dbg !58
  %603 = select i1 %602, float %599, float %594, !dbg !59
  %604 = fcmp ogt float %603, %595, !dbg !56
  %605 = fcmp uno float %603, 0.000000e+00, !dbg !57
  %606 = or i1 %604, %605, !dbg !58
  %607 = select i1 %606, float %603, float %595, !dbg !59
  %608 = bitcast float %607 to i32, !dbg !54
  %609 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %608, i32 16, i32 31), !dbg !54
  %610 = bitcast i32 %609 to float, !dbg !54
  %611 = fcmp ogt float %607, %610, !dbg !56
  %612 = fcmp uno float %607, 0.000000e+00, !dbg !57
  %613 = or i1 %611, %612, !dbg !58
  %614 = select i1 %613, float %607, float %610, !dbg !59
  %615 = bitcast float %614 to i32, !dbg !54
  %616 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %615, i32 8, i32 31), !dbg !54
  %617 = bitcast i32 %616 to float, !dbg !54
  %618 = fcmp ogt float %614, %617, !dbg !56
  %619 = fcmp uno float %614, 0.000000e+00, !dbg !57
  %620 = or i1 %618, %619, !dbg !58
  %621 = icmp eq i32 %562, 0, !dbg !54
  %.idx238 = shl nuw nsw i32 %11, 4, !dbg !54
  %622 = getelementptr i8, ptr addrspace(3) @global_smem, i32 %.idx238, !dbg !54
  %623 = getelementptr float, ptr addrspace(3) %622, i32 %13, !dbg !54
  %624 = select i1 %620, i32 %615, i32 %616, !dbg !59
  %625 = insertelement <1 x i32> poison, i32 %624, i64 0, !dbg !54
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %623, <1 x i32> %625, i1 %621) #8, !dbg !54
  tail call void @llvm.nvvm.barrier.cta.sync.aligned.all(i32 0), !dbg !54
  %626 = icmp samesign ult i32 %10, 32, !dbg !54
  %627 = getelementptr float, ptr addrspace(3) @global_smem, i32 %10, !dbg !54
  %628 = tail call i32 asm sideeffect "@$2 ld.shared.b32 $0, [ $1 + 0 ];", "=r,r,b"(ptr addrspace(3) %627, i1 %626) #8, !dbg !54
  %629 = bitcast i32 %628 to float, !dbg !54
  %630 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %628, i32 2, i32 31), !dbg !54
  %631 = bitcast i32 %630 to float, !dbg !54
  %632 = fcmp ogt float %629, %631, !dbg !56
  %633 = fcmp uno float %629, 0.000000e+00, !dbg !57
  %634 = or i1 %633, %632, !dbg !58
  %635 = select i1 %634, float %629, float %631, !dbg !59
  %636 = bitcast float %635 to i32, !dbg !54
  %637 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %636, i32 1, i32 31), !dbg !54
  %638 = bitcast i32 %637 to float, !dbg !54
  %639 = fcmp ogt float %635, %638, !dbg !56
  %640 = fcmp uno float %635, 0.000000e+00, !dbg !57
  %641 = or i1 %639, %640, !dbg !58
  %642 = and i32 %10, 995, !dbg !54
  %643 = icmp eq i32 %642, 0, !dbg !54
  %644 = select i1 %641, i32 %636, i32 %637, !dbg !59
  %645 = insertelement <1 x i32> poison, i32 %644, i64 0, !dbg !54
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %627, <1 x i32> %645, i1 %643) #8, !dbg !54
  tail call void @llvm.nvvm.barrier.cta.sync.aligned.all(i32 0), !dbg !54
  %646 = load float, ptr addrspace(3) %622, align 16, !dbg !54
  %647 = fsub float %588, %646, !dbg !60
  %648 = fsub float %589, %646, !dbg !60
  %649 = fsub float %590, %646, !dbg !60
  %650 = fsub float %591, %646, !dbg !60
  %651 = fmul float %647, 0x3FF7154760000000, !dbg !61
  %652 = tail call float @llvm.nvvm.ex2.approx.f(float %651), !dbg !61
  %653 = fmul float %648, 0x3FF7154760000000, !dbg !61
  %654 = tail call float @llvm.nvvm.ex2.approx.f(float %653), !dbg !61
  %655 = fmul float %649, 0x3FF7154760000000, !dbg !61
  %656 = tail call float @llvm.nvvm.ex2.approx.f(float %655), !dbg !61
  %657 = fmul float %650, 0x3FF7154760000000, !dbg !61
  %658 = tail call float @llvm.nvvm.ex2.approx.f(float %657), !dbg !61
  %659 = select i1 %561, float %658, float 0.000000e+00, !dbg !62
  tail call void @llvm.nvvm.barrier.cta.sync.aligned.all(i32 0), !dbg !63
  %660 = fadd float %652, %654, !dbg !67
  %661 = fadd float %660, %656, !dbg !67
  %662 = select i1 %560, float %661, float 0.000000e+00, !dbg !67
  %663 = fadd float %662, %659, !dbg !67
  %664 = bitcast float %663 to i32, !dbg !63
  %665 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %664, i32 16, i32 31), !dbg !63
  %666 = bitcast i32 %665 to float, !dbg !63
  %667 = fadd float %663, %666, !dbg !67
  %668 = bitcast float %667 to i32, !dbg !63
  %669 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %668, i32 8, i32 31), !dbg !63
  %670 = bitcast i32 %669 to float, !dbg !63
  %671 = fadd float %667, %670, !dbg !67
  %672 = bitcast float %671 to <1 x i32>, !dbg !63
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %623, <1 x i32> %672, i1 %621) #8, !dbg !63
  tail call void @llvm.nvvm.barrier.cta.sync.aligned.all(i32 0), !dbg !63
  %673 = tail call i32 asm sideeffect "@$2 ld.shared.b32 $0, [ $1 + 0 ];", "=r,r,b"(ptr addrspace(3) %627, i1 %626) #8, !dbg !63
  %674 = bitcast i32 %673 to float, !dbg !63
  %675 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %673, i32 2, i32 31), !dbg !63
  %676 = bitcast i32 %675 to float, !dbg !63
  %677 = fadd float %674, %676, !dbg !67
  %678 = bitcast float %677 to i32, !dbg !63
  %679 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %678, i32 1, i32 31), !dbg !63
  %680 = bitcast i32 %679 to float, !dbg !63
  %681 = fadd float %677, %680, !dbg !67
  %682 = bitcast float %681 to <1 x i32>, !dbg !63
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %627, <1 x i32> %682, i1 %643) #8, !dbg !63
  tail call void @llvm.nvvm.barrier.cta.sync.aligned.all(i32 0), !dbg !63
  %683 = load float, ptr addrspace(3) %622, align 16, !dbg !63
  %684 = tail call float @llvm.nvvm.div.full(float %652, float %683), !dbg !68
  %685 = tail call float @llvm.nvvm.div.full(float %654, float %683), !dbg !68
  %686 = tail call float @llvm.nvvm.div.full(float %656, float %683), !dbg !68
  %687 = tail call float @llvm.nvvm.div.full(float %658, float %683), !dbg !68
  %688 = mul i32 %40, 2528, !dbg !69
  %689 = mul i32 %42, 2528, !dbg !69
  %690 = add i32 %92, %688, !dbg !70
  %691 = add i32 %93, %689, !dbg !70
  %692 = sext i32 %690 to i64, !dbg !71
  %693 = getelementptr float, ptr addrspace(1) %3, i64 %692, !dbg !71
  %694 = sext i32 %691 to i64, !dbg !71
  %695 = getelementptr float, ptr addrspace(1) %3, i64 %694, !dbg !71
  tail call void @llvm.nvvm.barrier.cta.sync.aligned.all(i32 0), !dbg !72
  store float %684, ptr addrspace(3) %82, align 4, !dbg !72
  store float %685, ptr addrspace(3) %84, align 4, !dbg !72
  store float %686, ptr addrspace(3) %86, align 4, !dbg !72
  store float %687, ptr addrspace(3) %88, align 4, !dbg !72
  tail call void @llvm.nvvm.barrier.cta.sync.aligned.all(i32 0), !dbg !72
  %696 = load <2 x i32>, ptr addrspace(3) %75, align 8, !dbg !72
  %.extract = load i32, ptr addrspace(3) %68, align 8, !dbg !72
  %697 = getelementptr inbounds nuw i8, ptr addrspace(3) %68, i32 4, !dbg !72
  %.extract25 = load i32, ptr addrspace(3) %697, align 4, !dbg !72
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %.extract, i32 %.extract25, ptr addrspace(1) %693, i1 %54) #8, !dbg !72
  %.extract26 = extractelement <2 x i32> %696, i64 0, !dbg !72
  %.extract27 = extractelement <2 x i32> %696, i64 1, !dbg !72
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %.extract26, i32 %.extract27, ptr addrspace(1) %695, i1 %55) #8, !dbg !72
  ret void, !dbg !73
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef range(i32 0, 2147483647) i32 @llvm.nvvm.read.ptx.sreg.ctaid.x() #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef range(i32 0, 1024) i32 @llvm.nvvm.read.ptx.sreg.tid.x() #2

; Function Attrs: convergent nocallback nounwind
declare void @llvm.nvvm.barrier.cta.sync.aligned.all(i32) #3

; Function Attrs: convergent nocallback nounwind memory(inaccessiblemem: readwrite)
declare i32 @llvm.nvvm.shfl.sync.bfly.i32(i32, i32, i32, i32) #4

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.ex2.approx.f(float) #5

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.div.full(float, float) #5

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #6

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.ftz.f(float, float, float) #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.f(float, float, float) #2

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.smin.i32(i32, i32) #7

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i64 @llvm.smin.i64(i64, i64) #7

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare <4 x i32> @llvm.smin.v4i32(<4 x i32>, <4 x i32>) #7

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare <4 x i64> @llvm.smin.v4i64(<4 x i64>, <4 x i64>) #7

attributes #0 = { noreturn }
attributes #1 = { "nvvm.reqntid"="128" }
attributes #2 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #3 = { convergent nocallback nounwind }
attributes #4 = { convergent nocallback nounwind memory(inaccessiblemem: readwrite) }
attributes #5 = { mustprogress nocallback nofree nosync nounwind willreturn memory(none) }
attributes #6 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #8 = { nounwind }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!2, !3}
!llvm.ident = !{!4}

!0 = distinct !DICompileUnit(language: DW_LANG_C, file: !1, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!1 = !DIFile(filename: "cgscz7snavm33fdoafcgbjt7z3jguuay3yszv3klt6rj5gv776id.py", directory: "/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/gs")
!2 = !{i32 2, !"Debug Info Version", i32 3}
!3 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!4 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!5 = !DISubprogram(name: "__assertfail", linkageName: "__assertfail", scope: !6, file: !6, type: !7, spFlags: DISPFlagOptimized)
!6 = !DIFile(filename: "<unknown>", directory: "")
!7 = !DISubroutineType(cc: DW_CC_normal, types: !8)
!8 = !{}
!9 = distinct !DISubprogram(name: "triton_per_fused__softmax_add_0", linkageName: "triton_per_fused__softmax_add_0", scope: !1, file: !1, line: 18, type: !7, scopeLine: 18, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0)
!10 = !DILocation(line: 24, column: 28, scope: !9)
!11 = !DILocation(line: 24, column: 33, scope: !9)
!12 = !DILocation(line: 25, column: 44, scope: !9)
!13 = !DILocation(line: 25, column: 23, scope: !9)
!14 = !DILocation(line: 26, column: 21, scope: !9)
!15 = !DILocation(line: 27, column: 38, scope: !9)
!16 = !DILocation(line: 29, column: 25, scope: !9)
!17 = !DILocation(line: 35, column: 19, scope: !9)
!18 = !DILocation(line: 34, column: 19, scope: !9)
!19 = !DILocation(line: 36, column: 40, scope: !9)
!20 = !DILocation(line: 36, column: 37, scope: !9)
!21 = !DILocation(line: 36, column: 30, scope: !9)
!22 = !DILocation(line: 36, column: 55, scope: !9)
!23 = !DILocation(line: 36, column: 45, scope: !9)
!24 = !DILocation(line: 37, column: 41, scope: !9)
!25 = !DILocation(line: 37, column: 38, scope: !9)
!26 = !DILocation(line: 37, column: 31, scope: !9)
!27 = !DILocation(line: 37, column: 46, scope: !9)
!28 = !DILocation(line: 38, column: 62, scope: !9)
!29 = !DILocation(line: 38, column: 75, scope: !9)
!30 = !DILocation(line: 38, column: 17, scope: !9)
!31 = !DILocation(line: 40, column: 18, scope: !9)
!32 = !DILocation(line: 41, column: 19, scope: !9)
!33 = !DILocation(line: 43, column: 18, scope: !9)
!34 = !DILocation(line: 44, column: 23, scope: !9)
!35 = !DILocation(line: 46, column: 18, scope: !9)
!36 = !DILocation(line: 48, column: 19, scope: !9)
!37 = !DILocation(line: 49, column: 21, scope: !9)
!38 = !DILocation(line: 50, column: 20, scope: !9)
!39 = !DILocation(line: 106, column: 29, scope: !40, inlinedAt: !42)
!40 = distinct !DILexicalBlockFile(scope: !9, file: !41, discriminator: 0)
!41 = !DIFile(filename: "triton_helpers.py", directory: "/mnt/disk1/anaconda3/envs/pqhung/lib/python3.9/site-packages/torch/_inductor/runtime")
!42 = !DILocation(line: 52, column: 42, scope: !9)
!43 = !DILocation(line: 53, column: 33, scope: !9)
!44 = !DILocation(line: 59, column: 35, scope: !9)
!45 = !DILocation(line: 60, column: 38, scope: !9)
!46 = !DILocation(line: 60, column: 53, scope: !9)
!47 = !DILocation(line: 60, column: 73, scope: !9)
!48 = !DILocation(line: 61, column: 36, scope: !9)
!49 = !DILocation(line: 61, column: 31, scope: !9)
!50 = !DILocation(line: 61, column: 46, scope: !9)
!51 = !DILocation(line: 62, column: 20, scope: !9)
!52 = !DILocation(line: 63, column: 19, scope: !9)
!53 = !DILocation(line: 66, column: 45, scope: !9)
!54 = !DILocation(line: 124, column: 29, scope: !40, inlinedAt: !55)
!55 = !DILocation(line: 67, column: 39, scope: !9)
!56 = !DILocation(line: 111, column: 15, scope: !40, inlinedAt: !55)
!57 = !DILocation(line: 113, column: 21, scope: !40, inlinedAt: !55)
!58 = !DILocation(line: 113, column: 16, scope: !40, inlinedAt: !55)
!59 = !DILocation(line: 114, column: 29, scope: !40, inlinedAt: !55)
!60 = !DILocation(line: 68, column: 20, scope: !9)
!61 = !DILocation(line: 69, column: 24, scope: !9)
!62 = !DILocation(line: 71, column: 45, scope: !9)
!63 = !DILocation(line: 290, column: 36, scope: !64, inlinedAt: !66)
!64 = distinct !DILexicalBlockFile(scope: !9, file: !65, discriminator: 0)
!65 = !DIFile(filename: "standard.py", directory: "/mnt/disk1/anaconda3/envs/pqhung/lib/python3.9/site-packages/triton/language")
!66 = !DILocation(line: 72, column: 26, scope: !9)
!67 = !DILocation(line: 260, column: 15, scope: !64, inlinedAt: !66)
!68 = !DILocation(line: 75, column: 21, scope: !9)
!69 = !DILocation(line: 76, column: 45, scope: !9)
!70 = !DILocation(line: 76, column: 40, scope: !9)
!71 = !DILocation(line: 76, column: 25, scope: !9)
!72 = !DILocation(line: 76, column: 57, scope: !9)
!73 = !DILocation(line: 76, column: 4, scope: !9)

; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-p6:32:32-p7:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@assertFunc_0 = internal constant [8 x i8] c"unknown\00"
@assertFile_0 = internal constant [121 x i8] c"/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/nf/cnfehoh4k6l3otcz6shdp3chj7l7akuk6bepi5ielbhql6xqmt2v.py\00"
@assertMessage_0 = internal constant [37 x i8] c"index out of bounds: 0 <= tmp27 < 32\00"
@global_smem = external addrspace(3) global [0 x i8], align 16
@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1

; Function Attrs: noreturn
declare !dbg !5 void @__assertfail(ptr, ptr, i32, ptr, i64) local_unnamed_addr #0

define ptx_kernel void @triton_per_fused__softmax__to_copy_add_mul_rsub_1(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, ptr addrspace(1) %4, i32 %5, i32 %6, ptr addrspace(1) readnone captures(none) %7) local_unnamed_addr #1 !dbg !9 {
  %9 = tail call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !dbg !10
  %10 = shl i32 %9, 5, !dbg !11
  %11 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %12 = lshr i32 %11, 5, !dbg !12
  %13 = and i32 %12, 7, !dbg !12
  %14 = or disjoint i32 %13, 8, !dbg !12
  %15 = or disjoint i32 %13, 16, !dbg !12
  %16 = or i32 %12, 24, !dbg !12
  %.lobit24 = lshr i32 %11, 6, !dbg !12
  %17 = and i32 %.lobit24, 3, !dbg !12
  %18 = or disjoint i32 %13, %10, !dbg !13
  %19 = or disjoint i32 %14, %10, !dbg !13
  %20 = or disjoint i32 %15, %10, !dbg !13
  %21 = or disjoint i32 %16, %10, !dbg !13
  %22 = or disjoint i32 %10, %.lobit24, !dbg !12
  %23 = icmp slt i32 %18, 400, !dbg !14
  %24 = icmp slt i32 %19, 400, !dbg !14
  %25 = icmp slt i32 %20, 400, !dbg !14
  %26 = icmp slt i32 %21, 400, !dbg !14
  %27 = or disjoint i32 %13, 48, !dbg !15
  %28 = shl nuw nsw i32 %11, 1, !dbg !15
  %29 = and i32 %28, 62, !dbg !15
  %30 = and i32 %11, 63, !dbg !15
  %31 = icmp samesign ult i32 %27, 50, !dbg !16
  %32 = icmp samesign ult i32 %29, 50, !dbg !16
  %33 = icmp samesign ult i32 %30, 50, !dbg !16
  %34 = zext nneg i32 %13 to i64, !dbg !17
  %35 = getelementptr i64, ptr addrspace(1) %1, i64 %34, !dbg !17
  %36 = zext nneg i32 %14 to i64, !dbg !17
  %37 = getelementptr i64, ptr addrspace(1) %1, i64 %36, !dbg !17
  %38 = zext nneg i32 %15 to i64, !dbg !17
  %39 = getelementptr i64, ptr addrspace(1) %1, i64 %38, !dbg !17
  %40 = zext nneg i32 %16 to i64, !dbg !17
  %41 = getelementptr i64, ptr addrspace(1) %1, i64 %40, !dbg !17
  %42 = getelementptr i8, ptr addrspace(1) %35, i64 256, !dbg !17
  %43 = getelementptr i8, ptr addrspace(1) %35, i64 320, !dbg !17
  %44 = zext nneg i32 %27 to i64, !dbg !17
  %45 = getelementptr i64, ptr addrspace(1) %1, i64 %44, !dbg !17
  %46 = getelementptr i8, ptr addrspace(1) %35, i64 448, !dbg !17
  %47 = tail call i64 asm sideeffect "mov.u64 $0, 0x0;\0A\09createpolicy.fractional.L2::evict_last.b64 $0, 1.0;", "=l"() #8, !dbg !18
  %48 = tail call i64 asm sideeffect "mov.u64 $0, 0x0;\0A\09@$3 ld.global.L1::evict_last.L2::cache_hint.b64 { $0 }, [ $1 + 0 ], $2;", "=l,l,l,b"(ptr addrspace(1) %35, i64 %47, i1 true) #8, !dbg !18
  %49 = tail call i64 asm sideeffect "mov.u64 $0, 0x0;\0A\09createpolicy.fractional.L2::evict_last.b64 $0, 1.0;", "=l"() #8, !dbg !18
  %50 = tail call i64 asm sideeffect "mov.u64 $0, 0x0;\0A\09@$3 ld.global.L1::evict_last.L2::cache_hint.b64 { $0 }, [ $1 + 0 ], $2;", "=l,l,l,b"(ptr addrspace(1) %37, i64 %49, i1 true) #8, !dbg !18
  %51 = tail call i64 asm sideeffect "mov.u64 $0, 0x0;\0A\09createpolicy.fractional.L2::evict_last.b64 $0, 1.0;", "=l"() #8, !dbg !18
  %52 = tail call i64 asm sideeffect "mov.u64 $0, 0x0;\0A\09@$3 ld.global.L1::evict_last.L2::cache_hint.b64 { $0 }, [ $1 + 0 ], $2;", "=l,l,l,b"(ptr addrspace(1) %39, i64 %51, i1 true) #8, !dbg !18
  %53 = tail call i64 asm sideeffect "mov.u64 $0, 0x0;\0A\09createpolicy.fractional.L2::evict_last.b64 $0, 1.0;", "=l"() #8, !dbg !18
  %54 = tail call i64 asm sideeffect "mov.u64 $0, 0x0;\0A\09@$3 ld.global.L1::evict_last.L2::cache_hint.b64 { $0 }, [ $1 + 0 ], $2;", "=l,l,l,b"(ptr addrspace(1) %41, i64 %53, i1 true) #8, !dbg !18
  %55 = tail call i64 asm sideeffect "mov.u64 $0, 0x0;\0A\09createpolicy.fractional.L2::evict_last.b64 $0, 1.0;", "=l"() #8, !dbg !18
  %56 = tail call i64 asm sideeffect "mov.u64 $0, 0x0;\0A\09@$3 ld.global.L1::evict_last.L2::cache_hint.b64 { $0 }, [ $1 + 0 ], $2;", "=l,l,l,b"(ptr addrspace(1) %42, i64 %55, i1 true) #8, !dbg !18
  %57 = tail call i64 asm sideeffect "mov.u64 $0, 0x0;\0A\09createpolicy.fractional.L2::evict_last.b64 $0, 1.0;", "=l"() #8, !dbg !18
  %58 = tail call i64 asm sideeffect "mov.u64 $0, 0x0;\0A\09@$3 ld.global.L1::evict_last.L2::cache_hint.b64 { $0 }, [ $1 + 0 ], $2;", "=l,l,l,b"(ptr addrspace(1) %43, i64 %57, i1 true) #8, !dbg !18
  %59 = tail call i64 asm sideeffect "mov.u64 $0, 0x0;\0A\09createpolicy.fractional.L2::evict_last.b64 $0, 1.0;", "=l"() #8, !dbg !18
  %60 = tail call i64 asm sideeffect "mov.u64 $0, 0x0;\0A\09@$3 ld.global.L1::evict_last.L2::cache_hint.b64 { $0 }, [ $1 + 0 ], $2;", "=l,l,l,b"(ptr addrspace(1) %45, i64 %59, i1 %31) #8, !dbg !18
  %61 = tail call i64 asm sideeffect "mov.u64 $0, 0x0;\0A\09createpolicy.fractional.L2::evict_last.b64 $0, 1.0;", "=l"() #8, !dbg !18
  %62 = tail call i64 asm sideeffect "mov.u64 $0, 0x0;\0A\09@$3 ld.global.L1::evict_last.L2::cache_hint.b64 { $0 }, [ $1 + 0 ], $2;", "=l,l,l,b"(ptr addrspace(1) %46, i64 %61, i1 false) #8, !dbg !18
  %63 = mul i32 %18, 50, !dbg !19
  %64 = mul i32 %19, 50, !dbg !19
  %65 = mul i32 %20, 50, !dbg !19
  %66 = mul i32 %21, 50, !dbg !19
  %67 = add i32 %63, %29, !dbg !20
  %68 = add i32 %64, %29, !dbg !20
  %69 = add i32 %65, %29, !dbg !20
  %70 = add i32 %66, %29, !dbg !20
  %71 = sext i32 %67 to i64, !dbg !21
  %72 = getelementptr float, ptr addrspace(1) %2, i64 %71, !dbg !21
  %73 = sext i32 %68 to i64, !dbg !21
  %74 = getelementptr float, ptr addrspace(1) %2, i64 %73, !dbg !21
  %75 = sext i32 %69 to i64, !dbg !21
  %76 = getelementptr float, ptr addrspace(1) %2, i64 %75, !dbg !21
  %77 = sext i32 %70 to i64, !dbg !21
  %78 = getelementptr float, ptr addrspace(1) %2, i64 %77, !dbg !21
  %79 = and i1 %32, %23, !dbg !22
  %80 = and i1 %32, %24, !dbg !22
  %81 = and i1 %32, %25, !dbg !22
  %82 = and i1 %32, %26, !dbg !22
  %83 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, $2;\0A\09mov.u32 $1, $3;\0A\09@$5 ld.global.v2.b32 { $0, $1 }, [ $4 + 0 ];", "=r,=r,r,r,l,b"(i32 0, i32 0, ptr addrspace(1) %72, i1 %79) #8, !dbg !23
  %84 = extractvalue { i32, i32 } %83, 0, !dbg !23
  %85 = extractvalue { i32, i32 } %83, 1, !dbg !23
  %86 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, $2;\0A\09mov.u32 $1, $3;\0A\09@$5 ld.global.v2.b32 { $0, $1 }, [ $4 + 0 ];", "=r,=r,r,r,l,b"(i32 0, i32 0, ptr addrspace(1) %74, i1 %80) #8, !dbg !23
  %87 = extractvalue { i32, i32 } %86, 0, !dbg !23
  %88 = extractvalue { i32, i32 } %86, 1, !dbg !23
  %89 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, $2;\0A\09mov.u32 $1, $3;\0A\09@$5 ld.global.v2.b32 { $0, $1 }, [ $4 + 0 ];", "=r,=r,r,r,l,b"(i32 0, i32 0, ptr addrspace(1) %76, i1 %81) #8, !dbg !23
  %90 = extractvalue { i32, i32 } %89, 0, !dbg !23
  %91 = extractvalue { i32, i32 } %89, 1, !dbg !23
  %92 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, $2;\0A\09mov.u32 $1, $3;\0A\09@$5 ld.global.v2.b32 { $0, $1 }, [ $4 + 0 ];", "=r,=r,r,r,l,b"(i32 0, i32 0, ptr addrspace(1) %78, i1 %82) #8, !dbg !23
  %93 = extractvalue { i32, i32 } %92, 0, !dbg !23
  %94 = extractvalue { i32, i32 } %92, 1, !dbg !23
  %95 = and i32 %28, 510, !dbg !23
  %96 = shl nuw nsw i32 %11, 6, !dbg !23
  %97 = and i32 %96, 1984, !dbg !23
  %98 = or disjoint i32 %97, %13, !dbg !23
  %99 = lshr i32 %11, 4, !dbg !23
  %100 = and i32 %99, 14, !dbg !23
  %101 = getelementptr inbounds nuw float, ptr addrspace(3) @global_smem, i32 %100, !dbg !23
  %102 = getelementptr inbounds nuw float, ptr addrspace(3) %101, i32 %95, !dbg !23
  %103 = insertelement <2 x i32> poison, i32 %84, i64 0, !dbg !23
  %104 = insertelement <2 x i32> %103, i32 %85, i64 1, !dbg !23
  store <2 x i32> %104, ptr addrspace(3) %102, align 8, !dbg !23
  %105 = or disjoint i32 %95, 512, !dbg !23
  %106 = lshr i32 %105, 5, !dbg !23
  %107 = and i32 %106, 30, !dbg !23
  %108 = getelementptr inbounds nuw float, ptr addrspace(3) @global_smem, i32 %107, !dbg !23
  %109 = getelementptr inbounds nuw float, ptr addrspace(3) %108, i32 %105, !dbg !23
  %110 = insertelement <2 x i32> poison, i32 %87, i64 0, !dbg !23
  %111 = insertelement <2 x i32> %110, i32 %88, i64 1, !dbg !23
  store <2 x i32> %111, ptr addrspace(3) %109, align 8, !dbg !23
  %112 = or disjoint i32 %95, 1024, !dbg !23
  %113 = lshr i32 %112, 5, !dbg !23
  %114 = and i32 %113, 46, !dbg !23
  %115 = getelementptr inbounds nuw float, ptr addrspace(3) @global_smem, i32 %114, !dbg !23
  %116 = getelementptr inbounds nuw float, ptr addrspace(3) %115, i32 %112, !dbg !23
  %117 = insertelement <2 x i32> poison, i32 %90, i64 0, !dbg !23
  %118 = insertelement <2 x i32> %117, i32 %91, i64 1, !dbg !23
  store <2 x i32> %118, ptr addrspace(3) %116, align 8, !dbg !23
  %119 = or i32 %28, 1536, !dbg !23
  %120 = lshr i32 %119, 5, !dbg !23
  %121 = and i32 %120, 62, !dbg !23
  %122 = getelementptr inbounds nuw float, ptr addrspace(3) @global_smem, i32 %121, !dbg !23
  %123 = getelementptr inbounds nuw float, ptr addrspace(3) %122, i32 %119, !dbg !23
  %124 = insertelement <2 x i32> poison, i32 %93, i64 0, !dbg !23
  %125 = insertelement <2 x i32> %124, i32 %94, i64 1, !dbg !23
  store <2 x i32> %125, ptr addrspace(3) %123, align 8, !dbg !23
  tail call void @llvm.nvvm.barrier.cta.sync.aligned.all(i32 0), !dbg !23
  %126 = lshr exact i32 %97, 3, !dbg !23
  %127 = getelementptr inbounds nuw i8, ptr addrspace(3) @global_smem, i32 %126, !dbg !23
  %128 = getelementptr inbounds nuw float, ptr addrspace(3) %127, i32 %98, !dbg !23
  %129 = load float, ptr addrspace(3) %128, align 4, !dbg !23
  %130 = or disjoint i32 %98, 8, !dbg !23
  %131 = getelementptr inbounds nuw float, ptr addrspace(3) %127, i32 %130, !dbg !23
  %132 = load float, ptr addrspace(3) %131, align 4, !dbg !23
  %133 = or disjoint i32 %98, 16, !dbg !23
  %134 = getelementptr inbounds nuw float, ptr addrspace(3) %127, i32 %133, !dbg !23
  %135 = load float, ptr addrspace(3) %134, align 4, !dbg !23
  %136 = or disjoint i32 %98, 24, !dbg !23
  %137 = getelementptr inbounds nuw float, ptr addrspace(3) %127, i32 %136, !dbg !23
  %138 = load float, ptr addrspace(3) %137, align 4, !dbg !23
  %139 = or disjoint i32 %98, 32, !dbg !23
  %140 = getelementptr inbounds nuw float, ptr addrspace(3) %127, i32 %139, !dbg !23
  %141 = load float, ptr addrspace(3) %140, align 4, !dbg !23
  %142 = or disjoint i32 %98, 40, !dbg !23
  %143 = getelementptr inbounds nuw float, ptr addrspace(3) %127, i32 %142, !dbg !23
  %144 = load float, ptr addrspace(3) %143, align 4, !dbg !23
  %145 = or disjoint i32 %98, 48, !dbg !23
  %146 = getelementptr inbounds nuw float, ptr addrspace(3) %127, i32 %145, !dbg !23
  %147 = load float, ptr addrspace(3) %146, align 4, !dbg !23
  %148 = or disjoint i32 %98, 56, !dbg !23
  %149 = getelementptr inbounds nuw float, ptr addrspace(3) %127, i32 %148, !dbg !23
  %150 = load float, ptr addrspace(3) %149, align 4, !dbg !23
  %151 = or disjoint i32 %17, %10, !dbg !13
  %152 = or disjoint i32 %151, 4, !dbg !13
  %153 = or disjoint i32 %151, 8, !dbg !13
  %154 = or i32 %22, 12, !dbg !13
  %155 = or disjoint i32 %151, 16, !dbg !13
  %156 = or disjoint i32 %151, 20, !dbg !13
  %157 = or disjoint i32 %151, 24, !dbg !13
  %158 = or i32 %22, 28, !dbg !13
  %159 = insertelement <8 x i32> poison, i32 %151, i64 0, !dbg !14
  %160 = insertelement <8 x i32> %159, i32 %152, i64 1, !dbg !14
  %161 = insertelement <8 x i32> %160, i32 %153, i64 2, !dbg !14
  %162 = insertelement <8 x i32> %161, i32 %154, i64 3, !dbg !14
  %163 = insertelement <8 x i32> %162, i32 %155, i64 4, !dbg !14
  %164 = insertelement <8 x i32> %163, i32 %156, i64 5, !dbg !14
  %165 = insertelement <8 x i32> %164, i32 %157, i64 6, !dbg !14
  %166 = insertelement <8 x i32> %165, i32 %158, i64 7, !dbg !14
  %167 = icmp slt <8 x i32> %166, splat (i32 400), !dbg !14
  %168 = srem <8 x i32> %166, splat (i32 50), !dbg !24
  %169 = insertelement <8 x i32> poison, i32 %30, i64 0, !dbg !25
  %170 = shufflevector <8 x i32> %169, <8 x i32> poison, <8 x i32> zeroinitializer, !dbg !25
  %171 = sub nsw <8 x i32> %170, %168, !dbg !25
  %172 = icmp sgt <8 x i32> %171, zeroinitializer, !dbg !26
  %173 = select <8 x i1> %172, <8 x i64> splat (i64 16), <8 x i64> zeroinitializer, !dbg !27
  %174 = tail call <8 x i32> @llvm.abs.v8i32(<8 x i32> %171, i1 true), !dbg !28
  %175 = zext nneg <8 x i32> %174 to <8 x i64>, !dbg !29
  %176 = icmp samesign ult <8 x i32> %174, splat (i32 8), !dbg !29
  %177 = extractelement <8 x i32> %174, i64 0, !dbg !30
  %178 = uitofp nneg i32 %177 to float, !dbg !30
  %179 = extractelement <8 x i32> %174, i64 1, !dbg !30
  %180 = uitofp nneg i32 %179 to float, !dbg !30
  %181 = extractelement <8 x i32> %174, i64 2, !dbg !30
  %182 = uitofp nneg i32 %181 to float, !dbg !30
  %183 = extractelement <8 x i32> %174, i64 3, !dbg !30
  %184 = uitofp nneg i32 %183 to float, !dbg !30
  %185 = extractelement <8 x i32> %174, i64 4, !dbg !30
  %186 = uitofp nneg i32 %185 to float, !dbg !30
  %187 = extractelement <8 x i32> %174, i64 5, !dbg !30
  %188 = uitofp nneg i32 %187 to float, !dbg !30
  %189 = extractelement <8 x i32> %174, i64 6, !dbg !30
  %190 = uitofp nneg i32 %189 to float, !dbg !30
  %191 = extractelement <8 x i32> %174, i64 7, !dbg !30
  %192 = uitofp nneg i32 %191 to float, !dbg !30
  %193 = fmul float %178, 1.250000e-01, !dbg !31
  %194 = fmul float %180, 1.250000e-01, !dbg !31
  %195 = fmul float %182, 1.250000e-01, !dbg !31
  %196 = fmul float %184, 1.250000e-01, !dbg !31
  %197 = fmul float %186, 1.250000e-01, !dbg !31
  %198 = fmul float %188, 1.250000e-01, !dbg !31
  %199 = fmul float %190, 1.250000e-01, !dbg !31
  %200 = fmul float %192, 1.250000e-01, !dbg !31
  %201 = fcmp olt float %193, 0x3810000000000000, !dbg !32
  %202 = fmul float %193, 0x4160000000000000, !dbg !32
  %.02.i = select i1 %201, float %202, float %193, !dbg !32
  %i.i.0.i = select i1 %201, float -2.300000e+01, float 0.000000e+00, !dbg !32
  %203 = bitcast float %.02.i to i32, !dbg !32
  %204 = add nsw i32 %203, -1059760811, !dbg !32
  %205 = and i32 %204, -8388608, !dbg !32
  %206 = sub i32 %203, %205, !dbg !32
  %207 = bitcast i32 %206 to float, !dbg !32
  %208 = sitofp i32 %205 to float, !dbg !32
  %209 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #8, !dbg !32
  %.not.i = icmp eq i32 %209, 0, !dbg !32
  %210 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %208, float 0x3E80000000000000, float %i.i.0.i) #8, !dbg !32
  %211 = tail call float @llvm.nvvm.fma.rn.f(float %208, float 0x3E80000000000000, float %i.i.0.i) #8, !dbg !32
  %.08.i = select i1 %.not.i, float %211, float %210, !dbg !32
  %212 = fadd float %207, -1.000000e+00, !dbg !32
  %213 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #8, !dbg !32
  %.not1.i = icmp eq i32 %213, 0, !dbg !32
  %214 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0xBFC0AA04E0000000, float %212, float 0x3FC2073EC0000000) #8, !dbg !32
  %215 = tail call float @llvm.nvvm.fma.rn.f(float 0xBFC0AA04E0000000, float %212, float 0x3FC2073EC0000000) #8, !dbg !32
  %.010.i = select i1 %.not1.i, float %215, float %214, !dbg !32
  %216 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #8, !dbg !32
  %.not2.i = icmp eq i32 %216, 0, !dbg !32
  %217 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i, float %212, float 0xBFBF19B980000000) #8, !dbg !32
  %218 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i, float %212, float 0xBFBF19B980000000) #8, !dbg !32
  %.011.i = select i1 %.not2.i, float %218, float %217, !dbg !32
  %219 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #8, !dbg !32
  %.not3.i = icmp eq i32 %219, 0, !dbg !32
  %220 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i, float %212, float 0x3FC1E52AA0000000) #8, !dbg !32
  %221 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i, float %212, float 0x3FC1E52AA0000000) #8, !dbg !32
  %.012.i = select i1 %.not3.i, float %221, float %220, !dbg !32
  %222 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #8, !dbg !32
  %.not4.i = icmp eq i32 %222, 0, !dbg !32
  %223 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.012.i, float %212, float 0xBFC55B1720000000) #8, !dbg !32
  %224 = tail call float @llvm.nvvm.fma.rn.f(float %.012.i, float %212, float 0xBFC55B1720000000) #8, !dbg !32
  %.09.i = select i1 %.not4.i, float %224, float %223, !dbg !32
  %225 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #8, !dbg !32
  %.not5.i = icmp eq i32 %225, 0, !dbg !32
  %226 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i, float %212, float 0x3FC99DA160000000) #8, !dbg !32
  %227 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i, float %212, float 0x3FC99DA160000000) #8, !dbg !32
  %.05.i = select i1 %.not5.i, float %227, float %226, !dbg !32
  %228 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #8, !dbg !32
  %.not6.i = icmp eq i32 %228, 0, !dbg !32
  %229 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i, float %212, float 0xBFCFFFE440000000) #8, !dbg !32
  %230 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i, float %212, float 0xBFCFFFE440000000) #8, !dbg !32
  %.01.i = select i1 %.not6.i, float %230, float %229, !dbg !32
  %231 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #8, !dbg !32
  %.not7.i = icmp eq i32 %231, 0, !dbg !32
  %232 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01.i, float %212, float 0x3FD5554F00000000) #8, !dbg !32
  %233 = tail call float @llvm.nvvm.fma.rn.f(float %.01.i, float %212, float 0x3FD5554F00000000) #8, !dbg !32
  %.0.i = select i1 %.not7.i, float %233, float %232, !dbg !32
  %234 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #8, !dbg !32
  %.not8.i = icmp eq i32 %234, 0, !dbg !32
  %235 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i, float %212, float -5.000000e-01) #8, !dbg !32
  %236 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i, float %212, float -5.000000e-01) #8, !dbg !32
  %.07.i = select i1 %.not8.i, float %236, float %235, !dbg !32
  %237 = fmul float %212, %.07.i, !dbg !32
  %238 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #8, !dbg !32
  %.not9.i = icmp eq i32 %238, 0, !dbg !32
  %239 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %237, float %212, float %212) #8, !dbg !32
  %240 = tail call float @llvm.nvvm.fma.rn.f(float %237, float %212, float %212) #8, !dbg !32
  %.06.i = select i1 %.not9.i, float %240, float %239, !dbg !32
  %241 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #8, !dbg !32
  %.not10.i = icmp eq i32 %241, 0, !dbg !32
  %242 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i, float 0x3FE62E4300000000, float %.06.i) #8, !dbg !32
  %243 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i, float 0x3FE62E4300000000, float %.06.i) #8, !dbg !32
  %.04.i = select i1 %.not10.i, float %243, float %242, !dbg !32
  %244 = icmp samesign ugt i32 %203, 2139095039, !dbg !32
  br i1 %244, label %__nv_fmaf_rn.exit.i.i, label %__nv_logf.exit, !dbg !32

__nv_fmaf_rn.exit.i.i:                            ; preds = %8
  %245 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #8, !dbg !32
  %.not11.i = icmp eq i32 %245, 0, !dbg !32
  %246 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i, float 0x7FF0000000000000, float 0x7FF0000000000000) #8, !dbg !32
  %247 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i, float 0x7FF0000000000000, float 0x7FF0000000000000) #8, !dbg !32
  %.03.i = select i1 %.not11.i, float %247, float %246, !dbg !32
  br label %__nv_logf.exit, !dbg !32

__nv_logf.exit:                                   ; preds = %8, %__nv_fmaf_rn.exit.i.i
  %r.i.0.i = phi float [ %.03.i, %__nv_fmaf_rn.exit.i.i ], [ %.04.i, %8 ], !dbg !32
  %248 = fcmp olt float %194, 0x3810000000000000, !dbg !32
  %249 = fmul float %194, 0x4160000000000000, !dbg !32
  %.02.i50 = select i1 %248, float %249, float %194, !dbg !32
  %i.i.0.i51 = select i1 %248, float -2.300000e+01, float 0.000000e+00, !dbg !32
  %250 = bitcast float %.02.i50 to i32, !dbg !32
  %251 = add nsw i32 %250, -1059760811, !dbg !32
  %252 = and i32 %251, -8388608, !dbg !32
  %253 = sub i32 %250, %252, !dbg !32
  %254 = bitcast i32 %253 to float, !dbg !32
  %255 = sitofp i32 %252 to float, !dbg !32
  %256 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #8, !dbg !32
  %.not.i52 = icmp eq i32 %256, 0, !dbg !32
  %257 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %255, float 0x3E80000000000000, float %i.i.0.i51) #8, !dbg !32
  %258 = tail call float @llvm.nvvm.fma.rn.f(float %255, float 0x3E80000000000000, float %i.i.0.i51) #8, !dbg !32
  %.08.i53 = select i1 %.not.i52, float %258, float %257, !dbg !32
  %259 = fadd float %254, -1.000000e+00, !dbg !32
  %260 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #8, !dbg !32
  %.not1.i54 = icmp eq i32 %260, 0, !dbg !32
  %261 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0xBFC0AA04E0000000, float %259, float 0x3FC2073EC0000000) #8, !dbg !32
  %262 = tail call float @llvm.nvvm.fma.rn.f(float 0xBFC0AA04E0000000, float %259, float 0x3FC2073EC0000000) #8, !dbg !32
  %.010.i55 = select i1 %.not1.i54, float %262, float %261, !dbg !32
  %263 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #8, !dbg !32
  %.not2.i56 = icmp eq i32 %263, 0, !dbg !32
  %264 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i55, float %259, float 0xBFBF19B980000000) #8, !dbg !32
  %265 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i55, float %259, float 0xBFBF19B980000000) #8, !dbg !32
  %.011.i57 = select i1 %.not2.i56, float %265, float %264, !dbg !32
  %266 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #8, !dbg !32
  %.not3.i58 = icmp eq i32 %266, 0, !dbg !32
  %267 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i57, float %259, float 0x3FC1E52AA0000000) #8, !dbg !32
  %268 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i57, float %259, float 0x3FC1E52AA0000000) #8, !dbg !32
  %.012.i59 = select i1 %.not3.i58, float %268, float %267, !dbg !32
  %269 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #8, !dbg !32
  %.not4.i60 = icmp eq i32 %269, 0, !dbg !32
  %270 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.012.i59, float %259, float 0xBFC55B1720000000) #8, !dbg !32
  %271 = tail call float @llvm.nvvm.fma.rn.f(float %.012.i59, float %259, float 0xBFC55B1720000000) #8, !dbg !32
  %.09.i61 = select i1 %.not4.i60, float %271, float %270, !dbg !32
  %272 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #8, !dbg !32
  %.not5.i62 = icmp eq i32 %272, 0, !dbg !32
  %273 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i61, float %259, float 0x3FC99DA160000000) #8, !dbg !32
  %274 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i61, float %259, float 0x3FC99DA160000000) #8, !dbg !32
  %.05.i63 = select i1 %.not5.i62, float %274, float %273, !dbg !32
  %275 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #8, !dbg !32
  %.not6.i64 = icmp eq i32 %275, 0, !dbg !32
  %276 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i63, float %259, float 0xBFCFFFE440000000) #8, !dbg !32
  %277 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i63, float %259, float 0xBFCFFFE440000000) #8, !dbg !32
  %.01.i65 = select i1 %.not6.i64, float %277, float %276, !dbg !32
  %278 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #8, !dbg !32
  %.not7.i66 = icmp eq i32 %278, 0, !dbg !32
  %279 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01.i65, float %259, float 0x3FD5554F00000000) #8, !dbg !32
  %280 = tail call float @llvm.nvvm.fma.rn.f(float %.01.i65, float %259, float 0x3FD5554F00000000) #8, !dbg !32
  %.0.i67 = select i1 %.not7.i66, float %280, float %279, !dbg !32
  %281 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #8, !dbg !32
  %.not8.i68 = icmp eq i32 %281, 0, !dbg !32
  %282 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i67, float %259, float -5.000000e-01) #8, !dbg !32
  %283 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i67, float %259, float -5.000000e-01) #8, !dbg !32
  %.07.i69 = select i1 %.not8.i68, float %283, float %282, !dbg !32
  %284 = fmul float %259, %.07.i69, !dbg !32
  %285 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #8, !dbg !32
  %.not9.i70 = icmp eq i32 %285, 0, !dbg !32
  %286 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %284, float %259, float %259) #8, !dbg !32
  %287 = tail call float @llvm.nvvm.fma.rn.f(float %284, float %259, float %259) #8, !dbg !32
  %.06.i71 = select i1 %.not9.i70, float %287, float %286, !dbg !32
  %288 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #8, !dbg !32
  %.not10.i72 = icmp eq i32 %288, 0, !dbg !32
  %289 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i53, float 0x3FE62E4300000000, float %.06.i71) #8, !dbg !32
  %290 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i53, float 0x3FE62E4300000000, float %.06.i71) #8, !dbg !32
  %.04.i73 = select i1 %.not10.i72, float %290, float %289, !dbg !32
  %291 = icmp samesign ugt i32 %250, 2139095039, !dbg !32
  br i1 %291, label %__nv_fmaf_rn.exit.i.i76, label %__nv_logf.exit79, !dbg !32

__nv_fmaf_rn.exit.i.i76:                          ; preds = %__nv_logf.exit
  %292 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #8, !dbg !32
  %.not11.i77 = icmp eq i32 %292, 0, !dbg !32
  %293 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i50, float 0x7FF0000000000000, float 0x7FF0000000000000) #8, !dbg !32
  %294 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i50, float 0x7FF0000000000000, float 0x7FF0000000000000) #8, !dbg !32
  %.03.i78 = select i1 %.not11.i77, float %294, float %293, !dbg !32
  br label %__nv_logf.exit79, !dbg !32

__nv_logf.exit79:                                 ; preds = %__nv_logf.exit, %__nv_fmaf_rn.exit.i.i76
  %r.i.0.i74 = phi float [ %.03.i78, %__nv_fmaf_rn.exit.i.i76 ], [ %.04.i73, %__nv_logf.exit ], !dbg !32
  %295 = fcmp olt float %195, 0x3810000000000000, !dbg !32
  %296 = fmul float %195, 0x4160000000000000, !dbg !32
  %.02.i80 = select i1 %295, float %296, float %195, !dbg !32
  %i.i.0.i81 = select i1 %295, float -2.300000e+01, float 0.000000e+00, !dbg !32
  %297 = bitcast float %.02.i80 to i32, !dbg !32
  %298 = add nsw i32 %297, -1059760811, !dbg !32
  %299 = and i32 %298, -8388608, !dbg !32
  %300 = sub i32 %297, %299, !dbg !32
  %301 = bitcast i32 %300 to float, !dbg !32
  %302 = sitofp i32 %299 to float, !dbg !32
  %303 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #8, !dbg !32
  %.not.i82 = icmp eq i32 %303, 0, !dbg !32
  %304 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %302, float 0x3E80000000000000, float %i.i.0.i81) #8, !dbg !32
  %305 = tail call float @llvm.nvvm.fma.rn.f(float %302, float 0x3E80000000000000, float %i.i.0.i81) #8, !dbg !32
  %.08.i83 = select i1 %.not.i82, float %305, float %304, !dbg !32
  %306 = fadd float %301, -1.000000e+00, !dbg !32
  %307 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #8, !dbg !32
  %.not1.i84 = icmp eq i32 %307, 0, !dbg !32
  %308 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0xBFC0AA04E0000000, float %306, float 0x3FC2073EC0000000) #8, !dbg !32
  %309 = tail call float @llvm.nvvm.fma.rn.f(float 0xBFC0AA04E0000000, float %306, float 0x3FC2073EC0000000) #8, !dbg !32
  %.010.i85 = select i1 %.not1.i84, float %309, float %308, !dbg !32
  %310 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #8, !dbg !32
  %.not2.i86 = icmp eq i32 %310, 0, !dbg !32
  %311 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i85, float %306, float 0xBFBF19B980000000) #8, !dbg !32
  %312 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i85, float %306, float 0xBFBF19B980000000) #8, !dbg !32
  %.011.i87 = select i1 %.not2.i86, float %312, float %311, !dbg !32
  %313 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #8, !dbg !32
  %.not3.i88 = icmp eq i32 %313, 0, !dbg !32
  %314 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i87, float %306, float 0x3FC1E52AA0000000) #8, !dbg !32
  %315 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i87, float %306, float 0x3FC1E52AA0000000) #8, !dbg !32
  %.012.i89 = select i1 %.not3.i88, float %315, float %314, !dbg !32
  %316 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #8, !dbg !32
  %.not4.i90 = icmp eq i32 %316, 0, !dbg !32
  %317 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.012.i89, float %306, float 0xBFC55B1720000000) #8, !dbg !32
  %318 = tail call float @llvm.nvvm.fma.rn.f(float %.012.i89, float %306, float 0xBFC55B1720000000) #8, !dbg !32
  %.09.i91 = select i1 %.not4.i90, float %318, float %317, !dbg !32
  %319 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #8, !dbg !32
  %.not5.i92 = icmp eq i32 %319, 0, !dbg !32
  %320 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i91, float %306, float 0x3FC99DA160000000) #8, !dbg !32
  %321 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i91, float %306, float 0x3FC99DA160000000) #8, !dbg !32
  %.05.i93 = select i1 %.not5.i92, float %321, float %320, !dbg !32
  %322 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #8, !dbg !32
  %.not6.i94 = icmp eq i32 %322, 0, !dbg !32
  %323 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i93, float %306, float 0xBFCFFFE440000000) #8, !dbg !32
  %324 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i93, float %306, float 0xBFCFFFE440000000) #8, !dbg !32
  %.01.i95 = select i1 %.not6.i94, float %324, float %323, !dbg !32
  %325 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #8, !dbg !32
  %.not7.i96 = icmp eq i32 %325, 0, !dbg !32
  %326 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01.i95, float %306, float 0x3FD5554F00000000) #8, !dbg !32
  %327 = tail call float @llvm.nvvm.fma.rn.f(float %.01.i95, float %306, float 0x3FD5554F00000000) #8, !dbg !32
  %.0.i97 = select i1 %.not7.i96, float %327, float %326, !dbg !32
  %328 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #8, !dbg !32
  %.not8.i98 = icmp eq i32 %328, 0, !dbg !32
  %329 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i97, float %306, float -5.000000e-01) #8, !dbg !32
  %330 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i97, float %306, float -5.000000e-01) #8, !dbg !32
  %.07.i99 = select i1 %.not8.i98, float %330, float %329, !dbg !32
  %331 = fmul float %306, %.07.i99, !dbg !32
  %332 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #8, !dbg !32
  %.not9.i100 = icmp eq i32 %332, 0, !dbg !32
  %333 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %331, float %306, float %306) #8, !dbg !32
  %334 = tail call float @llvm.nvvm.fma.rn.f(float %331, float %306, float %306) #8, !dbg !32
  %.06.i101 = select i1 %.not9.i100, float %334, float %333, !dbg !32
  %335 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #8, !dbg !32
  %.not10.i102 = icmp eq i32 %335, 0, !dbg !32
  %336 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i83, float 0x3FE62E4300000000, float %.06.i101) #8, !dbg !32
  %337 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i83, float 0x3FE62E4300000000, float %.06.i101) #8, !dbg !32
  %.04.i103 = select i1 %.not10.i102, float %337, float %336, !dbg !32
  %338 = icmp samesign ugt i32 %297, 2139095039, !dbg !32
  br i1 %338, label %__nv_fmaf_rn.exit.i.i106, label %__nv_logf.exit109, !dbg !32

__nv_fmaf_rn.exit.i.i106:                         ; preds = %__nv_logf.exit79
  %339 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #8, !dbg !32
  %.not11.i107 = icmp eq i32 %339, 0, !dbg !32
  %340 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i80, float 0x7FF0000000000000, float 0x7FF0000000000000) #8, !dbg !32
  %341 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i80, float 0x7FF0000000000000, float 0x7FF0000000000000) #8, !dbg !32
  %.03.i108 = select i1 %.not11.i107, float %341, float %340, !dbg !32
  br label %__nv_logf.exit109, !dbg !32

__nv_logf.exit109:                                ; preds = %__nv_logf.exit79, %__nv_fmaf_rn.exit.i.i106
  %r.i.0.i104 = phi float [ %.03.i108, %__nv_fmaf_rn.exit.i.i106 ], [ %.04.i103, %__nv_logf.exit79 ], !dbg !32
  %342 = fcmp olt float %196, 0x3810000000000000, !dbg !32
  %343 = fmul float %196, 0x4160000000000000, !dbg !32
  %.02.i110 = select i1 %342, float %343, float %196, !dbg !32
  %i.i.0.i111 = select i1 %342, float -2.300000e+01, float 0.000000e+00, !dbg !32
  %344 = bitcast float %.02.i110 to i32, !dbg !32
  %345 = add nsw i32 %344, -1059760811, !dbg !32
  %346 = and i32 %345, -8388608, !dbg !32
  %347 = sub i32 %344, %346, !dbg !32
  %348 = bitcast i32 %347 to float, !dbg !32
  %349 = sitofp i32 %346 to float, !dbg !32
  %350 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #8, !dbg !32
  %.not.i112 = icmp eq i32 %350, 0, !dbg !32
  %351 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %349, float 0x3E80000000000000, float %i.i.0.i111) #8, !dbg !32
  %352 = tail call float @llvm.nvvm.fma.rn.f(float %349, float 0x3E80000000000000, float %i.i.0.i111) #8, !dbg !32
  %.08.i113 = select i1 %.not.i112, float %352, float %351, !dbg !32
  %353 = fadd float %348, -1.000000e+00, !dbg !32
  %354 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #8, !dbg !32
  %.not1.i114 = icmp eq i32 %354, 0, !dbg !32
  %355 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0xBFC0AA04E0000000, float %353, float 0x3FC2073EC0000000) #8, !dbg !32
  %356 = tail call float @llvm.nvvm.fma.rn.f(float 0xBFC0AA04E0000000, float %353, float 0x3FC2073EC0000000) #8, !dbg !32
  %.010.i115 = select i1 %.not1.i114, float %356, float %355, !dbg !32
  %357 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #8, !dbg !32
  %.not2.i116 = icmp eq i32 %357, 0, !dbg !32
  %358 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i115, float %353, float 0xBFBF19B980000000) #8, !dbg !32
  %359 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i115, float %353, float 0xBFBF19B980000000) #8, !dbg !32
  %.011.i117 = select i1 %.not2.i116, float %359, float %358, !dbg !32
  %360 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #8, !dbg !32
  %.not3.i118 = icmp eq i32 %360, 0, !dbg !32
  %361 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i117, float %353, float 0x3FC1E52AA0000000) #8, !dbg !32
  %362 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i117, float %353, float 0x3FC1E52AA0000000) #8, !dbg !32
  %.012.i119 = select i1 %.not3.i118, float %362, float %361, !dbg !32
  %363 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #8, !dbg !32
  %.not4.i120 = icmp eq i32 %363, 0, !dbg !32
  %364 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.012.i119, float %353, float 0xBFC55B1720000000) #8, !dbg !32
  %365 = tail call float @llvm.nvvm.fma.rn.f(float %.012.i119, float %353, float 0xBFC55B1720000000) #8, !dbg !32
  %.09.i121 = select i1 %.not4.i120, float %365, float %364, !dbg !32
  %366 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #8, !dbg !32
  %.not5.i122 = icmp eq i32 %366, 0, !dbg !32
  %367 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i121, float %353, float 0x3FC99DA160000000) #8, !dbg !32
  %368 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i121, float %353, float 0x3FC99DA160000000) #8, !dbg !32
  %.05.i123 = select i1 %.not5.i122, float %368, float %367, !dbg !32
  %369 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #8, !dbg !32
  %.not6.i124 = icmp eq i32 %369, 0, !dbg !32
  %370 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i123, float %353, float 0xBFCFFFE440000000) #8, !dbg !32
  %371 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i123, float %353, float 0xBFCFFFE440000000) #8, !dbg !32
  %.01.i125 = select i1 %.not6.i124, float %371, float %370, !dbg !32
  %372 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #8, !dbg !32
  %.not7.i126 = icmp eq i32 %372, 0, !dbg !32
  %373 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01.i125, float %353, float 0x3FD5554F00000000) #8, !dbg !32
  %374 = tail call float @llvm.nvvm.fma.rn.f(float %.01.i125, float %353, float 0x3FD5554F00000000) #8, !dbg !32
  %.0.i127 = select i1 %.not7.i126, float %374, float %373, !dbg !32
  %375 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #8, !dbg !32
  %.not8.i128 = icmp eq i32 %375, 0, !dbg !32
  %376 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i127, float %353, float -5.000000e-01) #8, !dbg !32
  %377 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i127, float %353, float -5.000000e-01) #8, !dbg !32
  %.07.i129 = select i1 %.not8.i128, float %377, float %376, !dbg !32
  %378 = fmul float %353, %.07.i129, !dbg !32
  %379 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #8, !dbg !32
  %.not9.i130 = icmp eq i32 %379, 0, !dbg !32
  %380 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %378, float %353, float %353) #8, !dbg !32
  %381 = tail call float @llvm.nvvm.fma.rn.f(float %378, float %353, float %353) #8, !dbg !32
  %.06.i131 = select i1 %.not9.i130, float %381, float %380, !dbg !32
  %382 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #8, !dbg !32
  %.not10.i132 = icmp eq i32 %382, 0, !dbg !32
  %383 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i113, float 0x3FE62E4300000000, float %.06.i131) #8, !dbg !32
  %384 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i113, float 0x3FE62E4300000000, float %.06.i131) #8, !dbg !32
  %.04.i133 = select i1 %.not10.i132, float %384, float %383, !dbg !32
  %385 = icmp samesign ugt i32 %344, 2139095039, !dbg !32
  br i1 %385, label %__nv_fmaf_rn.exit.i.i136, label %__nv_logf.exit139, !dbg !32

__nv_fmaf_rn.exit.i.i136:                         ; preds = %__nv_logf.exit109
  %386 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #8, !dbg !32
  %.not11.i137 = icmp eq i32 %386, 0, !dbg !32
  %387 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i110, float 0x7FF0000000000000, float 0x7FF0000000000000) #8, !dbg !32
  %388 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i110, float 0x7FF0000000000000, float 0x7FF0000000000000) #8, !dbg !32
  %.03.i138 = select i1 %.not11.i137, float %388, float %387, !dbg !32
  br label %__nv_logf.exit139, !dbg !32

__nv_logf.exit139:                                ; preds = %__nv_logf.exit109, %__nv_fmaf_rn.exit.i.i136
  %r.i.0.i134 = phi float [ %.03.i138, %__nv_fmaf_rn.exit.i.i136 ], [ %.04.i133, %__nv_logf.exit109 ], !dbg !32
  %389 = fcmp olt float %197, 0x3810000000000000, !dbg !32
  %390 = fmul float %197, 0x4160000000000000, !dbg !32
  %.02.i140 = select i1 %389, float %390, float %197, !dbg !32
  %i.i.0.i141 = select i1 %389, float -2.300000e+01, float 0.000000e+00, !dbg !32
  %391 = bitcast float %.02.i140 to i32, !dbg !32
  %392 = add nsw i32 %391, -1059760811, !dbg !32
  %393 = and i32 %392, -8388608, !dbg !32
  %394 = sub i32 %391, %393, !dbg !32
  %395 = bitcast i32 %394 to float, !dbg !32
  %396 = sitofp i32 %393 to float, !dbg !32
  %397 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #8, !dbg !32
  %.not.i142 = icmp eq i32 %397, 0, !dbg !32
  %398 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %396, float 0x3E80000000000000, float %i.i.0.i141) #8, !dbg !32
  %399 = tail call float @llvm.nvvm.fma.rn.f(float %396, float 0x3E80000000000000, float %i.i.0.i141) #8, !dbg !32
  %.08.i143 = select i1 %.not.i142, float %399, float %398, !dbg !32
  %400 = fadd float %395, -1.000000e+00, !dbg !32
  %401 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #8, !dbg !32
  %.not1.i144 = icmp eq i32 %401, 0, !dbg !32
  %402 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0xBFC0AA04E0000000, float %400, float 0x3FC2073EC0000000) #8, !dbg !32
  %403 = tail call float @llvm.nvvm.fma.rn.f(float 0xBFC0AA04E0000000, float %400, float 0x3FC2073EC0000000) #8, !dbg !32
  %.010.i145 = select i1 %.not1.i144, float %403, float %402, !dbg !32
  %404 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #8, !dbg !32
  %.not2.i146 = icmp eq i32 %404, 0, !dbg !32
  %405 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i145, float %400, float 0xBFBF19B980000000) #8, !dbg !32
  %406 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i145, float %400, float 0xBFBF19B980000000) #8, !dbg !32
  %.011.i147 = select i1 %.not2.i146, float %406, float %405, !dbg !32
  %407 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #8, !dbg !32
  %.not3.i148 = icmp eq i32 %407, 0, !dbg !32
  %408 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i147, float %400, float 0x3FC1E52AA0000000) #8, !dbg !32
  %409 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i147, float %400, float 0x3FC1E52AA0000000) #8, !dbg !32
  %.012.i149 = select i1 %.not3.i148, float %409, float %408, !dbg !32
  %410 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #8, !dbg !32
  %.not4.i150 = icmp eq i32 %410, 0, !dbg !32
  %411 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.012.i149, float %400, float 0xBFC55B1720000000) #8, !dbg !32
  %412 = tail call float @llvm.nvvm.fma.rn.f(float %.012.i149, float %400, float 0xBFC55B1720000000) #8, !dbg !32
  %.09.i151 = select i1 %.not4.i150, float %412, float %411, !dbg !32
  %413 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #8, !dbg !32
  %.not5.i152 = icmp eq i32 %413, 0, !dbg !32
  %414 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i151, float %400, float 0x3FC99DA160000000) #8, !dbg !32
  %415 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i151, float %400, float 0x3FC99DA160000000) #8, !dbg !32
  %.05.i153 = select i1 %.not5.i152, float %415, float %414, !dbg !32
  %416 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #8, !dbg !32
  %.not6.i154 = icmp eq i32 %416, 0, !dbg !32
  %417 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i153, float %400, float 0xBFCFFFE440000000) #8, !dbg !32
  %418 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i153, float %400, float 0xBFCFFFE440000000) #8, !dbg !32
  %.01.i155 = select i1 %.not6.i154, float %418, float %417, !dbg !32
  %419 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #8, !dbg !32
  %.not7.i156 = icmp eq i32 %419, 0, !dbg !32
  %420 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01.i155, float %400, float 0x3FD5554F00000000) #8, !dbg !32
  %421 = tail call float @llvm.nvvm.fma.rn.f(float %.01.i155, float %400, float 0x3FD5554F00000000) #8, !dbg !32
  %.0.i157 = select i1 %.not7.i156, float %421, float %420, !dbg !32
  %422 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #8, !dbg !32
  %.not8.i158 = icmp eq i32 %422, 0, !dbg !32
  %423 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i157, float %400, float -5.000000e-01) #8, !dbg !32
  %424 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i157, float %400, float -5.000000e-01) #8, !dbg !32
  %.07.i159 = select i1 %.not8.i158, float %424, float %423, !dbg !32
  %425 = fmul float %400, %.07.i159, !dbg !32
  %426 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #8, !dbg !32
  %.not9.i160 = icmp eq i32 %426, 0, !dbg !32
  %427 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %425, float %400, float %400) #8, !dbg !32
  %428 = tail call float @llvm.nvvm.fma.rn.f(float %425, float %400, float %400) #8, !dbg !32
  %.06.i161 = select i1 %.not9.i160, float %428, float %427, !dbg !32
  %429 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #8, !dbg !32
  %.not10.i162 = icmp eq i32 %429, 0, !dbg !32
  %430 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i143, float 0x3FE62E4300000000, float %.06.i161) #8, !dbg !32
  %431 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i143, float 0x3FE62E4300000000, float %.06.i161) #8, !dbg !32
  %.04.i163 = select i1 %.not10.i162, float %431, float %430, !dbg !32
  %432 = icmp samesign ugt i32 %391, 2139095039, !dbg !32
  br i1 %432, label %__nv_fmaf_rn.exit.i.i166, label %__nv_logf.exit169, !dbg !32

__nv_fmaf_rn.exit.i.i166:                         ; preds = %__nv_logf.exit139
  %433 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #8, !dbg !32
  %.not11.i167 = icmp eq i32 %433, 0, !dbg !32
  %434 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i140, float 0x7FF0000000000000, float 0x7FF0000000000000) #8, !dbg !32
  %435 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i140, float 0x7FF0000000000000, float 0x7FF0000000000000) #8, !dbg !32
  %.03.i168 = select i1 %.not11.i167, float %435, float %434, !dbg !32
  br label %__nv_logf.exit169, !dbg !32

__nv_logf.exit169:                                ; preds = %__nv_logf.exit139, %__nv_fmaf_rn.exit.i.i166
  %r.i.0.i164 = phi float [ %.03.i168, %__nv_fmaf_rn.exit.i.i166 ], [ %.04.i163, %__nv_logf.exit139 ], !dbg !32
  %436 = fcmp olt float %198, 0x3810000000000000, !dbg !32
  %437 = fmul float %198, 0x4160000000000000, !dbg !32
  %.02.i170 = select i1 %436, float %437, float %198, !dbg !32
  %i.i.0.i171 = select i1 %436, float -2.300000e+01, float 0.000000e+00, !dbg !32
  %438 = bitcast float %.02.i170 to i32, !dbg !32
  %439 = add nsw i32 %438, -1059760811, !dbg !32
  %440 = and i32 %439, -8388608, !dbg !32
  %441 = sub i32 %438, %440, !dbg !32
  %442 = bitcast i32 %441 to float, !dbg !32
  %443 = sitofp i32 %440 to float, !dbg !32
  %444 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #8, !dbg !32
  %.not.i172 = icmp eq i32 %444, 0, !dbg !32
  %445 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %443, float 0x3E80000000000000, float %i.i.0.i171) #8, !dbg !32
  %446 = tail call float @llvm.nvvm.fma.rn.f(float %443, float 0x3E80000000000000, float %i.i.0.i171) #8, !dbg !32
  %.08.i173 = select i1 %.not.i172, float %446, float %445, !dbg !32
  %447 = fadd float %442, -1.000000e+00, !dbg !32
  %448 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #8, !dbg !32
  %.not1.i174 = icmp eq i32 %448, 0, !dbg !32
  %449 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0xBFC0AA04E0000000, float %447, float 0x3FC2073EC0000000) #8, !dbg !32
  %450 = tail call float @llvm.nvvm.fma.rn.f(float 0xBFC0AA04E0000000, float %447, float 0x3FC2073EC0000000) #8, !dbg !32
  %.010.i175 = select i1 %.not1.i174, float %450, float %449, !dbg !32
  %451 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #8, !dbg !32
  %.not2.i176 = icmp eq i32 %451, 0, !dbg !32
  %452 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i175, float %447, float 0xBFBF19B980000000) #8, !dbg !32
  %453 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i175, float %447, float 0xBFBF19B980000000) #8, !dbg !32
  %.011.i177 = select i1 %.not2.i176, float %453, float %452, !dbg !32
  %454 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #8, !dbg !32
  %.not3.i178 = icmp eq i32 %454, 0, !dbg !32
  %455 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i177, float %447, float 0x3FC1E52AA0000000) #8, !dbg !32
  %456 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i177, float %447, float 0x3FC1E52AA0000000) #8, !dbg !32
  %.012.i179 = select i1 %.not3.i178, float %456, float %455, !dbg !32
  %457 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #8, !dbg !32
  %.not4.i180 = icmp eq i32 %457, 0, !dbg !32
  %458 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.012.i179, float %447, float 0xBFC55B1720000000) #8, !dbg !32
  %459 = tail call float @llvm.nvvm.fma.rn.f(float %.012.i179, float %447, float 0xBFC55B1720000000) #8, !dbg !32
  %.09.i181 = select i1 %.not4.i180, float %459, float %458, !dbg !32
  %460 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #8, !dbg !32
  %.not5.i182 = icmp eq i32 %460, 0, !dbg !32
  %461 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i181, float %447, float 0x3FC99DA160000000) #8, !dbg !32
  %462 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i181, float %447, float 0x3FC99DA160000000) #8, !dbg !32
  %.05.i183 = select i1 %.not5.i182, float %462, float %461, !dbg !32
  %463 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #8, !dbg !32
  %.not6.i184 = icmp eq i32 %463, 0, !dbg !32
  %464 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i183, float %447, float 0xBFCFFFE440000000) #8, !dbg !32
  %465 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i183, float %447, float 0xBFCFFFE440000000) #8, !dbg !32
  %.01.i185 = select i1 %.not6.i184, float %465, float %464, !dbg !32
  %466 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #8, !dbg !32
  %.not7.i186 = icmp eq i32 %466, 0, !dbg !32
  %467 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01.i185, float %447, float 0x3FD5554F00000000) #8, !dbg !32
  %468 = tail call float @llvm.nvvm.fma.rn.f(float %.01.i185, float %447, float 0x3FD5554F00000000) #8, !dbg !32
  %.0.i187 = select i1 %.not7.i186, float %468, float %467, !dbg !32
  %469 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #8, !dbg !32
  %.not8.i188 = icmp eq i32 %469, 0, !dbg !32
  %470 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i187, float %447, float -5.000000e-01) #8, !dbg !32
  %471 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i187, float %447, float -5.000000e-01) #8, !dbg !32
  %.07.i189 = select i1 %.not8.i188, float %471, float %470, !dbg !32
  %472 = fmul float %447, %.07.i189, !dbg !32
  %473 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #8, !dbg !32
  %.not9.i190 = icmp eq i32 %473, 0, !dbg !32
  %474 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %472, float %447, float %447) #8, !dbg !32
  %475 = tail call float @llvm.nvvm.fma.rn.f(float %472, float %447, float %447) #8, !dbg !32
  %.06.i191 = select i1 %.not9.i190, float %475, float %474, !dbg !32
  %476 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #8, !dbg !32
  %.not10.i192 = icmp eq i32 %476, 0, !dbg !32
  %477 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i173, float 0x3FE62E4300000000, float %.06.i191) #8, !dbg !32
  %478 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i173, float 0x3FE62E4300000000, float %.06.i191) #8, !dbg !32
  %.04.i193 = select i1 %.not10.i192, float %478, float %477, !dbg !32
  %479 = icmp samesign ugt i32 %438, 2139095039, !dbg !32
  br i1 %479, label %__nv_fmaf_rn.exit.i.i196, label %__nv_logf.exit199, !dbg !32

__nv_fmaf_rn.exit.i.i196:                         ; preds = %__nv_logf.exit169
  %480 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #8, !dbg !32
  %.not11.i197 = icmp eq i32 %480, 0, !dbg !32
  %481 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i170, float 0x7FF0000000000000, float 0x7FF0000000000000) #8, !dbg !32
  %482 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i170, float 0x7FF0000000000000, float 0x7FF0000000000000) #8, !dbg !32
  %.03.i198 = select i1 %.not11.i197, float %482, float %481, !dbg !32
  br label %__nv_logf.exit199, !dbg !32

__nv_logf.exit199:                                ; preds = %__nv_logf.exit169, %__nv_fmaf_rn.exit.i.i196
  %r.i.0.i194 = phi float [ %.03.i198, %__nv_fmaf_rn.exit.i.i196 ], [ %.04.i193, %__nv_logf.exit169 ], !dbg !32
  %483 = fcmp olt float %199, 0x3810000000000000, !dbg !32
  %484 = fmul float %199, 0x4160000000000000, !dbg !32
  %.02.i200 = select i1 %483, float %484, float %199, !dbg !32
  %i.i.0.i201 = select i1 %483, float -2.300000e+01, float 0.000000e+00, !dbg !32
  %485 = bitcast float %.02.i200 to i32, !dbg !32
  %486 = add nsw i32 %485, -1059760811, !dbg !32
  %487 = and i32 %486, -8388608, !dbg !32
  %488 = sub i32 %485, %487, !dbg !32
  %489 = bitcast i32 %488 to float, !dbg !32
  %490 = sitofp i32 %487 to float, !dbg !32
  %491 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #8, !dbg !32
  %.not.i202 = icmp eq i32 %491, 0, !dbg !32
  %492 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %490, float 0x3E80000000000000, float %i.i.0.i201) #8, !dbg !32
  %493 = tail call float @llvm.nvvm.fma.rn.f(float %490, float 0x3E80000000000000, float %i.i.0.i201) #8, !dbg !32
  %.08.i203 = select i1 %.not.i202, float %493, float %492, !dbg !32
  %494 = fadd float %489, -1.000000e+00, !dbg !32
  %495 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #8, !dbg !32
  %.not1.i204 = icmp eq i32 %495, 0, !dbg !32
  %496 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0xBFC0AA04E0000000, float %494, float 0x3FC2073EC0000000) #8, !dbg !32
  %497 = tail call float @llvm.nvvm.fma.rn.f(float 0xBFC0AA04E0000000, float %494, float 0x3FC2073EC0000000) #8, !dbg !32
  %.010.i205 = select i1 %.not1.i204, float %497, float %496, !dbg !32
  %498 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #8, !dbg !32
  %.not2.i206 = icmp eq i32 %498, 0, !dbg !32
  %499 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i205, float %494, float 0xBFBF19B980000000) #8, !dbg !32
  %500 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i205, float %494, float 0xBFBF19B980000000) #8, !dbg !32
  %.011.i207 = select i1 %.not2.i206, float %500, float %499, !dbg !32
  %501 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #8, !dbg !32
  %.not3.i208 = icmp eq i32 %501, 0, !dbg !32
  %502 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i207, float %494, float 0x3FC1E52AA0000000) #8, !dbg !32
  %503 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i207, float %494, float 0x3FC1E52AA0000000) #8, !dbg !32
  %.012.i209 = select i1 %.not3.i208, float %503, float %502, !dbg !32
  %504 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #8, !dbg !32
  %.not4.i210 = icmp eq i32 %504, 0, !dbg !32
  %505 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.012.i209, float %494, float 0xBFC55B1720000000) #8, !dbg !32
  %506 = tail call float @llvm.nvvm.fma.rn.f(float %.012.i209, float %494, float 0xBFC55B1720000000) #8, !dbg !32
  %.09.i211 = select i1 %.not4.i210, float %506, float %505, !dbg !32
  %507 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #8, !dbg !32
  %.not5.i212 = icmp eq i32 %507, 0, !dbg !32
  %508 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i211, float %494, float 0x3FC99DA160000000) #8, !dbg !32
  %509 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i211, float %494, float 0x3FC99DA160000000) #8, !dbg !32
  %.05.i213 = select i1 %.not5.i212, float %509, float %508, !dbg !32
  %510 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #8, !dbg !32
  %.not6.i214 = icmp eq i32 %510, 0, !dbg !32
  %511 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i213, float %494, float 0xBFCFFFE440000000) #8, !dbg !32
  %512 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i213, float %494, float 0xBFCFFFE440000000) #8, !dbg !32
  %.01.i215 = select i1 %.not6.i214, float %512, float %511, !dbg !32
  %513 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #8, !dbg !32
  %.not7.i216 = icmp eq i32 %513, 0, !dbg !32
  %514 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01.i215, float %494, float 0x3FD5554F00000000) #8, !dbg !32
  %515 = tail call float @llvm.nvvm.fma.rn.f(float %.01.i215, float %494, float 0x3FD5554F00000000) #8, !dbg !32
  %.0.i217 = select i1 %.not7.i216, float %515, float %514, !dbg !32
  %516 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #8, !dbg !32
  %.not8.i218 = icmp eq i32 %516, 0, !dbg !32
  %517 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i217, float %494, float -5.000000e-01) #8, !dbg !32
  %518 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i217, float %494, float -5.000000e-01) #8, !dbg !32
  %.07.i219 = select i1 %.not8.i218, float %518, float %517, !dbg !32
  %519 = fmul float %494, %.07.i219, !dbg !32
  %520 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #8, !dbg !32
  %.not9.i220 = icmp eq i32 %520, 0, !dbg !32
  %521 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %519, float %494, float %494) #8, !dbg !32
  %522 = tail call float @llvm.nvvm.fma.rn.f(float %519, float %494, float %494) #8, !dbg !32
  %.06.i221 = select i1 %.not9.i220, float %522, float %521, !dbg !32
  %523 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #8, !dbg !32
  %.not10.i222 = icmp eq i32 %523, 0, !dbg !32
  %524 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i203, float 0x3FE62E4300000000, float %.06.i221) #8, !dbg !32
  %525 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i203, float 0x3FE62E4300000000, float %.06.i221) #8, !dbg !32
  %.04.i223 = select i1 %.not10.i222, float %525, float %524, !dbg !32
  %526 = icmp samesign ugt i32 %485, 2139095039, !dbg !32
  br i1 %526, label %__nv_fmaf_rn.exit.i.i226, label %__nv_logf.exit229, !dbg !32

__nv_fmaf_rn.exit.i.i226:                         ; preds = %__nv_logf.exit199
  %527 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #8, !dbg !32
  %.not11.i227 = icmp eq i32 %527, 0, !dbg !32
  %528 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i200, float 0x7FF0000000000000, float 0x7FF0000000000000) #8, !dbg !32
  %529 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i200, float 0x7FF0000000000000, float 0x7FF0000000000000) #8, !dbg !32
  %.03.i228 = select i1 %.not11.i227, float %529, float %528, !dbg !32
  br label %__nv_logf.exit229, !dbg !32

__nv_logf.exit229:                                ; preds = %__nv_logf.exit199, %__nv_fmaf_rn.exit.i.i226
  %r.i.0.i224 = phi float [ %.03.i228, %__nv_fmaf_rn.exit.i.i226 ], [ %.04.i223, %__nv_logf.exit199 ], !dbg !32
  %530 = fcmp olt float %200, 0x3810000000000000, !dbg !32
  %531 = fmul float %200, 0x4160000000000000, !dbg !32
  %.02.i230 = select i1 %530, float %531, float %200, !dbg !32
  %i.i.0.i231 = select i1 %530, float -2.300000e+01, float 0.000000e+00, !dbg !32
  %532 = bitcast float %.02.i230 to i32, !dbg !32
  %533 = add nsw i32 %532, -1059760811, !dbg !32
  %534 = and i32 %533, -8388608, !dbg !32
  %535 = sub i32 %532, %534, !dbg !32
  %536 = bitcast i32 %535 to float, !dbg !32
  %537 = sitofp i32 %534 to float, !dbg !32
  %538 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #8, !dbg !32
  %.not.i232 = icmp eq i32 %538, 0, !dbg !32
  %539 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %537, float 0x3E80000000000000, float %i.i.0.i231) #8, !dbg !32
  %540 = tail call float @llvm.nvvm.fma.rn.f(float %537, float 0x3E80000000000000, float %i.i.0.i231) #8, !dbg !32
  %.08.i233 = select i1 %.not.i232, float %540, float %539, !dbg !32
  %541 = fadd float %536, -1.000000e+00, !dbg !32
  %542 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #8, !dbg !32
  %.not1.i234 = icmp eq i32 %542, 0, !dbg !32
  %543 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0xBFC0AA04E0000000, float %541, float 0x3FC2073EC0000000) #8, !dbg !32
  %544 = tail call float @llvm.nvvm.fma.rn.f(float 0xBFC0AA04E0000000, float %541, float 0x3FC2073EC0000000) #8, !dbg !32
  %.010.i235 = select i1 %.not1.i234, float %544, float %543, !dbg !32
  %545 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #8, !dbg !32
  %.not2.i236 = icmp eq i32 %545, 0, !dbg !32
  %546 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i235, float %541, float 0xBFBF19B980000000) #8, !dbg !32
  %547 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i235, float %541, float 0xBFBF19B980000000) #8, !dbg !32
  %.011.i237 = select i1 %.not2.i236, float %547, float %546, !dbg !32
  %548 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #8, !dbg !32
  %.not3.i238 = icmp eq i32 %548, 0, !dbg !32
  %549 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i237, float %541, float 0x3FC1E52AA0000000) #8, !dbg !32
  %550 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i237, float %541, float 0x3FC1E52AA0000000) #8, !dbg !32
  %.012.i239 = select i1 %.not3.i238, float %550, float %549, !dbg !32
  %551 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #8, !dbg !32
  %.not4.i240 = icmp eq i32 %551, 0, !dbg !32
  %552 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.012.i239, float %541, float 0xBFC55B1720000000) #8, !dbg !32
  %553 = tail call float @llvm.nvvm.fma.rn.f(float %.012.i239, float %541, float 0xBFC55B1720000000) #8, !dbg !32
  %.09.i241 = select i1 %.not4.i240, float %553, float %552, !dbg !32
  %554 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #8, !dbg !32
  %.not5.i242 = icmp eq i32 %554, 0, !dbg !32
  %555 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i241, float %541, float 0x3FC99DA160000000) #8, !dbg !32
  %556 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i241, float %541, float 0x3FC99DA160000000) #8, !dbg !32
  %.05.i243 = select i1 %.not5.i242, float %556, float %555, !dbg !32
  %557 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #8, !dbg !32
  %.not6.i244 = icmp eq i32 %557, 0, !dbg !32
  %558 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i243, float %541, float 0xBFCFFFE440000000) #8, !dbg !32
  %559 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i243, float %541, float 0xBFCFFFE440000000) #8, !dbg !32
  %.01.i245 = select i1 %.not6.i244, float %559, float %558, !dbg !32
  %560 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #8, !dbg !32
  %.not7.i246 = icmp eq i32 %560, 0, !dbg !32
  %561 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01.i245, float %541, float 0x3FD5554F00000000) #8, !dbg !32
  %562 = tail call float @llvm.nvvm.fma.rn.f(float %.01.i245, float %541, float 0x3FD5554F00000000) #8, !dbg !32
  %.0.i247 = select i1 %.not7.i246, float %562, float %561, !dbg !32
  %563 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #8, !dbg !32
  %.not8.i248 = icmp eq i32 %563, 0, !dbg !32
  %564 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i247, float %541, float -5.000000e-01) #8, !dbg !32
  %565 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i247, float %541, float -5.000000e-01) #8, !dbg !32
  %.07.i249 = select i1 %.not8.i248, float %565, float %564, !dbg !32
  %566 = fmul float %541, %.07.i249, !dbg !32
  %567 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #8, !dbg !32
  %.not9.i250 = icmp eq i32 %567, 0, !dbg !32
  %568 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %566, float %541, float %541) #8, !dbg !32
  %569 = tail call float @llvm.nvvm.fma.rn.f(float %566, float %541, float %541) #8, !dbg !32
  %.06.i251 = select i1 %.not9.i250, float %569, float %568, !dbg !32
  %570 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #8, !dbg !32
  %.not10.i252 = icmp eq i32 %570, 0, !dbg !32
  %571 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i233, float 0x3FE62E4300000000, float %.06.i251) #8, !dbg !32
  %572 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i233, float 0x3FE62E4300000000, float %.06.i251) #8, !dbg !32
  %.04.i253 = select i1 %.not10.i252, float %572, float %571, !dbg !32
  %573 = icmp samesign ugt i32 %532, 2139095039, !dbg !32
  br i1 %573, label %__nv_fmaf_rn.exit.i.i256, label %__nv_logf.exit259, !dbg !32

__nv_fmaf_rn.exit.i.i256:                         ; preds = %__nv_logf.exit229
  %574 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #8, !dbg !32
  %.not11.i257 = icmp eq i32 %574, 0, !dbg !32
  %575 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i230, float 0x7FF0000000000000, float 0x7FF0000000000000) #8, !dbg !32
  %576 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i230, float 0x7FF0000000000000, float 0x7FF0000000000000) #8, !dbg !32
  %.03.i258 = select i1 %.not11.i257, float %576, float %575, !dbg !32
  br label %__nv_logf.exit259, !dbg !32

__nv_logf.exit259:                                ; preds = %__nv_logf.exit229, %__nv_fmaf_rn.exit.i.i256
  %r.i.0.i254 = phi float [ %.03.i258, %__nv_fmaf_rn.exit.i.i256 ], [ %.04.i253, %__nv_logf.exit229 ], !dbg !32
  %577 = insertelement <8 x float> poison, float %r.i.0.i, i64 0, !dbg !33
  %578 = insertelement <8 x float> %577, float %r.i.0.i74, i64 1, !dbg !33
  %579 = insertelement <8 x float> %578, float %r.i.0.i104, i64 2, !dbg !33
  %580 = insertelement <8 x float> %579, float %r.i.0.i134, i64 3, !dbg !33
  %581 = insertelement <8 x float> %580, float %r.i.0.i164, i64 4, !dbg !33
  %582 = insertelement <8 x float> %581, float %r.i.0.i194, i64 5, !dbg !33
  %583 = insertelement <8 x float> %582, float %r.i.0.i224, i64 6, !dbg !33
  %584 = insertelement <8 x float> %583, float %r.i.0.i254, i64 7, !dbg !33
  %585 = fmul <8 x float> %584, splat (float 0x3FD7154760000000), !dbg !33
  %586 = fmul <8 x float> %585, splat (float 8.000000e+00), !dbg !34
  %587 = fptosi <8 x float> %586 to <8 x i64>, !dbg !35
  %588 = add <8 x i64> %587, splat (i64 8), !dbg !36
  %589 = tail call <8 x i64> @llvm.smin.v8i64(<8 x i64> %588, <8 x i64> splat (i64 15)), !dbg !37
  %590 = select <8 x i1> %176, <8 x i64> %175, <8 x i64> %589, !dbg !41
  %591 = add nsw <8 x i64> %590, %173, !dbg !42
  %592 = lshr <8 x i64> %591, splat (i64 58), !dbg !43
  %593 = and <8 x i64> %592, splat (i64 32), !dbg !43
  %594 = add nsw <8 x i64> %593, %591, !dbg !43
  %595 = icmp ugt <8 x i64> %594, splat (i64 31), !dbg !44
  %596 = and <8 x i1> %167, %595, !dbg !45
  %597 = bitcast <8 x i1> %596 to i8, !dbg !46
  %598 = icmp ne i8 %597, 0, !dbg !46
  %599 = and i1 %33, %598, !dbg !46
  br i1 %599, label %600, label %601, !dbg !46

600:                                              ; preds = %__nv_logf.exit259
  tail call void @__assertfail(ptr nonnull @assertMessage_0, ptr nonnull @assertFile_0, i32 66, ptr nonnull @assertFunc_0, i64 1), !dbg !46
  unreachable, !dbg !46

601:                                              ; preds = %__nv_logf.exit259
  %602 = and i32 %11, 31, !dbg !12
  %603 = or disjoint i32 %10, %602, !dbg !13
  %604 = icmp slt i32 %603, 400, !dbg !14
  %605 = and i1 %604, %31, !dbg !22
  %606 = sdiv i32 %158, 50, !dbg !47
  %607 = sdiv i32 %157, 50, !dbg !47
  %608 = sdiv i32 %156, 50, !dbg !47
  %609 = sdiv i32 %155, 50, !dbg !47
  %610 = sdiv i32 %154, 50, !dbg !47
  %611 = sdiv i32 %153, 50, !dbg !47
  %612 = sdiv i32 %152, 50, !dbg !47
  %613 = sdiv i32 %151, 50, !dbg !47
  %614 = sdiv i32 %21, 50, !dbg !47
  %615 = sdiv i32 %20, 50, !dbg !47
  %616 = sdiv i32 %19, 50, !dbg !47
  %617 = sdiv i32 %18, 50, !dbg !47
  %618 = mul i32 %614, 50, !dbg !24
  %.decomposed = sub i32 %21, %618, !dbg !24
  %619 = mul i32 %615, 50, !dbg !24
  %.decomposed261 = sub i32 %20, %619, !dbg !24
  %620 = mul i32 %616, 50, !dbg !24
  %.decomposed262 = sub i32 %19, %620, !dbg !24
  %621 = mul i32 %617, 50, !dbg !24
  %.decomposed263 = sub i32 %18, %621, !dbg !24
  tail call void @llvm.nvvm.barrier.cta.sync.aligned.all(i32 0), !dbg !46
  %622 = sext i32 %613 to i64, !dbg !48
  %623 = sext i32 %612 to i64, !dbg !48
  %624 = sext i32 %611 to i64, !dbg !48
  %625 = sext i32 %610 to i64, !dbg !48
  %626 = sext i32 %609 to i64, !dbg !48
  %627 = sext i32 %608 to i64, !dbg !48
  %628 = sext i32 %607 to i64, !dbg !48
  %629 = sext i32 %606 to i64, !dbg !48
  %630 = extractelement <8 x i64> %594, i64 0, !dbg !49
  %.idx = shl i64 %630, 5, !dbg !49
  %631 = getelementptr i8, ptr addrspace(1) %0, i64 %.idx, !dbg !49
  %632 = getelementptr float, ptr addrspace(1) %631, i64 %622, !dbg !49
  %633 = extractelement <8 x i64> %594, i64 1, !dbg !49
  %.idx14 = shl i64 %633, 5, !dbg !49
  %634 = getelementptr i8, ptr addrspace(1) %0, i64 %.idx14, !dbg !49
  %635 = getelementptr float, ptr addrspace(1) %634, i64 %623, !dbg !49
  %636 = extractelement <8 x i64> %594, i64 2, !dbg !49
  %.idx15 = shl i64 %636, 5, !dbg !49
  %637 = getelementptr i8, ptr addrspace(1) %0, i64 %.idx15, !dbg !49
  %638 = getelementptr float, ptr addrspace(1) %637, i64 %624, !dbg !49
  %639 = extractelement <8 x i64> %594, i64 3, !dbg !49
  %.idx16 = shl i64 %639, 5, !dbg !49
  %640 = getelementptr i8, ptr addrspace(1) %0, i64 %.idx16, !dbg !49
  %641 = getelementptr float, ptr addrspace(1) %640, i64 %625, !dbg !49
  %642 = extractelement <8 x i64> %594, i64 4, !dbg !49
  %.idx17 = shl i64 %642, 5, !dbg !49
  %643 = getelementptr i8, ptr addrspace(1) %0, i64 %.idx17, !dbg !49
  %644 = getelementptr float, ptr addrspace(1) %643, i64 %626, !dbg !49
  %645 = extractelement <8 x i64> %594, i64 5, !dbg !49
  %.idx18 = shl i64 %645, 5, !dbg !49
  %646 = getelementptr i8, ptr addrspace(1) %0, i64 %.idx18, !dbg !49
  %647 = getelementptr float, ptr addrspace(1) %646, i64 %627, !dbg !49
  %648 = extractelement <8 x i64> %594, i64 6, !dbg !49
  %.idx19 = shl i64 %648, 5, !dbg !49
  %649 = getelementptr i8, ptr addrspace(1) %0, i64 %.idx19, !dbg !49
  %650 = getelementptr float, ptr addrspace(1) %649, i64 %628, !dbg !49
  %651 = extractelement <8 x i64> %594, i64 7, !dbg !49
  %.idx20 = shl i64 %651, 5, !dbg !49
  %652 = getelementptr i8, ptr addrspace(1) %0, i64 %.idx20, !dbg !49
  %653 = getelementptr float, ptr addrspace(1) %652, i64 %629, !dbg !49
  tail call void @llvm.nvvm.barrier.cta.sync.aligned.all(i32 0), !dbg !50
  %654 = ptrtoint ptr addrspace(1) %632 to i64, !dbg !50
  %655 = ptrtoint ptr addrspace(1) %635 to i64, !dbg !50
  %656 = ptrtoint ptr addrspace(1) %638 to i64, !dbg !50
  %657 = ptrtoint ptr addrspace(1) %641 to i64, !dbg !50
  %658 = ptrtoint ptr addrspace(1) %644 to i64, !dbg !50
  %659 = ptrtoint ptr addrspace(1) %647 to i64, !dbg !50
  %660 = ptrtoint ptr addrspace(1) %650 to i64, !dbg !50
  %661 = ptrtoint ptr addrspace(1) %653 to i64, !dbg !50
  %662 = and i32 %11, 255, !dbg !50
  %663 = lshr i32 %662, 6, !dbg !50
  %664 = getelementptr inbounds nuw i64, ptr addrspace(3) @global_smem, i32 %663, !dbg !50
  %665 = getelementptr inbounds nuw i64, ptr addrspace(3) %664, i32 %662, !dbg !50
  %666 = insertelement <1 x i64> poison, i64 %654, i64 0, !dbg !50
  store <1 x i64> %666, ptr addrspace(3) %665, align 8, !dbg !50
  %667 = or disjoint i32 %662, 256, !dbg !50
  %668 = lshr i32 %667, 6, !dbg !50
  %669 = getelementptr inbounds nuw i64, ptr addrspace(3) @global_smem, i32 %668, !dbg !50
  %670 = getelementptr inbounds nuw i64, ptr addrspace(3) %669, i32 %667, !dbg !50
  %671 = insertelement <1 x i64> poison, i64 %655, i64 0, !dbg !50
  store <1 x i64> %671, ptr addrspace(3) %670, align 8, !dbg !50
  %672 = or disjoint i32 %662, 512, !dbg !50
  %673 = lshr i32 %672, 6, !dbg !50
  %674 = getelementptr inbounds nuw i64, ptr addrspace(3) @global_smem, i32 %673, !dbg !50
  %675 = getelementptr inbounds nuw i64, ptr addrspace(3) %674, i32 %672, !dbg !50
  %676 = insertelement <1 x i64> poison, i64 %656, i64 0, !dbg !50
  store <1 x i64> %676, ptr addrspace(3) %675, align 8, !dbg !50
  %677 = or i32 %11, 768, !dbg !50
  %678 = lshr i32 %677, 6, !dbg !50
  %679 = getelementptr inbounds nuw i64, ptr addrspace(3) @global_smem, i32 %678, !dbg !50
  %680 = getelementptr inbounds nuw i64, ptr addrspace(3) %679, i32 %677, !dbg !50
  %681 = insertelement <1 x i64> poison, i64 %657, i64 0, !dbg !50
  store <1 x i64> %681, ptr addrspace(3) %680, align 8, !dbg !50
  %682 = or disjoint i32 %662, 1024, !dbg !50
  %683 = lshr i32 %682, 6, !dbg !50
  %684 = getelementptr inbounds nuw i64, ptr addrspace(3) @global_smem, i32 %683, !dbg !50
  %685 = getelementptr inbounds nuw i64, ptr addrspace(3) %684, i32 %682, !dbg !50
  %686 = insertelement <1 x i64> poison, i64 %658, i64 0, !dbg !50
  store <1 x i64> %686, ptr addrspace(3) %685, align 8, !dbg !50
  %687 = or disjoint i32 %662, 1280, !dbg !50
  %688 = lshr i32 %687, 6, !dbg !50
  %689 = getelementptr inbounds nuw i64, ptr addrspace(3) @global_smem, i32 %688, !dbg !50
  %690 = getelementptr inbounds nuw i64, ptr addrspace(3) %689, i32 %687, !dbg !50
  %691 = insertelement <1 x i64> poison, i64 %659, i64 0, !dbg !50
  store <1 x i64> %691, ptr addrspace(3) %690, align 8, !dbg !50
  %692 = or disjoint i32 %662, 1536, !dbg !50
  %693 = lshr i32 %692, 6, !dbg !50
  %694 = getelementptr inbounds nuw i64, ptr addrspace(3) @global_smem, i32 %693, !dbg !50
  %695 = getelementptr inbounds nuw i64, ptr addrspace(3) %694, i32 %692, !dbg !50
  %696 = insertelement <1 x i64> poison, i64 %660, i64 0, !dbg !50
  store <1 x i64> %696, ptr addrspace(3) %695, align 8, !dbg !50
  %697 = or i32 %11, 1792, !dbg !50
  %698 = lshr i32 %697, 6, !dbg !50
  %699 = getelementptr inbounds nuw i64, ptr addrspace(3) @global_smem, i32 %698, !dbg !50
  %700 = getelementptr inbounds nuw i64, ptr addrspace(3) %699, i32 %697, !dbg !50
  %701 = insertelement <1 x i64> poison, i64 %661, i64 0, !dbg !50
  store <1 x i64> %701, ptr addrspace(3) %700, align 8, !dbg !50
  tail call void @llvm.nvvm.barrier.cta.sync.aligned.all(i32 0), !dbg !50
  %702 = getelementptr inbounds nuw i64, ptr addrspace(3) %127, i32 %98, !dbg !50
  %703 = load i64, ptr addrspace(3) %702, align 8, !dbg !50
  %704 = getelementptr inbounds nuw i64, ptr addrspace(3) %127, i32 %130, !dbg !50
  %705 = load i64, ptr addrspace(3) %704, align 8, !dbg !50
  %706 = getelementptr inbounds nuw i64, ptr addrspace(3) %127, i32 %133, !dbg !50
  %707 = load i64, ptr addrspace(3) %706, align 8, !dbg !50
  %708 = getelementptr inbounds nuw i64, ptr addrspace(3) %127, i32 %136, !dbg !50
  %709 = load i64, ptr addrspace(3) %708, align 8, !dbg !50
  %710 = getelementptr inbounds nuw i64, ptr addrspace(3) %127, i32 %139, !dbg !50
  %711 = load i64, ptr addrspace(3) %710, align 8, !dbg !50
  %712 = getelementptr inbounds nuw i64, ptr addrspace(3) %127, i32 %142, !dbg !50
  %713 = load i64, ptr addrspace(3) %712, align 8, !dbg !50
  %714 = getelementptr inbounds nuw i64, ptr addrspace(3) %127, i32 %145, !dbg !50
  %715 = load i64, ptr addrspace(3) %714, align 8, !dbg !50
  %716 = getelementptr inbounds nuw i64, ptr addrspace(3) %127, i32 %148, !dbg !50
  %717 = load i64, ptr addrspace(3) %716, align 8, !dbg !50
  %718 = inttoptr i64 %703 to ptr addrspace(1), !dbg !50
  %719 = inttoptr i64 %705 to ptr addrspace(1), !dbg !50
  %720 = inttoptr i64 %707 to ptr addrspace(1), !dbg !50
  %721 = inttoptr i64 %709 to ptr addrspace(1), !dbg !50
  %722 = inttoptr i64 %711 to ptr addrspace(1), !dbg !50
  %723 = inttoptr i64 %713 to ptr addrspace(1), !dbg !50
  %724 = inttoptr i64 %715 to ptr addrspace(1), !dbg !50
  %725 = inttoptr i64 %717 to ptr addrspace(1), !dbg !50
  %726 = tail call i64 asm sideeffect "mov.u64 $0, 0x0;\0A\09createpolicy.fractional.L2::evict_last.b64 $0, 1.0;", "=l"() #8, !dbg !50
  %727 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$3 ld.global.L1::evict_last.L2::cache_hint.b32 { $0 }, [ $1 + 0 ], $2;", "=r,l,l,b"(ptr addrspace(1) %718, i64 %726, i1 %604) #8, !dbg !50
  %728 = bitcast i32 %727 to float, !dbg !50
  %729 = tail call i64 asm sideeffect "mov.u64 $0, 0x0;\0A\09createpolicy.fractional.L2::evict_last.b64 $0, 1.0;", "=l"() #8, !dbg !50
  %730 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$3 ld.global.L1::evict_last.L2::cache_hint.b32 { $0 }, [ $1 + 0 ], $2;", "=r,l,l,b"(ptr addrspace(1) %719, i64 %729, i1 %604) #8, !dbg !50
  %731 = bitcast i32 %730 to float, !dbg !50
  %732 = tail call i64 asm sideeffect "mov.u64 $0, 0x0;\0A\09createpolicy.fractional.L2::evict_last.b64 $0, 1.0;", "=l"() #8, !dbg !50
  %733 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$3 ld.global.L1::evict_last.L2::cache_hint.b32 { $0 }, [ $1 + 0 ], $2;", "=r,l,l,b"(ptr addrspace(1) %720, i64 %732, i1 %604) #8, !dbg !50
  %734 = bitcast i32 %733 to float, !dbg !50
  %735 = tail call i64 asm sideeffect "mov.u64 $0, 0x0;\0A\09createpolicy.fractional.L2::evict_last.b64 $0, 1.0;", "=l"() #8, !dbg !50
  %736 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$3 ld.global.L1::evict_last.L2::cache_hint.b32 { $0 }, [ $1 + 0 ], $2;", "=r,l,l,b"(ptr addrspace(1) %721, i64 %735, i1 %604) #8, !dbg !50
  %737 = bitcast i32 %736 to float, !dbg !50
  %738 = tail call i64 asm sideeffect "mov.u64 $0, 0x0;\0A\09createpolicy.fractional.L2::evict_last.b64 $0, 1.0;", "=l"() #8, !dbg !50
  %739 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$3 ld.global.L1::evict_last.L2::cache_hint.b32 { $0 }, [ $1 + 0 ], $2;", "=r,l,l,b"(ptr addrspace(1) %722, i64 %738, i1 %604) #8, !dbg !50
  %740 = bitcast i32 %739 to float, !dbg !50
  %741 = tail call i64 asm sideeffect "mov.u64 $0, 0x0;\0A\09createpolicy.fractional.L2::evict_last.b64 $0, 1.0;", "=l"() #8, !dbg !50
  %742 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$3 ld.global.L1::evict_last.L2::cache_hint.b32 { $0 }, [ $1 + 0 ], $2;", "=r,l,l,b"(ptr addrspace(1) %723, i64 %741, i1 %604) #8, !dbg !50
  %743 = bitcast i32 %742 to float, !dbg !50
  %744 = tail call i64 asm sideeffect "mov.u64 $0, 0x0;\0A\09createpolicy.fractional.L2::evict_last.b64 $0, 1.0;", "=l"() #8, !dbg !50
  %745 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$3 ld.global.L1::evict_last.L2::cache_hint.b32 { $0 }, [ $1 + 0 ], $2;", "=r,l,l,b"(ptr addrspace(1) %724, i64 %744, i1 %605) #8, !dbg !50
  %746 = bitcast i32 %745 to float, !dbg !50
  %747 = tail call i64 asm sideeffect "mov.u64 $0, 0x0;\0A\09createpolicy.fractional.L2::evict_last.b64 $0, 1.0;", "=l"() #8, !dbg !50
  %748 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$3 ld.global.L1::evict_last.L2::cache_hint.b32 { $0 }, [ $1 + 0 ], $2;", "=r,l,l,b"(ptr addrspace(1) %725, i64 %747, i1 false) #8, !dbg !50
  %749 = bitcast i32 %748 to float, !dbg !50
  %750 = sitofp i64 %48 to float, !dbg !51
  %751 = sitofp i64 %50 to float, !dbg !51
  %752 = sitofp i64 %52 to float, !dbg !51
  %753 = sitofp i64 %54 to float, !dbg !51
  %754 = sitofp i64 %56 to float, !dbg !51
  %755 = sitofp i64 %58 to float, !dbg !51
  %756 = sitofp i64 %60 to float, !dbg !51
  %757 = sitofp i64 %62 to float, !dbg !51
  %758 = fsub float 1.000000e+00, %750, !dbg !52
  %759 = fsub float 1.000000e+00, %751, !dbg !52
  %760 = fsub float 1.000000e+00, %752, !dbg !52
  %761 = fsub float 1.000000e+00, %753, !dbg !52
  %762 = fsub float 1.000000e+00, %754, !dbg !52
  %763 = fsub float 1.000000e+00, %755, !dbg !52
  %764 = fsub float 1.000000e+00, %756, !dbg !52
  %765 = fsub float 1.000000e+00, %757, !dbg !52
  %766 = fmul float %758, 0x47EFFFFFE0000000, !dbg !53
  %767 = fmul float %759, 0x47EFFFFFE0000000, !dbg !53
  %768 = fmul float %760, 0x47EFFFFFE0000000, !dbg !53
  %769 = fmul float %761, 0x47EFFFFFE0000000, !dbg !53
  %770 = fmul float %762, 0x47EFFFFFE0000000, !dbg !53
  %771 = fmul float %763, 0x47EFFFFFE0000000, !dbg !53
  %772 = fmul float %764, 0x47EFFFFFE0000000, !dbg !53
  %773 = fmul float %765, 0x47EFFFFFE0000000, !dbg !53
  %774 = fsub float %728, %766, !dbg !54
  %775 = fsub float %731, %767, !dbg !54
  %776 = fsub float %734, %768, !dbg !54
  %777 = fsub float %737, %769, !dbg !54
  %778 = fsub float %740, %770, !dbg !54
  %779 = fsub float %743, %771, !dbg !54
  %780 = fsub float %746, %772, !dbg !54
  %781 = fsub float %749, %773, !dbg !54
  %782 = fadd float %129, %774, !dbg !55
  %783 = fadd float %132, %775, !dbg !55
  %784 = fadd float %135, %776, !dbg !55
  %785 = fadd float %138, %777, !dbg !55
  %786 = fadd float %141, %778, !dbg !55
  %787 = fadd float %144, %779, !dbg !55
  %788 = fadd float %147, %780, !dbg !55
  %789 = fadd float %150, %781, !dbg !55
  %790 = select i1 %604, float %782, float 0xFFF0000000000000, !dbg !56
  %791 = select i1 %604, float %783, float 0xFFF0000000000000, !dbg !56
  %792 = select i1 %604, float %784, float 0xFFF0000000000000, !dbg !56
  %793 = select i1 %604, float %785, float 0xFFF0000000000000, !dbg !56
  %794 = select i1 %604, float %786, float 0xFFF0000000000000, !dbg !56
  %795 = select i1 %604, float %787, float 0xFFF0000000000000, !dbg !56
  %796 = select i1 %605, float %788, float 0xFFF0000000000000, !dbg !56
  tail call void @llvm.nvvm.barrier.cta.sync.aligned.all(i32 0), !dbg !57
  %797 = fcmp ogt float %790, %791, !dbg !59
  %798 = fcmp uno float %790, 0.000000e+00, !dbg !60
  %799 = or i1 %798, %797, !dbg !61
  %800 = select i1 %799, float %790, float %791, !dbg !62
  %801 = fcmp ogt float %800, %792, !dbg !59
  %802 = fcmp uno float %800, 0.000000e+00, !dbg !60
  %803 = or i1 %801, %802, !dbg !61
  %804 = select i1 %803, float %800, float %792, !dbg !62
  %805 = fcmp ogt float %804, %793, !dbg !59
  %806 = fcmp uno float %804, 0.000000e+00, !dbg !60
  %807 = or i1 %805, %806, !dbg !61
  %808 = select i1 %807, float %804, float %793, !dbg !62
  %809 = fcmp ogt float %808, %794, !dbg !59
  %810 = fcmp uno float %808, 0.000000e+00, !dbg !60
  %811 = or i1 %809, %810, !dbg !61
  %812 = select i1 %811, float %808, float %794, !dbg !62
  %813 = fcmp ogt float %812, %795, !dbg !59
  %814 = fcmp uno float %812, 0.000000e+00, !dbg !60
  %815 = or i1 %813, %814, !dbg !61
  %816 = select i1 %815, float %812, float %795, !dbg !62
  %817 = fcmp ogt float %816, %796, !dbg !59
  %818 = fcmp uno float %816, 0.000000e+00, !dbg !60
  %819 = or i1 %817, %818, !dbg !61
  %820 = select i1 %819, float %816, float %796, !dbg !62
  %.idx260 = shl nuw nsw i32 %602, 5, !dbg !57
  %821 = getelementptr i8, ptr addrspace(3) @global_smem, i32 %.idx260, !dbg !57
  %822 = getelementptr float, ptr addrspace(3) %821, i32 %13, !dbg !57
  %823 = bitcast float %820 to <1 x i32>, !dbg !57
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %822, <1 x i32> %823, i1 true) #8, !dbg !57
  tail call void @llvm.nvvm.barrier.cta.sync.aligned.all(i32 0), !dbg !57
  %824 = icmp samesign ult i32 %11, 256, !dbg !57
  %825 = getelementptr float, ptr addrspace(3) @global_smem, i32 %11, !dbg !57
  %826 = tail call i32 asm sideeffect "@$2 ld.shared.b32 $0, [ $1 + 0 ];", "=r,r,b"(ptr addrspace(3) %825, i1 %824) #8, !dbg !57
  %827 = bitcast i32 %826 to float, !dbg !57
  %828 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %826, i32 4, i32 31), !dbg !57
  %829 = bitcast i32 %828 to float, !dbg !57
  %830 = fcmp ogt float %827, %829, !dbg !59
  %831 = fcmp uno float %827, 0.000000e+00, !dbg !60
  %832 = or i1 %831, %830, !dbg !61
  %833 = select i1 %832, float %827, float %829, !dbg !62
  %834 = bitcast float %833 to i32, !dbg !57
  %835 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %834, i32 2, i32 31), !dbg !57
  %836 = bitcast i32 %835 to float, !dbg !57
  %837 = fcmp ogt float %833, %836, !dbg !59
  %838 = fcmp uno float %833, 0.000000e+00, !dbg !60
  %839 = or i1 %837, %838, !dbg !61
  %840 = select i1 %839, float %833, float %836, !dbg !62
  %841 = bitcast float %840 to i32, !dbg !57
  %842 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %841, i32 1, i32 31), !dbg !57
  %843 = bitcast i32 %842 to float, !dbg !57
  %844 = fcmp ogt float %840, %843, !dbg !59
  %845 = fcmp uno float %840, 0.000000e+00, !dbg !60
  %846 = or i1 %844, %845, !dbg !61
  %847 = and i32 %11, 775, !dbg !57
  %848 = icmp eq i32 %847, 0, !dbg !57
  %849 = select i1 %846, i32 %841, i32 %842, !dbg !62
  %850 = insertelement <1 x i32> poison, i32 %849, i64 0, !dbg !57
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %825, <1 x i32> %850, i1 %848) #8, !dbg !57
  tail call void @llvm.nvvm.barrier.cta.sync.aligned.all(i32 0), !dbg !57
  %851 = load float, ptr addrspace(3) %821, align 16, !dbg !57
  %852 = fsub float %782, %851, !dbg !63
  %853 = fsub float %783, %851, !dbg !63
  %854 = fsub float %784, %851, !dbg !63
  %855 = fsub float %785, %851, !dbg !63
  %856 = fsub float %786, %851, !dbg !63
  %857 = fsub float %787, %851, !dbg !63
  %858 = fsub float %788, %851, !dbg !63
  %859 = fsub float %789, %851, !dbg !63
  %860 = fmul float %852, 0x3FF7154760000000, !dbg !64
  %861 = tail call float @llvm.nvvm.ex2.approx.f(float %860), !dbg !64
  %862 = fmul float %853, 0x3FF7154760000000, !dbg !64
  %863 = tail call float @llvm.nvvm.ex2.approx.f(float %862), !dbg !64
  %864 = fmul float %854, 0x3FF7154760000000, !dbg !64
  %865 = tail call float @llvm.nvvm.ex2.approx.f(float %864), !dbg !64
  %866 = fmul float %855, 0x3FF7154760000000, !dbg !64
  %867 = tail call float @llvm.nvvm.ex2.approx.f(float %866), !dbg !64
  %868 = fmul float %856, 0x3FF7154760000000, !dbg !64
  %869 = tail call float @llvm.nvvm.ex2.approx.f(float %868), !dbg !64
  %870 = fmul float %857, 0x3FF7154760000000, !dbg !64
  %871 = tail call float @llvm.nvvm.ex2.approx.f(float %870), !dbg !64
  %872 = fmul float %858, 0x3FF7154760000000, !dbg !64
  %873 = tail call float @llvm.nvvm.ex2.approx.f(float %872), !dbg !64
  %874 = fmul float %859, 0x3FF7154760000000, !dbg !64
  %875 = tail call float @llvm.nvvm.ex2.approx.f(float %874), !dbg !64
  %876 = select i1 %605, float %873, float 0.000000e+00, !dbg !65
  tail call void @llvm.nvvm.barrier.cta.sync.aligned.all(i32 0), !dbg !66
  %877 = fadd float %861, %863, !dbg !70
  %878 = fadd float %877, %865, !dbg !70
  %879 = fadd float %878, %867, !dbg !70
  %880 = fadd float %879, %869, !dbg !70
  %881 = fadd float %880, %871, !dbg !70
  %882 = select i1 %604, float %881, float 0.000000e+00, !dbg !70
  %883 = fadd float %882, %876, !dbg !70
  %884 = fadd float %883, 0.000000e+00, !dbg !70
  %885 = bitcast float %884 to <1 x i32>, !dbg !66
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %822, <1 x i32> %885, i1 true) #8, !dbg !66
  tail call void @llvm.nvvm.barrier.cta.sync.aligned.all(i32 0), !dbg !66
  %886 = tail call i32 asm sideeffect "@$2 ld.shared.b32 $0, [ $1 + 0 ];", "=r,r,b"(ptr addrspace(3) %825, i1 %824) #8, !dbg !66
  %887 = bitcast i32 %886 to float, !dbg !66
  %888 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %886, i32 4, i32 31), !dbg !66
  %889 = bitcast i32 %888 to float, !dbg !66
  %890 = fadd float %887, %889, !dbg !70
  %891 = bitcast float %890 to i32, !dbg !66
  %892 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %891, i32 2, i32 31), !dbg !66
  %893 = bitcast i32 %892 to float, !dbg !66
  %894 = fadd float %890, %893, !dbg !70
  %895 = bitcast float %894 to i32, !dbg !66
  %896 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %895, i32 1, i32 31), !dbg !66
  %897 = bitcast i32 %896 to float, !dbg !66
  %898 = fadd float %894, %897, !dbg !70
  %899 = bitcast float %898 to <1 x i32>, !dbg !66
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %825, <1 x i32> %899, i1 %848) #8, !dbg !66
  tail call void @llvm.nvvm.barrier.cta.sync.aligned.all(i32 0), !dbg !66
  %900 = load float, ptr addrspace(3) %821, align 16, !dbg !66
  %901 = tail call float @llvm.nvvm.div.full(float %861, float %900), !dbg !71
  %902 = tail call float @llvm.nvvm.div.full(float %863, float %900), !dbg !71
  %903 = tail call float @llvm.nvvm.div.full(float %865, float %900), !dbg !71
  %904 = tail call float @llvm.nvvm.div.full(float %867, float %900), !dbg !71
  %905 = tail call float @llvm.nvvm.div.full(float %869, float %900), !dbg !71
  %906 = tail call float @llvm.nvvm.div.full(float %871, float %900), !dbg !71
  %907 = tail call float @llvm.nvvm.div.full(float %873, float %900), !dbg !71
  %908 = tail call float @llvm.nvvm.div.full(float %875, float %900), !dbg !71
  %909 = mul nsw i32 %.decomposed263, 50, !dbg !72
  %910 = mul nsw i32 %.decomposed262, 50, !dbg !72
  %911 = mul nsw i32 %.decomposed261, 50, !dbg !72
  %912 = mul nsw i32 %.decomposed, 50, !dbg !72
  %913 = add nsw i32 %909, %29, !dbg !73
  %914 = add nsw i32 %910, %29, !dbg !73
  %915 = add nsw i32 %911, %29, !dbg !73
  %916 = add nsw i32 %912, %29, !dbg !73
  %917 = mul i32 %617, 2528, !dbg !74
  %918 = mul i32 %616, 2528, !dbg !74
  %919 = mul i32 %615, 2528, !dbg !74
  %920 = mul i32 %614, 2528, !dbg !74
  %921 = add i32 %913, %917, !dbg !75
  %922 = add i32 %914, %918, !dbg !75
  %923 = add i32 %915, %919, !dbg !75
  %924 = add i32 %916, %920, !dbg !75
  %925 = sext i32 %921 to i64, !dbg !76
  %926 = getelementptr float, ptr addrspace(1) %3, i64 %925, !dbg !76
  %927 = sext i32 %922 to i64, !dbg !76
  %928 = getelementptr float, ptr addrspace(1) %3, i64 %927, !dbg !76
  %929 = sext i32 %923 to i64, !dbg !76
  %930 = getelementptr float, ptr addrspace(1) %3, i64 %929, !dbg !76
  %931 = sext i32 %924 to i64, !dbg !76
  %932 = getelementptr float, ptr addrspace(1) %3, i64 %931, !dbg !76
  tail call void @llvm.nvvm.barrier.cta.sync.aligned.all(i32 0), !dbg !77
  store float %774, ptr addrspace(3) %128, align 4, !dbg !77
  store float %775, ptr addrspace(3) %131, align 4, !dbg !77
  store float %776, ptr addrspace(3) %134, align 4, !dbg !77
  store float %777, ptr addrspace(3) %137, align 4, !dbg !77
  store float %778, ptr addrspace(3) %140, align 4, !dbg !77
  store float %779, ptr addrspace(3) %143, align 4, !dbg !77
  store float %780, ptr addrspace(3) %146, align 4, !dbg !77
  store float %781, ptr addrspace(3) %149, align 4, !dbg !77
  tail call void @llvm.nvvm.barrier.cta.sync.aligned.all(i32 0), !dbg !77
  %933 = load <2 x i32>, ptr addrspace(3) %109, align 8, !dbg !77
  %934 = load <2 x i32>, ptr addrspace(3) %116, align 8, !dbg !77
  %935 = load <2 x i32>, ptr addrspace(3) %123, align 8, !dbg !77
  %.extract = load i32, ptr addrspace(3) %102, align 8, !dbg !77
  %936 = getelementptr inbounds nuw i8, ptr addrspace(3) %102, i32 4, !dbg !77
  %.extract28 = load i32, ptr addrspace(3) %936, align 4, !dbg !77
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %.extract, i32 %.extract28, ptr addrspace(1) %926, i1 %79) #8, !dbg !77
  %.extract29 = extractelement <2 x i32> %933, i64 0, !dbg !77
  %.extract30 = extractelement <2 x i32> %933, i64 1, !dbg !77
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %.extract29, i32 %.extract30, ptr addrspace(1) %928, i1 %80) #8, !dbg !77
  %.extract31 = extractelement <2 x i32> %934, i64 0, !dbg !77
  %.extract32 = extractelement <2 x i32> %934, i64 1, !dbg !77
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %.extract31, i32 %.extract32, ptr addrspace(1) %930, i1 %81) #8, !dbg !77
  %.extract33 = extractelement <2 x i32> %935, i64 0, !dbg !77
  %.extract34 = extractelement <2 x i32> %935, i64 1, !dbg !77
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %.extract33, i32 %.extract34, ptr addrspace(1) %932, i1 %82) #8, !dbg !77
  %937 = getelementptr float, ptr addrspace(1) %4, i64 %925, !dbg !78
  %938 = getelementptr float, ptr addrspace(1) %4, i64 %927, !dbg !78
  %939 = getelementptr float, ptr addrspace(1) %4, i64 %929, !dbg !78
  %940 = getelementptr float, ptr addrspace(1) %4, i64 %931, !dbg !78
  tail call void @llvm.nvvm.barrier.cta.sync.aligned.all(i32 0), !dbg !79
  store float %901, ptr addrspace(3) %128, align 4, !dbg !79
  store float %902, ptr addrspace(3) %131, align 4, !dbg !79
  store float %903, ptr addrspace(3) %134, align 4, !dbg !79
  store float %904, ptr addrspace(3) %137, align 4, !dbg !79
  store float %905, ptr addrspace(3) %140, align 4, !dbg !79
  store float %906, ptr addrspace(3) %143, align 4, !dbg !79
  store float %907, ptr addrspace(3) %146, align 4, !dbg !79
  store float %908, ptr addrspace(3) %149, align 4, !dbg !79
  tail call void @llvm.nvvm.barrier.cta.sync.aligned.all(i32 0), !dbg !79
  %941 = load <2 x i32>, ptr addrspace(3) %109, align 8, !dbg !79
  %942 = load <2 x i32>, ptr addrspace(3) %116, align 8, !dbg !79
  %943 = load <2 x i32>, ptr addrspace(3) %123, align 8, !dbg !79
  %.extract42 = load i32, ptr addrspace(3) %102, align 8, !dbg !79
  %.extract43 = load i32, ptr addrspace(3) %936, align 4, !dbg !79
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %.extract42, i32 %.extract43, ptr addrspace(1) %937, i1 %79) #8, !dbg !79
  %.extract44 = extractelement <2 x i32> %941, i64 0, !dbg !79
  %.extract45 = extractelement <2 x i32> %941, i64 1, !dbg !79
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %.extract44, i32 %.extract45, ptr addrspace(1) %938, i1 %80) #8, !dbg !79
  %.extract46 = extractelement <2 x i32> %942, i64 0, !dbg !79
  %.extract47 = extractelement <2 x i32> %942, i64 1, !dbg !79
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %.extract46, i32 %.extract47, ptr addrspace(1) %939, i1 %81) #8, !dbg !79
  %.extract48 = extractelement <2 x i32> %943, i64 0, !dbg !79
  %.extract49 = extractelement <2 x i32> %943, i64 1, !dbg !79
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %.extract48, i32 %.extract49, ptr addrspace(1) %940, i1 %82) #8, !dbg !79
  ret void, !dbg !80
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef range(i32 0, 2147483647) i32 @llvm.nvvm.read.ptx.sreg.ctaid.x() #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef range(i32 0, 1024) i32 @llvm.nvvm.read.ptx.sreg.tid.x() #2

; Function Attrs: convergent nocallback nounwind
declare void @llvm.nvvm.barrier.cta.sync.aligned.all(i32) #3

; Function Attrs: convergent nocallback nounwind memory(inaccessiblemem: readwrite)
declare i32 @llvm.nvvm.shfl.sync.bfly.i32(i32, i32, i32, i32) #4

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.ex2.approx.f(float) #5

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.div.full(float, float) #5

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #6

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.ftz.f(float, float, float) #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.f(float, float, float) #2

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare <8 x i32> @llvm.abs.v8i32(<8 x i32>, i1 immarg) #7

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare <8 x i64> @llvm.smin.v8i64(<8 x i64>, <8 x i64>) #7

attributes #0 = { noreturn }
attributes #1 = { "nvvm.reqntid"="256" }
attributes #2 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #3 = { convergent nocallback nounwind }
attributes #4 = { convergent nocallback nounwind memory(inaccessiblemem: readwrite) }
attributes #5 = { mustprogress nocallback nofree nosync nounwind willreturn memory(none) }
attributes #6 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #8 = { nounwind }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!2, !3}
!llvm.ident = !{!4}

!0 = distinct !DICompileUnit(language: DW_LANG_C, file: !1, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!1 = !DIFile(filename: "cnfehoh4k6l3otcz6shdp3chj7l7akuk6bepi5ielbhql6xqmt2v.py", directory: "/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/nf")
!2 = !{i32 2, !"Debug Info Version", i32 3}
!3 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!4 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!5 = !DISubprogram(name: "__assertfail", linkageName: "__assertfail", scope: !6, file: !6, type: !7, spFlags: DISPFlagOptimized)
!6 = !DIFile(filename: "<unknown>", directory: "")
!7 = !DISubroutineType(cc: DW_CC_normal, types: !8)
!8 = !{}
!9 = distinct !DISubprogram(name: "triton_per_fused__softmax__to_copy_add_mul_rsub_1", linkageName: "triton_per_fused__softmax__to_copy_add_mul_rsub_1", scope: !1, file: !1, line: 18, type: !7, scopeLine: 18, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0)
!10 = !DILocation(line: 24, column: 28, scope: !9)
!11 = !DILocation(line: 24, column: 33, scope: !9)
!12 = !DILocation(line: 25, column: 44, scope: !9)
!13 = !DILocation(line: 25, column: 23, scope: !9)
!14 = !DILocation(line: 26, column: 21, scope: !9)
!15 = !DILocation(line: 27, column: 38, scope: !9)
!16 = !DILocation(line: 29, column: 25, scope: !9)
!17 = !DILocation(line: 36, column: 31, scope: !9)
!18 = !DILocation(line: 36, column: 38, scope: !9)
!19 = !DILocation(line: 37, column: 41, scope: !9)
!20 = !DILocation(line: 37, column: 38, scope: !9)
!21 = !DILocation(line: 37, column: 31, scope: !9)
!22 = !DILocation(line: 37, column: 56, scope: !9)
!23 = !DILocation(line: 37, column: 46, scope: !9)
!24 = !DILocation(line: 33, column: 19, scope: !9)
!25 = !DILocation(line: 38, column: 19, scope: !9)
!26 = !DILocation(line: 40, column: 18, scope: !9)
!27 = !DILocation(line: 43, column: 18, scope: !9)
!28 = !DILocation(line: 45, column: 23, scope: !9)
!29 = !DILocation(line: 47, column: 18, scope: !9)
!30 = !DILocation(line: 48, column: 20, scope: !9)
!31 = !DILocation(line: 50, column: 20, scope: !9)
!32 = !DILocation(line: 51, column: 24, scope: !9)
!33 = !DILocation(line: 53, column: 20, scope: !9)
!34 = !DILocation(line: 55, column: 20, scope: !9)
!35 = !DILocation(line: 56, column: 21, scope: !9)
!36 = !DILocation(line: 57, column: 20, scope: !9)
!37 = !DILocation(line: 106, column: 29, scope: !38, inlinedAt: !40)
!38 = distinct !DILexicalBlockFile(scope: !9, file: !39, discriminator: 0)
!39 = !DIFile(filename: "triton_helpers.py", directory: "/mnt/disk1/anaconda3/envs/pqhung/lib/python3.9/site-packages/torch/_inductor/runtime")
!40 = !DILocation(line: 59, column: 42, scope: !9)
!41 = !DILocation(line: 60, column: 33, scope: !9)
!42 = !DILocation(line: 61, column: 19, scope: !9)
!43 = !DILocation(line: 65, column: 35, scope: !9)
!44 = !DILocation(line: 66, column: 38, scope: !9)
!45 = !DILocation(line: 66, column: 53, scope: !9)
!46 = !DILocation(line: 66, column: 73, scope: !9)
!47 = !DILocation(line: 34, column: 19, scope: !9)
!48 = !DILocation(line: 67, column: 36, scope: !9)
!49 = !DILocation(line: 67, column: 31, scope: !9)
!50 = !DILocation(line: 67, column: 46, scope: !9)
!51 = !DILocation(line: 68, column: 21, scope: !9)
!52 = !DILocation(line: 70, column: 20, scope: !9)
!53 = !DILocation(line: 72, column: 20, scope: !9)
!54 = !DILocation(line: 73, column: 20, scope: !9)
!55 = !DILocation(line: 74, column: 20, scope: !9)
!56 = !DILocation(line: 77, column: 45, scope: !9)
!57 = !DILocation(line: 124, column: 29, scope: !38, inlinedAt: !58)
!58 = !DILocation(line: 78, column: 39, scope: !9)
!59 = !DILocation(line: 111, column: 15, scope: !38, inlinedAt: !58)
!60 = !DILocation(line: 113, column: 21, scope: !38, inlinedAt: !58)
!61 = !DILocation(line: 113, column: 16, scope: !38, inlinedAt: !58)
!62 = !DILocation(line: 114, column: 29, scope: !38, inlinedAt: !58)
!63 = !DILocation(line: 79, column: 20, scope: !9)
!64 = !DILocation(line: 80, column: 24, scope: !9)
!65 = !DILocation(line: 82, column: 45, scope: !9)
!66 = !DILocation(line: 290, column: 36, scope: !67, inlinedAt: !69)
!67 = distinct !DILexicalBlockFile(scope: !9, file: !68, discriminator: 0)
!68 = !DIFile(filename: "standard.py", directory: "/mnt/disk1/anaconda3/envs/pqhung/lib/python3.9/site-packages/triton/language")
!69 = !DILocation(line: 83, column: 26, scope: !9)
!70 = !DILocation(line: 260, column: 15, scope: !67, inlinedAt: !69)
!71 = !DILocation(line: 86, column: 21, scope: !9)
!72 = !DILocation(line: 87, column: 35, scope: !9)
!73 = !DILocation(line: 87, column: 32, scope: !9)
!74 = !DILocation(line: 87, column: 45, scope: !9)
!75 = !DILocation(line: 87, column: 40, scope: !9)
!76 = !DILocation(line: 87, column: 25, scope: !9)
!77 = !DILocation(line: 87, column: 57, scope: !9)
!78 = !DILocation(line: 88, column: 25, scope: !9)
!79 = !DILocation(line: 88, column: 57, scope: !9)
!80 = !DILocation(line: 88, column: 4, scope: !9)

//
// Generated by LLVM NVPTX Back-End
//

.version 8.7
.target sm_86
.address_size 64

	// .globl	triton_per_fused_add_embedding_mean_mul_pow_rsqrt_8 // -- Begin function triton_per_fused_add_embedding_mean_mul_pow_rsqrt_8
.extern .func __assertfail
(
	.param .b64 __assertfail_param_0,
	.param .b64 __assertfail_param_1,
	.param .b32 __assertfail_param_2,
	.param .b64 __assertfail_param_3,
	.param .b64 __assertfail_param_4
)
.noreturn;
.global .align 1 .b8 assertFunc_0[8] = {117, 110, 107, 110, 111, 119, 110};
.global .align 1 .b8 assertFile_0[121] = {47, 109, 110, 116, 47, 100, 105, 115, 107, 49, 47, 107, 104, 105, 101, 109, 116, 116, 47, 117, 110, 105, 118, 101, 114, 115, 97, 108, 45, 111, 102, 102, 108, 105, 110, 101, 45, 98, 98, 111, 47, 116, 111, 114, 99, 104, 105, 110, 100, 117, 99, 116, 111, 114, 95, 117, 98, 117, 110, 116, 117, 47, 98, 54, 47, 99, 98, 54, 116, 103, 55, 100, 115, 121, 113, 51, 108, 51, 52, 111, 112, 110, 107, 109, 111, 115, 53, 115, 101, 111, 98, 103, 119, 111, 122, 111, 115, 99, 53, 101, 100, 112, 53, 105, 53, 52, 100, 50, 53, 55, 111, 115, 121, 98, 118, 114, 110, 46, 112, 121};
.global .align 1 .b8 assertMessage_0[39] = {105, 110, 100, 101, 120, 32, 111, 117, 116, 32, 111, 102, 32, 98, 111, 117, 110, 100, 115, 58, 32, 48, 32, 60, 61, 32, 116, 109, 112, 52, 32, 60, 32, 51, 50, 49, 50, 56};
.extern .shared .align 16 .b8 global_smem[];
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
                                        // @triton_per_fused_add_embedding_mean_mul_pow_rsqrt_8
.visible .entry triton_per_fused_add_embedding_mean_mul_pow_rsqrt_8(
	.param .u64 .ptr .global .align 1 triton_per_fused_add_embedding_mean_mul_pow_rsqrt_8_param_0,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_embedding_mean_mul_pow_rsqrt_8_param_1,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_embedding_mean_mul_pow_rsqrt_8_param_2,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_embedding_mean_mul_pow_rsqrt_8_param_3,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_embedding_mean_mul_pow_rsqrt_8_param_4,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_embedding_mean_mul_pow_rsqrt_8_param_5,
	.param .u32 triton_per_fused_add_embedding_mean_mul_pow_rsqrt_8_param_6,
	.param .u32 triton_per_fused_add_embedding_mean_mul_pow_rsqrt_8_param_7,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_embedding_mean_mul_pow_rsqrt_8_param_8
)
.reqntid 128
{
	.reg .pred 	%p<12>;
	.reg .b32 	%r<101>;
	.reg .b64 	%rd<53>;
	.loc	1 18 0                          // cb6tg7dsyq3l34opnkmos5seobgwozosc5edp5i54d257osybvrn.py:18:0
$L__func_begin0:
	.loc	1 18 0                          // cb6tg7dsyq3l34opnkmos5seobgwozosc5edp5i54d257osybvrn.py:18:0

// %bb.0:
	ld.param.b64 	%rd31, [triton_per_fused_add_embedding_mean_mul_pow_rsqrt_8_param_0];
$L__tmp0:
	.loc	1 25 28                         // cb6tg7dsyq3l34opnkmos5seobgwozosc5edp5i54d257osybvrn.py:25:28
	mov.u32 	%r38, %ctaid.x;
	.loc	1 28 28                         // cb6tg7dsyq3l34opnkmos5seobgwozosc5edp5i54d257osybvrn.py:28:28
	mov.u32 	%r1, %tid.x;
	ld.param.b64 	%rd32, [triton_per_fused_add_embedding_mean_mul_pow_rsqrt_8_param_2];
	shl.b32 	%r39, %r1, 2;
	ld.param.b64 	%rd33, [triton_per_fused_add_embedding_mean_mul_pow_rsqrt_8_param_3];
	and.b32 	%r40, %r39, 508;
	ld.param.b64 	%rd34, [triton_per_fused_add_embedding_mean_mul_pow_rsqrt_8_param_4];
	.loc	1 30 25                         // cb6tg7dsyq3l34opnkmos5seobgwozosc5edp5i54d257osybvrn.py:30:25
	setp.lt.u32 	%p1, %r40, 384;
	.loc	1 35 30                         // cb6tg7dsyq3l34opnkmos5seobgwozosc5edp5i54d257osybvrn.py:35:30
	mul.wide.u32 	%rd35, %r38, 8;
	add.s64 	%rd8, %rd31, %rd35;
	.loc	1 35 35                         // cb6tg7dsyq3l34opnkmos5seobgwozosc5edp5i54d257osybvrn.py:35:35
	// begin inline asm
	mov.u64 %rd6, 0x0;
	createpolicy.fractional.L2::evict_last.b64 %rd6, 1.0;
	// end inline asm
	// begin inline asm
	mov.u64 %rd7, 0x0;
	ld.global.L1::evict_last.L2::cache_hint.b64 { %rd7 }, [ %rd8 + 0 ], %rd6;
	// end inline asm
	// begin inline asm
	mov.u64 %rd10, 0x0;
	createpolicy.fractional.L2::evict_last.b64 %rd10, 1.0;
	// end inline asm
	// begin inline asm
	mov.u64 %rd11, 0x0;
	ld.global.L1::evict_last.L2::cache_hint.b64 { %rd11 }, [ %rd8 + 0 ], %rd10;
	// end inline asm
	// begin inline asm
	mov.u64 %rd14, 0x0;
	createpolicy.fractional.L2::evict_last.b64 %rd14, 1.0;
	// end inline asm
	// begin inline asm
	mov.u64 %rd15, 0x0;
	ld.global.L1::evict_last.L2::cache_hint.b64 { %rd15 }, [ %rd8 + 0 ], %rd14;
	// end inline asm
	// begin inline asm
	mov.u64 %rd18, 0x0;
	createpolicy.fractional.L2::evict_last.b64 %rd18, 1.0;
	// end inline asm
	// begin inline asm
	mov.u64 %rd19, 0x0;
	ld.global.L1::evict_last.L2::cache_hint.b64 { %rd19 }, [ %rd8 + 0 ], %rd18;
	// end inline asm
	// begin inline asm
	mov.u64 %rd22, 0x0;
	createpolicy.fractional.L2::evict_last.b64 %rd22, 1.0;
	// end inline asm
	// begin inline asm
	mov.u64 %rd23, 0x0;
	ld.global.L1::evict_last.L2::cache_hint.b64 { %rd23 }, [ %rd8 + 0 ], %rd22;
	// end inline asm
	.loc	1 36 37                         // cb6tg7dsyq3l34opnkmos5seobgwozosc5edp5i54d257osybvrn.py:36:37
	mad.lo.s32 	%r41, %r38, 384, %r40;
	.loc	1 36 30                         // cb6tg7dsyq3l34opnkmos5seobgwozosc5edp5i54d257osybvrn.py:36:30
	mul.wide.s32 	%rd36, %r41, 4;
	add.s64 	%rd26, %rd32, %rd36;
	mov.b32 	%r37, 0;
	.loc	1 36 46                         // cb6tg7dsyq3l34opnkmos5seobgwozosc5edp5i54d257osybvrn.py:36:46
	// begin inline asm
	mov.u32 %r14, %r37;
	mov.u32 %r15, %r37;
	mov.u32 %r16, %r37;
	mov.u32 %r17, %r37;
	@%p1 ld.global.v4.b32 { %r14, %r15, %r16, %r17 }, [ %rd26 + 0 ];
	// end inline asm
	.loc	1 37 30                         // cb6tg7dsyq3l34opnkmos5seobgwozosc5edp5i54d257osybvrn.py:37:30
	add.s64 	%rd27, %rd33, %rd36;
	.loc	1 37 46                         // cb6tg7dsyq3l34opnkmos5seobgwozosc5edp5i54d257osybvrn.py:37:46
	// begin inline asm
	mov.u32 %r22, %r37;
	mov.u32 %r23, %r37;
	mov.u32 %r24, %r37;
	mov.u32 %r25, %r37;
	@%p1 ld.global.v4.b32 { %r22, %r23, %r24, %r25 }, [ %rd27 + 0 ];
	// end inline asm
	.loc	1 38 31                         // cb6tg7dsyq3l34opnkmos5seobgwozosc5edp5i54d257osybvrn.py:38:31
	mul.wide.u32 	%rd37, %r40, 4;
	add.s64 	%rd29, %rd34, %rd37;
	.loc	1 38 38                         // cb6tg7dsyq3l34opnkmos5seobgwozosc5edp5i54d257osybvrn.py:38:38
	// begin inline asm
	mov.u64 %rd28, 0x0;
	createpolicy.fractional.L2::evict_last.b64 %rd28, 1.0;
	// end inline asm
	// begin inline asm
	mov.u32 %r30, %r37;
	mov.u32 %r31, %r37;
	mov.u32 %r32, %r37;
	mov.u32 %r33, %r37;
	@%p1 ld.global.L1::evict_last.L2::cache_hint.v4.b32 { %r30, %r31, %r32, %r33 }, [ %rd29 + 0 ], %rd28;
	// end inline asm
	.loc	1 40 18                         // cb6tg7dsyq3l34opnkmos5seobgwozosc5edp5i54d257osybvrn.py:40:18
	add.s64 	%rd38, %rd23, 32128;
	.loc	1 41 18                         // cb6tg7dsyq3l34opnkmos5seobgwozosc5edp5i54d257osybvrn.py:41:18
	setp.lt.s64 	%p4, %rd23, 0;
	.loc	1 42 32                         // cb6tg7dsyq3l34opnkmos5seobgwozosc5edp5i54d257osybvrn.py:42:32
	selp.b64 	%rd39, %rd38, %rd23, %p4;
	.loc	1 43 36                         // cb6tg7dsyq3l34opnkmos5seobgwozosc5edp5i54d257osybvrn.py:43:36
	setp.lt.u64 	%p5, %rd39, 32128;
	.loc	1 43 51                         // cb6tg7dsyq3l34opnkmos5seobgwozosc5edp5i54d257osybvrn.py:43:51
	@%p5 bra 	$L__BB0_2;
	bra.uni 	$L__BB0_1;
$L__BB0_2:                              // %__nv_rsqrtf.exit
	.loc	1 0 51                          // cb6tg7dsyq3l34opnkmos5seobgwozosc5edp5i54d257osybvrn.py:0:51
	ld.param.b64 	%rd5, [triton_per_fused_add_embedding_mean_mul_pow_rsqrt_8_param_5];
	ld.param.b64 	%rd4, [triton_per_fused_add_embedding_mean_mul_pow_rsqrt_8_param_1];
	cvt.s64.s32 	%rd2, %r41;
	cvt.u64.u32 	%rd3, %r40;
	cvt.u32.u64 	%r60, %rd3;
	.loc	1 30 25                         // cb6tg7dsyq3l34opnkmos5seobgwozosc5edp5i54d257osybvrn.py:30:25
	setp.lt.u32 	%p6, %r60, 384;
	.loc	1 41 18                         // cb6tg7dsyq3l34opnkmos5seobgwozosc5edp5i54d257osybvrn.py:41:18
	setp.lt.s64 	%p11, %rd19, 0;
	.loc	1 40 18                         // cb6tg7dsyq3l34opnkmos5seobgwozosc5edp5i54d257osybvrn.py:40:18
	add.s64 	%rd42, %rd19, 32128;
	.loc	1 42 32                         // cb6tg7dsyq3l34opnkmos5seobgwozosc5edp5i54d257osybvrn.py:42:32
	selp.b64 	%rd43, %rd42, %rd19, %p11;
	.loc	1 28 28                         // cb6tg7dsyq3l34opnkmos5seobgwozosc5edp5i54d257osybvrn.py:28:28
	and.b32 	%r61, %r1, 31;
	.loc	1 43 51                         // cb6tg7dsyq3l34opnkmos5seobgwozosc5edp5i54d257osybvrn.py:43:51
	bar.sync 	0;
	.loc	1 44 30                         // cb6tg7dsyq3l34opnkmos5seobgwozosc5edp5i54d257osybvrn.py:44:30
	mad.lo.s64 	%rd44, %rd43, 1536, %rd4;
	shl.b64 	%rd45, %rd3, 2;
	add.s64 	%rd40, %rd44, %rd45;
	.loc	1 44 48                         // cb6tg7dsyq3l34opnkmos5seobgwozosc5edp5i54d257osybvrn.py:44:48
	// begin inline asm
	mov.u32 %r42, %r37;
	mov.u32 %r43, %r37;
	mov.u32 %r44, %r37;
	mov.u32 %r45, %r37;
	@%p6 ld.global.v4.b32 { %r42, %r43, %r44, %r45 }, [ %rd40 + 0 ];
	// end inline asm
	.loc	1 45 18                         // cb6tg7dsyq3l34opnkmos5seobgwozosc5edp5i54d257osybvrn.py:45:18
	add.f32 	%r62, %r15, %r43;
	add.f32 	%r63, %r14, %r42;
	.loc	1 46 19                         // cb6tg7dsyq3l34opnkmos5seobgwozosc5edp5i54d257osybvrn.py:46:19
	add.f32 	%r64, %r63, %r22;
	add.f32 	%r65, %r62, %r23;
	.loc	1 47 20                         // cb6tg7dsyq3l34opnkmos5seobgwozosc5edp5i54d257osybvrn.py:47:20
	mul.f32 	%r66, %r65, %r65;
	.loc	1 45 18                         // cb6tg7dsyq3l34opnkmos5seobgwozosc5edp5i54d257osybvrn.py:45:18
	add.f32 	%r67, %r16, %r44;
	add.f32 	%r68, %r17, %r45;
	.loc	1 46 19                         // cb6tg7dsyq3l34opnkmos5seobgwozosc5edp5i54d257osybvrn.py:46:19
	add.f32 	%r69, %r68, %r25;
	add.f32 	%r70, %r67, %r24;
$L__tmp1:
	.loc	2 260 15                        // standard.py:260:15 @[ cb6tg7dsyq3l34opnkmos5seobgwozosc5edp5i54d257osybvrn.py:50:59 ]
	fma.rn.f32 	%r71, %r64, %r64, %r66;
	fma.rn.f32 	%r72, %r70, %r70, %r71;
	fma.rn.f32 	%r73, %r69, %r69, %r72;
	selp.f32 	%r74, %r73, 0f00000000, %p6;
	.loc	2 290 36                        // standard.py:290:36 @[ cb6tg7dsyq3l34opnkmos5seobgwozosc5edp5i54d257osybvrn.py:50:59 ]
	shfl.sync.bfly.b32 	%r75, %r74, 16, 31, -1;
	.loc	2 260 15                        // standard.py:260:15 @[ cb6tg7dsyq3l34opnkmos5seobgwozosc5edp5i54d257osybvrn.py:50:59 ]
	add.f32 	%r76, %r74, %r75;
	.loc	2 290 36                        // standard.py:290:36 @[ cb6tg7dsyq3l34opnkmos5seobgwozosc5edp5i54d257osybvrn.py:50:59 ]
	shfl.sync.bfly.b32 	%r77, %r76, 8, 31, -1;
	.loc	2 260 15                        // standard.py:260:15 @[ cb6tg7dsyq3l34opnkmos5seobgwozosc5edp5i54d257osybvrn.py:50:59 ]
	add.f32 	%r78, %r76, %r77;
	.loc	2 290 36                        // standard.py:290:36 @[ cb6tg7dsyq3l34opnkmos5seobgwozosc5edp5i54d257osybvrn.py:50:59 ]
	shfl.sync.bfly.b32 	%r79, %r78, 4, 31, -1;
	.loc	2 260 15                        // standard.py:260:15 @[ cb6tg7dsyq3l34opnkmos5seobgwozosc5edp5i54d257osybvrn.py:50:59 ]
	add.f32 	%r80, %r78, %r79;
	.loc	2 290 36                        // standard.py:290:36 @[ cb6tg7dsyq3l34opnkmos5seobgwozosc5edp5i54d257osybvrn.py:50:59 ]
	shfl.sync.bfly.b32 	%r81, %r80, 2, 31, -1;
	.loc	2 260 15                        // standard.py:260:15 @[ cb6tg7dsyq3l34opnkmos5seobgwozosc5edp5i54d257osybvrn.py:50:59 ]
	add.f32 	%r82, %r80, %r81;
	.loc	2 290 36                        // standard.py:290:36 @[ cb6tg7dsyq3l34opnkmos5seobgwozosc5edp5i54d257osybvrn.py:50:59 ]
	shfl.sync.bfly.b32 	%r83, %r82, 1, 31, -1;
	.loc	2 260 15                        // standard.py:260:15 @[ cb6tg7dsyq3l34opnkmos5seobgwozosc5edp5i54d257osybvrn.py:50:59 ]
	add.f32 	%r51, %r82, %r83;
	.loc	2 290 36                        // standard.py:290:36 @[ cb6tg7dsyq3l34opnkmos5seobgwozosc5edp5i54d257osybvrn.py:50:59 ]
	setp.eq.s32 	%p7, %r61, 0;
	shr.u32 	%r84, %r1, 3;
	and.b32 	%r85, %r84, 12;
	mov.b32 	%r86, global_smem;
	add.s32 	%r50, %r86, %r85;
	// begin inline asm
	@%p7 st.shared.b32 [ %r50 + 0 ], %r51;
	// end inline asm
	bar.sync 	0;
	setp.lt.u32 	%p8, %r1, 4;
	add.s32 	%r53, %r86, %r39;
	// begin inline asm
	@%p8 ld.shared.b32 %r52, [ %r53 + 0 ];
	// end inline asm
	shfl.sync.bfly.b32 	%r88, %r52, 2, 31, -1;
	.loc	2 260 15                        // standard.py:260:15 @[ cb6tg7dsyq3l34opnkmos5seobgwozosc5edp5i54d257osybvrn.py:50:59 ]
	add.f32 	%r89, %r52, %r88;
	.loc	2 290 36                        // standard.py:290:36 @[ cb6tg7dsyq3l34opnkmos5seobgwozosc5edp5i54d257osybvrn.py:50:59 ]
	shfl.sync.bfly.b32 	%r90, %r89, 1, 31, -1;
	.loc	2 260 15                        // standard.py:260:15 @[ cb6tg7dsyq3l34opnkmos5seobgwozosc5edp5i54d257osybvrn.py:50:59 ]
	add.f32 	%r55, %r89, %r90;
	.loc	2 290 36                        // standard.py:290:36 @[ cb6tg7dsyq3l34opnkmos5seobgwozosc5edp5i54d257osybvrn.py:50:59 ]
	setp.eq.s32 	%p9, %r1, 0;
	// begin inline asm
	@%p9 st.shared.b32 [ %r53 + 0 ], %r55;
	// end inline asm
	bar.sync 	0;
	ld.shared.b32 	%r91, [global_smem];
$L__tmp2:
	.loc	3 66 15                         // triton_helpers.py:66:15 @[ cb6tg7dsyq3l34opnkmos5seobgwozosc5edp5i54d257osybvrn.py:50:45 ]
	add.f32 	%r92, %r91, 0f00000000;
	mov.b32 	%r93, 0f43C00000;
$L__tmp3:
	.loc	1 52 21                         // cb6tg7dsyq3l34opnkmos5seobgwozosc5edp5i54d257osybvrn.py:52:21
	div.full.f32 	%r94, %r92, %r93;
	.loc	1 54 20                         // cb6tg7dsyq3l34opnkmos5seobgwozosc5edp5i54d257osybvrn.py:54:20
	add.f32 	%r95, %r94, 0f358637BD;
	.loc	1 55 28                         // cb6tg7dsyq3l34opnkmos5seobgwozosc5edp5i54d257osybvrn.py:55:28
	rsqrt.approx.ftz.f32 	%r96, %r95;
	.loc	1 56 20                         // cb6tg7dsyq3l34opnkmos5seobgwozosc5edp5i54d257osybvrn.py:56:20
	mul.f32 	%r97, %r64, %r96;
	mul.f32 	%r98, %r65, %r96;
	mul.f32 	%r99, %r70, %r96;
	mul.f32 	%r100, %r69, %r96;
	.loc	1 57 20                         // cb6tg7dsyq3l34opnkmos5seobgwozosc5edp5i54d257osybvrn.py:57:20
	mul.f32 	%r56, %r97, %r30;
	mul.f32 	%r57, %r98, %r31;
	mul.f32 	%r58, %r99, %r32;
	mul.f32 	%r59, %r100, %r33;
	.loc	1 58 25                         // cb6tg7dsyq3l34opnkmos5seobgwozosc5edp5i54d257osybvrn.py:58:25
	shl.b64 	%rd46, %rd2, 2;
	add.s64 	%rd41, %rd5, %rd46;
	.loc	1 58 48                         // cb6tg7dsyq3l34opnkmos5seobgwozosc5edp5i54d257osybvrn.py:58:48
	// begin inline asm
	@%p6 st.global.v4.b32 [ %rd41 + 0 ], { %r56, %r57, %r58, %r59 };
	// end inline asm
	.loc	1 58 4                          // cb6tg7dsyq3l34opnkmos5seobgwozosc5edp5i54d257osybvrn.py:58:4
	ret;
$L__BB0_1:
	.loc	1 43 51                         // cb6tg7dsyq3l34opnkmos5seobgwozosc5edp5i54d257osybvrn.py:43:51
	mov.b64 	%rd47, assertMessage_0;
	cvta.global.u64 	%rd48, %rd47;
	mov.b64 	%rd49, assertFile_0;
	cvta.global.u64 	%rd50, %rd49;
	mov.b64 	%rd51, assertFunc_0;
	cvta.global.u64 	%rd52, %rd51;
	{ // callseq 0, 0
	.param .b64 param0;
	st.param.b64 	[param0], %rd48;
	.param .b64 param1;
	st.param.b64 	[param1], %rd50;
	.param .b32 param2;
	st.param.b32 	[param2], 43;
	.param .b64 param3;
	st.param.b64 	[param3], %rd52;
	.param .b64 param4;
	st.param.b64 	[param4], 1;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	} // callseq 0
	trap;
$L__tmp4:
$L__func_end0:
                                        // -- End function
}
	.file	1 "/mnt/disk1/khiemtt/universal-offline-bbo/torchinductor_ubuntu/b6/cb6tg7dsyq3l34opnkmos5seobgwozosc5edp5i54d257osybvrn.py"
	.file	2 "/mnt/disk1/anaconda3/envs/pqhung/lib/python3.9/site-packages/triton/language/standard.py"
	.file	3 "/mnt/disk1/anaconda3/envs/pqhung/lib/python3.9/site-packages/torch/_inductor/runtime/triton_helpers.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 267                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x104 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 98
.b8 54
.b8 116
.b8 103
.b8 55
.b8 100
.b8 115
.b8 121
.b8 113
.b8 51
.b8 108
.b8 51
.b8 52
.b8 111
.b8 112
.b8 110
.b8 107
.b8 109
.b8 111
.b8 115
.b8 53
.b8 115
.b8 101
.b8 111
.b8 98
.b8 103
.b8 119
.b8 111
.b8 122
.b8 111
.b8 115
.b8 99
.b8 53
.b8 101
.b8 100
.b8 112
.b8 53
.b8 105
.b8 53
.b8 52
.b8 100
.b8 50
.b8 53
.b8 55
.b8 111
.b8 115
.b8 121
.b8 98
.b8 118
.b8 114
.b8 110
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 47                                  // DW_AT_comp_dir
.b8 109
.b8 110
.b8 116
.b8 47
.b8 100
.b8 105
.b8 115
.b8 107
.b8 49
.b8 47
.b8 107
.b8 104
.b8 105
.b8 101
.b8 109
.b8 116
.b8 116
.b8 47
.b8 117
.b8 110
.b8 105
.b8 118
.b8 101
.b8 114
.b8 115
.b8 97
.b8 108
.b8 45
.b8 111
.b8 102
.b8 102
.b8 108
.b8 105
.b8 110
.b8 101
.b8 45
.b8 98
.b8 98
.b8 111
.b8 47
.b8 116
.b8 111
.b8 114
.b8 99
.b8 104
.b8 105
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 117
.b8 98
.b8 117
.b8 110
.b8 116
.b8 117
.b8 47
.b8 98
.b8 54
.b8 0
.b8 2                                   // Abbrev [2] 0x92:0x36 DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 101
.b8 114
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 97
.b8 100
.b8 100
.b8 95
.b8 101
.b8 109
.b8 98
.b8 101
.b8 100
.b8 100
.b8 105
.b8 110
.b8 103
.b8 95
.b8 109
.b8 101
.b8 97
.b8 110
.b8 95
.b8 109
.b8 117
.b8 108
.b8 95
.b8 112
.b8 111
.b8 119
.b8 95
.b8 114
.b8 115
.b8 113
.b8 114
.b8 116
.b8 95
.b8 56
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0xc8:0x46 DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 146                                // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xdd:0x18 DW_TAG_inlined_subroutine
.b32 146                                // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 50                                  // DW_AT_call_line
.b8 59                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xf5:0x18 DW_TAG_inlined_subroutine
.b32 146                                // DW_AT_abstract_origin
.b64 $L__tmp2                           // DW_AT_low_pc
.b64 $L__tmp3                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 50                                  // DW_AT_call_line
.b8 45                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
